Permission:android.permission.WRITE_CONTACTS
<com.android.contacts.CallDetailActivity$5: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onBackPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$MyCameraPickerListener: void onSharedPreferenceChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.users.UserDetailsSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$VpnSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetModel: com.android.calendar.widget.CalendarAppWidgetModel$EventInfo populateEventInfo(long,boolean,long,long,int,int,java.lang.String,java.lang.String,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthListView: void init(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$4: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$CryptKeeperSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void notifyInvalidSelection()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean handleSuddenJump(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.InLineSettingPicker$Listener: void onSettingChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void refreshSelectedContactUri()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void exitSearchUi()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void syncReloadDictionaryInternal()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$8: android.accounts.AccountManagerFuture start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void onSystemReady()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void preSendSmsWorker(com.android.mms.data.Conversation,java.lang.String,java.lang.String)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void access$300(com.android.inputmethod.latin.LatinIME,android.view.inputmethod.EditorInfo,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen$1$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void doProcessEventRawTimes(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: boolean parseItem()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void setCountryListener(android.location.CountryListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$2: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void showEmptyStateForTab(com.android.contacts.activities.ActionBarAdapter$TabState)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.FlickGestureDetector: boolean onHoverEvent(android.view.MotionEvent,com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.common.widget.GroupingListAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void completeOrCancelFolderNaming(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$8: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.ManageCachePage$1: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: int access$300(android.content.Context,long[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactEntryListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController: com.android.browser.DataController getInstance(android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: boolean hasLimitedNetworks()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void performSnooze(android.net.NetworkTemplate,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$8: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaService: boolean performSync(android.content.Context,android.accounts.Account,android.os.Bundle,android.content.SyncResult)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: int dispatchPointer(com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[])>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void screenTurnedOn()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.PieListView: void layout(int,int,boolean,float,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateProviderOverlay()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingItem: boolean changeIndex(int)>
Permission:android.permission.READ_SMS
<com.android.providers.telephony.MmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.InLineSettingPicker: boolean access$200(com.android.camera.ui.InLineSettingPicker,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void updateAllParameters()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$SipData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void deleteHistoryWhere(android.content.ContentResolver,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void toggleVisibility(int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onMoveEvent(int,int,long,com.android.inputmethod.keyboard.PointerTrackerQueue)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int access$3900(com.android.mms.ui.ComposeMessageActivity,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: long insertStatusUpdate(android.content.ContentValues)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendCallLogVcards(int,javax.obex.Operation,int,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView$UrlInputListener: void onAction(java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.OnContactBrowserActionListener: void onViewContactAction(android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.SlotView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void access$000(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.CameraPicker: void onClick(android.view.View)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView$DateListener: void onDateSet(android.widget.DatePicker,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity: void doSaveAction()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DownloadTouchIcon: void storeIcon(android.graphics.Bitmap)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ShowOrCreateActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter: void cleanup()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void loadDictionary()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.ObjectSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$12: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker,long)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: boolean isRegistered(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageOrderManager$LoadMessageListTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void <init>(com.android.calendar.CalendarActivity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: boolean removeTab(com.android.browser.Tab)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: java.io.File getDataFile()>
Permission:android.permission.CAMERA
<com.android.camera.VideoCamera: void access$700(com.android.camera.VideoCamera)>
Permission:android.permission.CAMERA
<android.hardware.Camera: void <init>()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService$Stub$Proxy: java.lang.String getDeviceId()>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage$1: void onLoadFinished(android.content.Loader,com.android.browser.AddBookmarkPage$EditBookmarkInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PrivacySettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void startUsingContactsDictionaryLocked()>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void initialize(android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: int getUndeliveredMessageCount(android.content.Context,long[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.CALL_PHONE,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarViewAdapter: void <init>(android.content.Context,int,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onSettingsKeyLongPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.test.FragmentTestActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: long getWritableEntityId()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: void invokeCodeInput(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void loadMessageForView(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updatePeople(long,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void access$3400(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.StringLogger: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarsEntity$EntityIteratorImpl: android.content.Entity next()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.EdgeView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ActionModeHandler$1: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: void selectCustomFilter()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.StateMachine$SmHandler$HaltingState: void enter()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$36: void onTextChanged(java.lang.CharSequence,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void setSelectedContactUri(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SelectAccountDialogFragment: void access$000(com.android.contacts.editor.SelectAccountDialogFragment,com.android.contacts.model.AccountWithDataSet)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$1: void onContentChanged(com.android.mms.ui.ConversationListAdapter)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController: void showContactWithoutUpdates()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener: boolean onCustomRequest(int)>
Permission:android.permission.READ_CALL_LOG,android.permission.WRITE_CALL_LOG
<com.android.contacts.calllog.CallLogFragment: void setMenuVisibility(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomServiceImpl: int getCurrentTtyMode()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SubSettings: void onBuildHeaders(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.EdgeView: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: com.android.calendar.alerts.AlertService$NotificationWrapper makeDigestNotification(android.content.Context,java.util.ArrayList,java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: long getSelectedTime()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean smsContact(android.database.Cursor)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void saveDraft(boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: void access$400(com.android.contacts.ContactsListActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void checkAddToDictionary(java.lang.CharSequence,int,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.BlackWhiteEffect: void apply(int,int,int,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView$6: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputManager$Callbacks: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.WaveView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onDownEvent(int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void access$400(com.android.contacts.ContactsListActivity)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub$Proxy: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.GrainFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManuallyWhileInBatchEdit(int,java.lang.CharSequence,int,int,android.view.inputmethod.InputConnection)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$7: boolean onKey(android.view.View,int,android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ExportProcessor: void runInternal()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardInterpreter: void onEntryEnded()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNewCallsQuery: com.android.contacts.calllog.DefaultVoicemailNotifier$NewCall[] query()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientAlternatesAdapter: java.util.HashMap getMatchingRecipients(android.content.Context,java.lang.String[])>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendStoredMultipartText(long,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void onRestoreInstanceState(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfo(com.android.mms.data.Contact)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$300(com.android.internal.policy.impl.KeyguardViewMediator,int)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: boolean isRegistered(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.DialogPicker: void onBackPressed()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SearchActivity: boolean onCreateOptionsMenu(android.view.Menu)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void resetInCallScreenMode()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Bookmarks: void addBookmark(android.content.Context,boolean,java.lang.String,java.lang.String,android.graphics.Bitmap,long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarEventModel: void <init>(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.model.ImageModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onUpEvent(int,int,long,com.android.inputmethod.keyboard.PointerTrackerQueue)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoActivity: void showContactInfo(com.android.calendar.EventInfoActivity$Attendee,android.graphics.Rect)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: java.util.List getProviders(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: void reloadAccounts()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen$TabAdapter$1: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DateTimeSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void refresh(android.text.format.Time,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader: void loadGroupMetaData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.SelectCalendarsAdapter: void doSaveAction()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V30: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler$SmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.QuickContactActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.CALL_PHONE
<com.android.phone.PhoneInterfaceManager: void enforceCallPermission()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.activity.Welcome$MainActivityLauncher: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageUtils$3$1: void run()>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.GLRootView: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void access$300(com.android.contacts.ContactsListActivity,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void checkConnectivity(com.android.providers.downloads.DownloadThread$State)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$QuickFix: void execute()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.EffectSettingPopup: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: int getDownloadFailedMessageCount(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void <init>(android.content.Context,com.android.calendar.CalendarController,android.widget.ViewSwitcher,com.android.calendar.EventLoader,int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void startDisambiguationQuery(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$14: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void loadDictionary()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SimpleImageFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DataUsageSummaryActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: void checkReadAccountsPermission()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void access$800(com.android.phone.sip.SipSettings,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity$ContactBrowserActionListener: void onInvalidSelection()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneFavoriteMergedAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void doStart(android.os.Bundle,android.content.Intent,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PickerActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void syncReloadDictionaryInternal()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void displayOnHoldCallStatus(com.android.internal.telephony.Phone,com.android.internal.telephony.Call)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void updateFragmentVisibility()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader: void deliverResult(java.lang.Object)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder: void startRecording()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.RecentCallsListActivity: void startQuery()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.CrossProcessEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void startLongPressTimer(com.android.inputmethod.keyboard.Key)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$6: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: android.net.Uri getUriForFolder(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void updateShouldCaptureThumbnails()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager: void snoozePolicy(android.net.NetworkTemplate)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.Gallery: void initializeByIntent()>
Permission:android.permission.GET_ACCOUNTS
<android.content.ContentService: android.content.SyncManager getSyncManager()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.BaseRawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.Gallery: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void onPause()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.CameraScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ImapStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.SettingsPreferenceFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.RecipientAdapter: android.database.Cursor access$100(com.android.ex.chips.BaseRecipientAdapter,java.lang.CharSequence,int,java.lang.Long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPicker: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: void onStart()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: android.database.Cursor queryPhoneNumbers(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: com.android.browser.Tab createNewTab()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$5: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthListView: void <init>(android.content.Context)>
Permission:android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor getThumb(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,java.lang.String,long,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.widget.CompositeCursorAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$7: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactPickerFragment: void prepareEmptyView()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountServerBaseFragment$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void internalSwapCalls()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.DeviceProfilesSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void doShareVisibleContacts()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$3: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void access$500(com.android.phone.sip.SipSettings,android.net.sip.SipProfile)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void eventsChanged()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void drawAfterScroll(android.graphics.Canvas)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin: void invalidateTokens()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: void <init>(android.content.Context,java.util.List,com.android.contacts.list.ContactListFilter)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.Gallery: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.WaveView: void setGrabbedState(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.OneTimeInitializer: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithRfc822Address(java.util.Collection)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS,android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.UiccSmsController: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void blockMarkAsRead(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactTileView$Listener: void onClick(com.android.contacts.list.ContactTileView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$1300(com.android.server.net.NetworkPolicyManagerService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity: void joinAggregate(long)>
Permission:android.permission.CALL_PHONE
<com.android.phone.PhoneInterfaceManager: boolean endCallForSubscriber(int)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void configureListFragment()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void onLongTap(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: boolean init()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMoreKeysKeyboardIfRequired(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$OrganizationData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$4: void onAnimationEnd(android.animation.Animator)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SecuritySettings: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void setIntentExtras(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterLoader: java.util.List loadInBackground()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView$SimpleListener: void onSingleTapUp(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ImportVCardActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void openDialer(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProfileAndContactsLoader: android.database.MatrixCursor loadProfile()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.GroupEditorActivity$1: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter: void setSyncKey(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$6: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorUtils: void <init>(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BlackWhiteFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SharpenFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$2: void onSimLockChangedResponse(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.Utility$ForEachAccount: void onPostExecute(java.lang.Object)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$KeyQ: boolean preprocessEvent(com.android.server.InputDevice,android.view.RawInputEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageUseActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: java.lang.String createOneEntryInternal(java.lang.String,java.lang.reflect.Method)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.CropImage: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$700(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SoundSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController$EventHandler: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity$2: void onPostExecute(java.util.ArrayList)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: boolean initNextView(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader: void deliverResult(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.preferences.GeneralPreferencesFragment$GetAccountsTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameFetch: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void startPhotoQuery(long,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.Editor$EditorListener: void onRequest(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: boolean parseOneVCard(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: void <init>(android.app.Activity,com.android.browser.UiController)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: void postNotification(android.content.Context,android.content.SharedPreferences,java.lang.String,java.lang.String,int,boolean,boolean,long,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.StateMachine$SmHandler: void processMsg(android.os.Message)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: java.util.List getActiveSubscriptionInfoList()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void onJoinCompleted(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commit()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void reloadEvents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: java.lang.String getNotificationIndDetails(android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$3000(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.RECORD_AUDIO
<android.inputmethodservice.KeyboardView$OnKeyboardActionListener: void swipeDown()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.CountryDetectorBase: void stop()>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AdaptiveBackground: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListAdapter: int getSelectedGroupPosition()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onCdmaCallWaitingReject()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventLoader$LoadEventsRequest: void processRequest(com.android.calendar.EventLoader)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void access$600(com.android.calendar.EventInfoFragment,android.view.View)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataAdapter: void resume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void setRestrictBackground(boolean)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: boolean isOpened(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void access$000(com.android.mms.ui.ConversationList)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void doDown(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void onLongTap(int)>
Permission:android.permission.READ_CONTACTS
<com.android.voicedialer.VoiceDialerActivity$2: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.FetchUrlMimeType: void onPostExecute(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void displayMainCallStatus(com.android.internal.telephony.Phone,com.android.internal.telephony.Call)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: com.android.browser.Tab openTabToHomePage()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.CameraScreenNail$Listener: void onPreviewTextureCopied()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.quickcontact.QuickContactActivity: void bindData(android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void persistThumbnail()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void updateView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$RunningServicesActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void onLoadMoreMessages()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updateExtensions(long,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void refresh(android.text.format.Time,long,java.lang.String,boolean,boolean)>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer: boolean createOneEntry()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.NotificationController: android.app.Notification createNewMessageNotification(long,long,long,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$VpnSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$2: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.SurfaceTextureTarget: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.PhotoSelectionHandler: void onClick(android.view.View)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void initializeEffectsPreview()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceId()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: java.util.List getPhoneAccountsSupportingScheme(java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void pickSuggestionManually(int,java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceAdminSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.CALL_PHONE
<com.android.phone.PhoneInterfaceManager: boolean endCallForSubscriber(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView: void onOptionalFieldVisibilityChange()>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView$2: void onCodeInput(int,int[],int,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: java.lang.String generateSaveFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$AccountObserver$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult redial()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.SurfaceTextureSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void onStartInputView(android.os.IBinder)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object executeAndWait(java.util.concurrent.Callable)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void onPause()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void bindEditors()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter: int getEstimate(java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.DuotoneEffect: void apply(int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLRootView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.XLargeUi: boolean onBackKey()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void setPrefsEnabledState(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AccountSyncSettings: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTag()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService: void setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.Account,boolean,boolean,boolean,android.accounts.AccountManagerCallback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$2: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.OpenDownloadReceiver$1: void run()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.calllog.CallLogQueryHandler: void fetchCalls(int,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.ManageAccountsSettings: void onResume()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.BaseStatusBar: void createAndAddWindows()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void internalHangup()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.ui.SurfaceTargetFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder$5: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void setSelected(android.text.format.Time,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager: void onUserRemoved(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo access$800(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$8: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void joinAggregate(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.accounts.AccountPreferenceBase: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void forceUpdate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.QuickContactDivot: void assignContactFromPhone(java.lang.String,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void deleteRepeatingEvent(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.INSTALL_LOCATION_PROVIDER,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void reportLocation(android.location.Location,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: android.view.View updateAttendeeView(com.android.calendar.event.EditEventHelper$AttendeeItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView$Listener: void pickSuggestionManually(int,java.lang.CharSequence)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.quickcontact.DataAction: void <init>(android.content.Context,java.lang.String,com.android.contacts.model.DataKind,long,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.ContextMenuAdapter: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void access$3000(com.android.calendar.DayView,android.view.MotionEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleWeekView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.NegativeFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.UiccPhoneBookController: java.util.List getAdnRecordsInEfForSubscriber(int,int)>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager: void access$700(android.content.SyncManager,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DateTimeSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$MyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.net.NetworkPolicyEditor: void write(android.net.NetworkPolicy[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceSvn()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor openFileAndEnforcePathPermissionsHelper(android.net.Uri,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$3: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.GLRootView: void onDrawFrameLocked(javax.microedition.khronos.opengles.GL10)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService: void reconcilePopImapAccountsSync(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$1: void onUserChanged(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: com.android.calendar.widget.CalendarAppWidgetModel buildAppWidgetModel(android.content.Context,android.database.Cursor,java.lang.String)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider: boolean updateIccRecordInEf(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: java.util.List getSubInfoUsingSlotId(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: void setUseQuickControls(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.database.Cursor doFilter(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void deleteThumbnail()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity: void dismissAlarm(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void access$300(com.android.contacts.ContactsListActivity,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ActionBarAdapter$MyTabListener: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDelta: void buildDiff(java.util.ArrayList)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void access$000(com.android.server.net.NetworkStatsService)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void <init>(com.android.browser.WebViewController,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PatternUnlockScreen$2: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService: void setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.EmailContent$Account,boolean,boolean,boolean,android.accounts.AccountManagerCallback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: boolean dispatchKeyEvent(android.view.KeyEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: android.view.View switchViews(boolean,float,float)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BlackWhiteFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView: com.android.gallery3d.ui.PhotoFallbackEffect buildFallbackEffect(com.android.gallery3d.ui.GLView,com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_SMS
<com.android.mms.model.AudioModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void startReceivingLocationUpdates()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo: void sendIntentIfRequested()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateRingingCall(com.android.internal.telephony.Phone)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProfileAndContactsLoader: java.lang.Object loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void viewContact(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails access$300(com.android.contacts.CallDetailActivity,android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: void closeCurrentTab()>
Permission:android.permission.READ_SMS
<com.android.mms.util.PduLoaderManager$PduTask: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: void showMEIDPanel(android.content.Context,boolean)>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void initView(com.android.calendar.CalendarView)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$2800(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$2: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.CallbackFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: com.android.contacts.list.ContactListFilterController createContactListFilterController(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Long doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void generateBinaryDictionary()>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: boolean invokeOnKey(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewManager: void show()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Event: void loadEvents(android.content.Context,java.util.ArrayList,int,int,int,java.util.concurrent.atomic.AtomicInteger)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector$1: void onCountryDetected(android.location.Country)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean dispatchHoverEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: int setAttachment(int,android.net.Uri,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfoUnchecked(android.net.NetworkState)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: boolean revert()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListFragment: void bindGroupList()>
Permission:android.permission.READ_PHONE_STATE
<com.android.systemui.net.NetworkOverLimitActivity: void snoozePolicy(android.net.NetworkTemplate)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.JoinContactListFragment: void prepareEmptyView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: void handleActionMove(android.view.MotionEvent)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void asyncDeleteDraftMmsMessage(com.android.mms.data.Conversation)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$100(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void onDrawerClosed()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView$SimpleListener: void onLongTap(int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$3000(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1200(com.android.internal.policy.impl.KeyguardViewMediator,com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void addToUserUnigramAndBigramDictionaries(java.lang.CharSequence,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactBrowseListFragment: boolean isSyncActive()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void access$1100(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateAfterRadioTechnologyChange()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailTabCarousel: void loadData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ColorTemperatureFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterController$ContactListFilterListener: void onContactListFilterChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.FaceUnlock: void handleCancel()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void finish()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity: void onMenuEditNumberBeforeCall(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: int deleteData(long,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountPreferenceBase: void updateAuthDescriptions()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider: boolean addIccRecordToEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$4: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarReceiver$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onPreviewTextureCopied()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean copyMedia(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init>(android.content.Context,android.view.View,int,boolean,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity: void displayPhoto()>
Permission:android.permission.GET_ACCOUNTS
<com.android.emailcommon.utility.AccountReconciler: boolean reconcileAccounts(android.content.Context,java.util.List,android.accounts.Account[],android.content.ContentResolver)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getMsisdn()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void access$4100(com.android.calendar.EventInfoFragment)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.LocationManager: void recordLocation(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$900(com.android.camera.Camera)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$600(com.android.camera.VideoCamera)>
Permission:android.permission.READ_PHONE_STATE
<android.net.IConnectivityManager: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>
Permission:android.permission.USE_SIP
<com.android.phone.SipCallOptionHandler: void createSipPhoneIfNeeded(android.net.sip.SipProfile)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyTq(android.view.RawInputEvent,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.CropImage: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.CustomContactListFilterActivity: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleBackspace(int)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncParser: boolean parse()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler: void deleteMessagesForThread(android.content.Context,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider: boolean deleteIccRecordFromEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PRECISE_PHONE_STATE,android.permission.READ_PRIVILEGED_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.server.TelephonyRegistry: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.deprecated.LanguageSwitcherProxy: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AccountsChangedReceiver$DeleteRemovedAccounts: void delete(android.content.ContentResolver,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: boolean doJoinContactAction()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectCalendarsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.MobileNetworkSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: java.lang.String getMessageDetails(android.content.Context,android.database.Cursor,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: android.view.View constructAttendeeView(com.android.calendar.event.EditEventHelper$AttendeeItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptKeyTi(android.view.WindowManagerPolicy$WindowState,int,int,boolean,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void selectDefaultContact()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SecuritySettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleServiceCategoryProgramData(com.android.internal.telephony.cdma.SmsMessage)>
Permission:android.permission.READ_SMS
<com.android.mms.model.TextModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserHistoryPage$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void dismissCallScreen()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[],java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: int moveOutboxMessagesToFailedBox()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: android.content.ContentProviderOperation buildDiff()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectCalendarsFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingKnob: boolean changeIndex(int)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.UiccSmsController: boolean copyMessageToIccEfForSubscriber(long,java.lang.String,int,byte[],byte[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.DialogPicker: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: java.lang.String verifySingleRecipient(android.content.Context,long,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<android.util.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: boolean onCustomRequest(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: android.net.Uri getContactUriForPhoneNumber(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: android.view.View switchViews(boolean,float,float)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$20: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void onCreate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int delete(android.net.Uri,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$2: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ImportExportDialogFragment: void access$100(com.android.contacts.interactions.ImportExportDialogFragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void access$300(com.android.contacts.editor.ContactEditorFragment,android.content.Context,com.android.contacts.editor.RawContactEditorView)>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventView: void setModel(com.android.calendar.CalendarEventModel)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: boolean queueQuery(com.android.calendar.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardActionListener: void onCodeInput(int,int[],int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: void access$1400(com.android.contacts.activities.PeopleActivity,android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.ui.SurfaceRenderFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPage$2: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_SMS
<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getRegionMediaModel(android.content.Context,java.lang.String,java.lang.String,org.w3c.dom.smil.SMILRegionMediaElement,com.android.mms.model.LayoutModel,com.google.android.mms.pdu.PduPart)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub: void snoozePolicy(android.net.NetworkTemplate)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MailboxFinder$FindMailboxTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.CALL_PHONE
<com.android.internal.telephony.ITelephony: void call(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void access$500(com.android.calendar.alerts.AlertActivity,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.UndoBarView: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void generateBinaryDictionary()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLView: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListFragment$3: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.NameConverter: java.util.Map displayNameToStructuredName(android.content.Context,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: android.net.Uri buildQueryUri(int,int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.VoicemailNotifier: void updateNotification(android.net.Uri)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameBranch: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CrossProcessFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void loadDictionary()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<android.bluetooth.HeadsetBase: void handleInput(java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkStatsService: void forceUpdate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$DownloadBase: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Tab$7: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.PanoramaActivity: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean haveSomethingToCopyToSDCard(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocalePickerActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean callSelection()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorControlContainer: void onSettingChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void chooseUpstreamType(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.development.Connectivity$3: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean handleForwardedMessage()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleWeeksAdapter: void refresh()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: void loadStreamItems(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Observable: void notifyObservers()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: boolean isApplicable()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataAdapter$ReloadTask: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekAdapter: void updateParams(java.util.HashMap)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.READ_CALENDAR
<android.content.CursorEntityIterator: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onCreate()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init>(android.content.Context,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: boolean isSyncEnabled(java.lang.String,com.cooliris.picasa.PicasaContentProvider$SyncContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onContactListFilterChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PieControl$1: void onLayout(int,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startDeleteAll(android.content.AsyncQueryHandler,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onClickHandler(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOff(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.BluetoothFindNearby: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: com.android.phone.InCallScreen$InCallInitStatus placeCall(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$InputMonitor: boolean interceptKeyBeforeDispatching(android.view.InputChannel,int,int,int,int,int,int,int)>
Permission:android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyContactImporter: void insertCall(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void loadSettings()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.browser.AutofillHandler$LoadFromDb: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void resume()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity: void onStop()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.QuickContactDivot: void assignContactFromEmail(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ActionBarAdapter: void setCurrentTab(com.android.contacts.activities.ActionBarAdapter$TabState,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void doQuery(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncAdapter: void cleanup()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.preference.YesNoPreference: void onDialogClosed(boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.RetryScheduler: void update(com.android.mms.transaction.Observable)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen$4: void onClick(android.view.View)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.ContrastEffect: void apply(int,int,int,int)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet: void access$800(com.android.email.service.AttachmentDownloadService$DownloadSet)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS
<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendTextForSubscriber(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactsIntentResolver: com.android.contacts.list.ContactsRequest resolveIntent(android.content.Intent)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: boolean access$300(com.android.inputmethod.keyboard.KeyboardView,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$6300(com.android.camera.Camera)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactBrowseListFragment$ContactUriQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.VoiceProxy$6: void onPostExecute(java.lang.Object)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void createExceptionResponse(android.content.ContentResolver,long,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactsUnavailableFragment: void setMessageText(int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$MyHeadUpDisplayListener$3: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo insertDownloadLocked(com.android.providers.downloads.DownloadInfo$Reader,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void bindCommonMessage(com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean checkProviderState(boolean)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void swipeDown()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: void onAttachedToWindow()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationListAdapter: void onContentChanged()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageCombineFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector$6: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.ManageAccountsSettings: void onStart()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment: void startQuery()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void reportProgress(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$NicknameData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager: void access$100(com.android.providers.downloads.StorageManager)>
Permission:android.permission.READ_SMS
<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getGenericMediaModel(android.content.Context,java.lang.String,java.lang.String,org.w3c.dom.smil.SMILMediaElement,com.google.android.mms.pdu.PduPart,com.android.mms.model.RegionModel)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeMotionWhenKeyguardShowingTq()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleDayPickerFragment: void setUpAdapter()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetModel: com.android.calendar.widget.CalendarAppWidgetModel$DayInfo populateDayInfo(int,android.text.format.Time)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void stopVideoRecordingAndReturn(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void setAllDayViewsVisibility(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean smsContact(android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.CalendarSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean isForwardable(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageFileView$LoadFilenameTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: android.net.sip.ISipSession getPendingSession(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.WallpaperTypeSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$WMThread: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updateOrganizations(long,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts: void actuallyImportOneSimContact(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void onCreate()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void updateEventDetails()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.QuickContactWindow: android.net.Uri getDataUri(android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void initFilmStripView()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getDataUri(int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$DeleteThreadListener$1: void run()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.tablet.TabletStatusBar: void createAndAddWindows()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact(com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterController: void checkFilterValidity(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: void addAttendees(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: boolean checkOtaspStateOnResume()>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$EventsEntity$EntityIteratorImpl: android.content.Entity next()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: java.lang.String checkPermissionsSafe(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: boolean onCustomRequest(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.ReverseGeocoder: void <init>(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void goToUnlockScreen()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.grass.GrassRS: void access$300(com.android.wallpaper.grass.GrassRS)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$2: void onLoaderReset(android.content.Loader)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: void onPostExecute(com.android.contacts.ui.EditContactActivity,com.android.contacts.model.EntitySet)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactSelectionActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void addSmsNotificationInfos(android.content.Context,java.util.Set)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void onUserChanged(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.String doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.SurfaceTextureScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.CalendarController: void sendEventRelatedEventWithExtra(java.lang.Object,long,long,long,long,int,int,long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallContactActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void doOnResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListAdapter: void setCursor(android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.DefaultContactBrowseListFragment: boolean isSyncActive()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.ContactsSyncAdapter: void <init>(com.android.exchange.EasSyncService)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.FillLightEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: void resume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhotoEditorView$1: void onClick(android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$25: void onTextChanged(java.lang.CharSequence,int,int,int)>
Permission:android.permission.READ_SYNC_STATS,android.permission.GET_ACCOUNTS,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.content.ContentService: java.util.List getCurrentSyncsAsUser(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: void onDestroy()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.CallbackFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onPause()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onMaxPendingMessagesReached()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.DictionaryCollection: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: void deleteDownload(android.content.Context,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: void loadPhoto()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int updateInTable(java.lang.String,android.content.ContentValues,android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.NfcImportVCardActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastRange(int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void onClick(android.view.View)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SearchActivity$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.DialtactsActivity$7: boolean onQueryTextChange(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportProcessor: void runInternal()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.NegativeFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper$5: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.Controller$14: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void access$000(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector$2: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.PieMenu$PieView$OnLayoutListener: void onLayout(int,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void displaySecondaryCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub$Proxy: boolean isNetworkMetered(android.net.NetworkState)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.FilterDeleteSet: long reload()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils$2$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.dialog.ClearFrequentsDialog$1$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback: void unlock()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$2: void onSingleTapUp(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.grass.GrassRS: void updateLocation()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.GLTextureSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNameLookupQuery: java.lang.String query(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void reloadEvents()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void takeEmergencyCallAction()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler$1: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void <init>(android.content.Context,int,java.util.Locale)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: android.os.Bundle getProviderInfo(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListFragment: void access$400(com.android.contacts.group.GroupBrowseListFragment)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SuggestionsAdapter$CompletionListener: void onSelect(java.lang.String,int,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailLayoutController: void showContactWithUpdates()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteMatchingCalendars(java.lang.String,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AccountPreferenceBase: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.MediaFeed: void access$500(com.cooliris.media.MediaFeed)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateState(com.android.internal.telephony.Phone)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void loadDictionaryAsync()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterLoader: java.lang.Object loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo queryContactInfoForSipAddress(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void afterTextChanged(android.text.Editable)>
Permission:android.permission.READ_CONTACTS
<com.android.calendar.EventInfoActivity: void updateAttendees()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageStitcher: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getSubscriberId()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void chooseUpstreamType(boolean)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AccountsChangedReceiver$DeleteRemovedAccounts: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactTileAdapter$Listener: void onContactSelected(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DirectoryListLoader: android.database.Cursor loadInBackground()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceAdminSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: int deleteData(java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: boolean hasAutoCorrectionForTypedWord(java.util.Map,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.PrivacySettings: void onCreate(android.os.Bundle)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void access$900(com.android.phone.sip.SipSettings)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$2: void onSuccess(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientChip selectChip(com.android.ex.chips.RecipientChip)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: boolean onQueryTextSubmit(java.lang.String)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsSingleRecipientSender: void <init>(android.content.Context,java.lang.String[],java.lang.String,long)>
Permission:android.permission.READ_SMS
<com.android.mms.model.RegionMediaModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.BitmapOverlayEffect: void apply(int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.ClusterAlbum: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.CustomContactListFilterActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.MODIFY_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setIconTint(int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DrawOverlayFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Preloader$PreloaderSession: void <init>(com.android.browser.Preloader,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: void swipeDown()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: com.android.calendar.AgendaWindowAdapter$EventInfo getEventByPosition(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToGrayFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet: void startDownload(android.content.Intent,com.android.email.service.AttachmentDownloadService$DownloadRequest)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void addImage(android.net.Uri,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.StraightenFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onRemovePictureChosen()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.fall.FallView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView$1: boolean onDoubleTapEvent(android.view.MotionEvent)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void access$100(com.android.settings.DevelopmentSettings)>
Permission:android.permission.READ_PHONE_STATE
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
Permission:android.permission.RECEIVE_SMS
<com.android.providers.telephony.SmsProvider: android.database.Cursor getSingleMessageFromIcc(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeKeyWhenKeyguardShowingTq(int,boolean)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MiniKeyboardView$1: boolean onCustomRequest(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.ScrollBarView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void goToUnlockScreen()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void onRefresh(boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<android.util.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.webkit.GeolocationService: void registerForLocationUpdates()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: com.android.browser.Tab openIncognitoTab()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayName(java.lang.String,long)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewBase: boolean dispatchKeyEvent(android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void userActivity(android.view.View)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.Controller$7: void run()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages: void startQuery()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void pokeWakelock()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.voicedialer.CommandRecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onShowMoreKeysPanel(int,int,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.MediaSetSource: android.graphics.Bitmap getImage(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.READ_SMS
<com.android.mms.MmsApp: void onCreate()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub: android.net.NetworkPolicy[] getNetworkPolicies()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter: void presentFirstSlide(com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void onResume()>
Permission:android.permission.SEND_SMS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiP2pSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.SepiaEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult headsetButtonPress()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailUpdatesFragment$1: void onClick(android.view.View)>
Permission:android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyContactImporter: void importCalls()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void setPhoto(long,android.graphics.Bitmap,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$1: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ActionBarAdapter$Listener: void onSelectedTabChanged()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void init(com.android.inputmethod.latin.LatinIME,android.content.SharedPreferences)>
Permission:android.permission.READ_PHONE_STATE
<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void generateBinaryDictionary()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: boolean onNavigationItemSelected(int,long)>
Permission:android.permission.READ_SMS
<com.android.mms.util.DownloadManager: java.lang.String access$400(com.android.mms.util.DownloadManager,android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation$3: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: void syncUsersAndAlbums(boolean,android.content.SyncResult)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.RetrieveTransaction: boolean isDuplicateMessage(android.content.Context,com.google.android.mms.pdu.RetrieveConf)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.vcard.SelectAccountActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateNoCall(com.android.internal.telephony.CallManager)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ActionBarAdapter: void setCurrentTab(com.android.contacts.activities.ActionBarAdapter$TabState)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void reallyStartListening(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSerialNumber()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowSpcErrorNotice(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter: void initialize(android.os.Bundle,com.android.contacts.list.ContactsRequest)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void startMsgListQuery(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook: android.bluetooth.AtCommandResult processCpbrCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.JoinContactListFragment: boolean isSyncActive()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<android.telephony.gsm.SmsManager: boolean copyMessageToSim(byte[],byte[],int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.emailcommon.service.IAccountService: void restoreAccountsIfNeeded()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ShowOrCreateActivity: void onStart()>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void detectAndSendKey(com.android.inputmethod.keyboard.Key,int,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void launchSettings(java.lang.Class)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updatePhoto(long,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void search(java.lang.String,android.text.format.Time)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardStatusViewManager: void <init>(android.view.View,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardScreenCallback,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CALENDAR
<android.provider.ContactsContract$Groups$EntityIteratorImpl: java.lang.Object next()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void internalHangupRingingCall()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.SelectAccountActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.CropImage: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AccountsChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$2: void startTask()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Observer: void update(com.android.mms.transaction.Observable)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void onTypeSelectionChange(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void queryPhotosForPreload()>
Permission:android.permission.CALL_PHONE
<com.android.phone.PhoneInterfaceManager: boolean endCall()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void selectFirstFoundContactAfterDelay()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.CalendarSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.DownloadHandler: void onDownloadStart(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ImportExportInteraction: void access$200(com.android.contacts.interactions.ImportExportInteraction)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,android.net.Uri,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_NETWORK_STATE,android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarAlerts: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.PanoramaActivity: void onPreviewTextureCopied()>
Permission:android.permission.READ_EXTERNAL_STORAGE,android.permission.ACCESS_CACHE_FILESYSTEM,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter$1: void onItemLoaded(java.lang.Object,java.lang.Throwable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettingsInAddAccount: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onStopVideoRecording()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook: boolean queryPhonebook(java.lang.String,com.android.phone.BluetoothAtPhonebook$PhonebookResult)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ColorTemperatureFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void deleteAccountPIMData(long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.TransactionSafeActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void sendCdmaCallWaitingReject()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$UserDictionarySettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.EntityDelta: com.android.contacts.model.AccountType getRawContactAccountType(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void onUpPressed()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void handleEndOfStream(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void goTo(long,boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void checkSelection()>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$7: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallTouchUi: void onClick(android.view.View)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void access$1000(com.android.calendar.DeleteEventHelper,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder: void startPreview()>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void initAttendeesCursor(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.WeakAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.vpn.VpnSettings: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getPhonebookNameList(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.FilmStripView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void handleOtaEvents(android.os.Message)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.activity.setup.AccountSetupOptions: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.model.AccountTypeManagerImpl$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.Photographs: void onCreate(android.os.Bundle)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.MessageStatusService: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean invokeOnKey(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: boolean hangup(com.android.internal.telephony.CallManager)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: boolean setSelectionFromPosition(int,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.CropEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void setSearchMode(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void notifyInvalidSelection()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void access$2400(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$AccountObserver: void onAccountChanged()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage(android.content.Context,android.telephony.SmsMessage[],int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.CameraSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void access$200(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void requestCloseSpcErrorNotice(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$15: void onCancel(android.content.DialogInterface)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BlendFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallController: void placeCall(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.quickcontact.QuickContactActivity: void access$400(com.android.contacts.quickcontact.QuickContactActivity,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapOverlayFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$2500(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: java.lang.Boolean doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$EventsEntity$EntityIteratorImpl: java.lang.Object next()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcast(int,int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$17: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void onStop()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessagesAdapter$MessagesCursorLoader: android.database.Cursor loadInBackground()>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ClearCallLogDialog$1$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationListAdapter$OnContentChangedListener: void onContentChanged(com.android.mms.ui.ConversationListAdapter)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void onResume()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.deskclock.AlarmKlaxon: void onCreate()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void access$2100(com.android.email.activity.MessageListFragment)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,com.android.mms.data.ContactList,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: void performBackgroundTask(int,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$PersistTask: java.lang.Integer doInBackground(com.android.contacts.ui.EditContactActivity,com.android.contacts.model.EntitySet[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: boolean onItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity: java.lang.String getBetterNumberFromContacts(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.DialogPicker: void onPause()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceId()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: void notifyObservers()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean addNmeaListener(android.location.OnNmeaMessageListener)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameSource: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogListItemHelper: java.lang.CharSequence getCallActionDescription(com.android.contacts.PhoneCallDetails)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.voicedialer.CommandRecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails access$100(com.android.contacts.CallDetailActivity,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.EmailAddressAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int getDrmMimeMenuStringRsrc(long)>
Permission:android.permission.READ_SMS
<com.android.mms.model.ImageModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: boolean doLidChangeTq(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$100(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.quickcontact.QuickContactActivity$4: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri getContactUri(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: void notifyCellAdded()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: com.android.email.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.email.provider.EmailContent$Account,java.lang.String)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter: boolean onClose()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsApplication: void onCreate()>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void enableKeyguard(boolean)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void hideWindow()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri getContactUri(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy$KeyboardFlickGestureDetector: void access$000(com.android.inputmethod.accessibility.FlickGestureDetector,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$PersistTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageListAdapter: void onContentChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.TelephonyRegistry: void checkListenerPermission(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyContactImporter: void importContactsFromLegacyDb()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void reloadDataAndSetSelectedUri(android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onNewIntent(android.content.Intent)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService$5: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void processActiveProfilesFromSipService()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void sendFirstQueuedMessage()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addImage(android.net.Uri,boolean)>
Permission:android.permission.CALL_PHONE
<com.android.internal.telephony.ITelephony$Stub: boolean endCall()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity$6: boolean onQueryTextChange(java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.PicasaDataSource: void loadMediaSets(com.cooliris.media.MediaFeed)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$900(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void onCreate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: boolean access$300(com.android.contacts.calllog.CallLogAdapter,java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ApplicationSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataAdapter: java.lang.Object access$1700(com.android.gallery3d.app.AlbumDataAdapter,java.util.concurrent.Callable)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook: android.bluetooth.AtCommandResult access$1000(com.android.phone.BluetoothAtPhonebook)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$12: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void commit()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactEntryListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity: void doContactDelete(android.net.Uri)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.ToUpperCase: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void startQuery()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.LocationBasedCountryDetector: void setCountryListener(android.location.CountryListener)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: android.net.Uri getUri(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet: boolean tryStartDownload(com.android.email.service.AttachmentDownloadService$DownloadRequest)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$1: void onSuccess(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact(android.accounts.Account,com.android.contacts.model.AccountType)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$SaveSnapshotTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onResume()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void initializeVideoSnapshot()>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void swipeDown()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.CALL_PHONE,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SepiaFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: com.android.phone.NotificationMgr init(com.android.phone.PhoneApp)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void updateTitle()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageList$1: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onOtaProvisionStatusChanged(android.os.AsyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogFragment: void startCallsQuery()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void <init>(com.android.browser.WebViewController,android.webkit.WebView)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.development.Connectivity: void onCrash()>
Permission:android.permission.CALL_PHONE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void dialRecipient()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler$SmsRecycler: boolean anyThreadOverLimit(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SelectCalendarsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void launchSettings()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void trimDatabase()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void hideDialpadInternal(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailUpdatesFragment: com.android.contacts.model.AccountType access$000(com.android.contacts.detail.ContactDetailUpdatesFragment,com.android.contacts.util.StreamItemEntry)>
Permission:android.permission.RECORD_AUDIO
<com.android.internal.widget.PasswordEntryKeyboardView: void swipeDown()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void initializeViews()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mail.providers.UIProvider: void incrementRecipientsTimesContacted(android.content.Context,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: void updateViewConfiguration(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.SEND_SMS,android.permission.READ_EXTERNAL_STORAGE
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsUtils: android.graphics.Bitmap loadContactPhoto(android.content.Context,long,android.graphics.BitmapFactory$Options)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncAdapter: void setSyncKey(java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.contacts.ContactsProvider2: boolean initialize()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: boolean loadFromThreadId(long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMiniKeyboardIfRequired(int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent$DateListener: void onDateSet(android.widget.DatePicker,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataLoader: void resume()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void setPreviewTexture()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.BrowserActivity$Download: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView$RecipientReplacementTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity$2: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor addSearchSuggestionsBasedOnFilter(android.database.MatrixCursor,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RotateFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BrightnessFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA
<com.android.wallpaper.walkaround.WalkAroundWallpaper$WalkAroundEngine: void onSurfaceCreated(android.view.SurfaceHolder)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.DevicePickerFragment: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void setInCallScreenMode(com.android.phone.InCallUiState$InCallScreenMode)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: byte[] getPdu(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int createList(int,int,java.lang.String,java.lang.StringBuilder,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.ItemLoadedCallback: void onItemLoaded(java.lang.Object,java.lang.Throwable)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Tab$6: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.util.JobLimiter$JobWrapper: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.emailcommon.service.IAccountService$Stub$Proxy: void restoreAccountsIfNeeded()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void handleClose()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void updateGroup(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$500(com.android.phone.InCallScreen,android.os.AsyncResult)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: byte[] getPdu(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$2: void onSuccess(java.lang.Void)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.IEmailService getService(android.content.Context,java.lang.String,com.android.emailcommon.service.IEmailServiceCallback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: void loadAccountsInBackground()>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogQueryHandler: void markNewCallsAsOld()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void putInBackground()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.provider.AccountReconciler: void reconcileAccounts(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.test.FragmentTestActivity: void onStart()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcast(int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PrivacySettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$4700(com.android.mms.ui.ComposeMessageActivity,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.PhoneNumberPickerFragment: void prepareEmptyView()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView$2: void onCodeInput(int,int[],int,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.WidgetSource: void reload()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$MyHandler: void onResetAlarm()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$Member: void <init>(long,java.lang.String,long,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: java.lang.String getActiveSubscriberId()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.ImportVCardActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.systemui.net.NetworkOverLimitActivity: void access$000(com.android.systemui.net.NetworkOverLimitActivity,android.net.NetworkTemplate)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void access$200(com.android.server.location.ComprehensiveCountryDetector)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void swipeRight()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void capture()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen$1: void onRemovePosition(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView: void clearAllFields()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionary()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: void updateNotificationAndLaunchIncomingCallUi()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean access$400(com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData,android.database.Cursor,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getMsisdn()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void dismissFiredAlarms()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.MessageStatusReceiver: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: boolean allowsToBeAutoCorrected(java.util.Map,java.lang.CharSequence,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.PowerManagerService,boolean,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarReceiver: void removeScheduledAlarms(android.content.ContentResolver)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.View makeStatusBarView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.RetryScheduler: int getResponseStatus(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.NotificationController$1: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerTwoPane$RefreshTask: void onSuccess(java.lang.Object)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceInput: void startListening(com.android.inputmethod.voice.FieldContext,boolean)>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub$Proxy: void cancel(android.speech.IRecognitionListener)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void swipeDown()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onRestart()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: boolean openPopupIfRequired(int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$7: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void confirmDeleteThread(long,android.content.AsyncQueryHandler)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void checkPin()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageListAdapter$AvatarCache$1: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<android.provider.CallLog$Calls: void removeExpiredEntries(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void access$1500(com.android.email.activity.MessageListFragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,com.android.internal.telephony.Connection)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void access$600(com.android.contacts.activities.DialtactsActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventView: void setCalendarsCursor(android.database.Cursor,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void access$1900(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$700(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void wakeWhenReadyTq(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.AggregationSuggestionEngine: void onNameChange(com.android.contacts.model.EntityDelta$ValuesDelta)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.AggregationSuggestionEngine: android.net.Uri buildAggregationSuggestionUri(com.android.contacts.model.EntityDelta$ValuesDelta)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntitySet: java.util.ArrayList buildDiff()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: long getSelectedTime()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings$ConfirmEnforceFragment$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$5400(com.android.mms.ui.ComposeMessageActivity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$2: void run()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_PHONE_STATE
<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusWatcher$2: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void blockingMarkAllMmsMessagesAsSeen(android.content.Context)>
Permission:android.permission.CAMERA
<com.android.camera.VideoCamera$MyHeadUpDisplayListener$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.Pop3Store: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: com.cooliris.picasa.UserEntry[] syncUsers(com.cooliris.picasa.PicasaContentProvider$SyncContext,android.content.SyncResult)>
Permission:android.permission.READ_SMS
<com.android.mms.util.AddressUtils: java.lang.String getFrom(android.content.Context,android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void initialize(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void handleDown(android.view.MotionEvent)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void updateSendFailedNotificationForThread(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserYesNoPreference: void onDialogClosed(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.emailcommon.service.IAccountService$Stub: void restoreAccountsIfNeeded()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowDataAdapter$SlideshowSource: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: boolean hangupRingingAndActive(com.android.internal.telephony.Phone)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: void onDownEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.UndoBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$600(com.android.server.net.NetworkPolicyManagerService)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Utils: java.lang.String formatDateRange(android.content.Context,long,long,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.Store: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void doEdit()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void checkSelection()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.SEND_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsMessageSender: boolean sendMessage(long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService$8: void runInternal(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void parseExtras()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri getSelectedUri(int)>
Permission:android.permission.GET_ACCOUNTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.PhoneWindowManager$3: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void sendMessage(long,long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void checkPendingNotification()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: boolean interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,int,int,int,int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onPhoneStateChanged(android.os.AsyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void screenTurnedOn()>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.ServiceProxy$ProxyTask: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void capture()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.RetargetFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: java.lang.String getMultimediaMessageDetails(android.content.Context,android.database.Cursor,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SubSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void onDisconnect(android.os.Message)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void serviceCheckMail(long,long,long)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$2800(com.android.camera.VideoCamera)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.net.DataUsageMeteredSettings: android.preference.Preference buildMobilePref(android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<android.provider.CalendarContract$CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarController: void launchDeleteEventAndFinish(android.app.Activity,long,long,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.database.Cursor doFilter(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DismissAllAlarmsService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactsUnavailableFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.settings.deviceinfo.Status: void onPause()>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void deleteAndUnregisterProfile(android.net.sip.SipProfile)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS
<com.android.email.activity.MessageView$PresenceCheckTask: java.lang.Integer doInBackground(java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusLoader$ProviderStatusListener: void onProviderStatusChange()>
Permission:android.permission.READ_SMS
<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$3: void startTask()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumber()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.ChooseTypeAndAccountActivity: void run(android.accounts.AccountManagerFuture)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.FaceUnlock: void handleUnlock()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void onDialerOpen()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.AccountFilterActivity: void onStart()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessagesAdapter$SearchCursorLoader: android.database.Cursor loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: java.lang.String getDrmMimeType(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController$EventHandler: void eventsChanged()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: boolean disableCellBroadcast(int)>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService: boolean access$600(android.speech.RecognitionService,android.speech.IRecognitionListener)>
Permission:android.permission.GET_ACCOUNTS
<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.tablet.TabletStatusBar: android.view.View makeStatusBarView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.AttachmentDownloadService: boolean canPrefetchForAccount(com.android.emailcommon.provider.EmailContent$Account,java.io.File)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: void onLongPressShiftKey(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void loadDictionary()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Call,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: int getPhotoPickSize()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: boolean onKeyUp(int,android.view.KeyEvent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void deleteAllFromSim()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem access$500(com.android.gallery3d.app.SlideshowDataAdapter)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.SyncRunner: int step()>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void access$400(com.android.contacts.ContactsListActivity)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<android.bluetooth.AtParser: android.bluetooth.AtCommandResult process(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity: void callEntry(int)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: boolean interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void onBackPressed()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter$QueryHandler: int processNewCursor(com.android.calendar.AgendaWindowAdapter$QuerySpec,android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Navigator: long getSelectedTime()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.CrashRecoveryHandler$2: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void handleStartListening(android.content.Intent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.GLTextureSource: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.FilmStripView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityModifier: void migrateStateForNewContact(android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType,com.android.contacts.model.AccountType)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView$8: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void setFormattedDigits(java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController: void notifyContacListFiltersLoaded()>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingKnob$3: boolean onTouch(android.view.View,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$3: boolean onActionItemClicked(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.WeakAsyncTask: void onPostExecute(java.lang.Object,java.lang.Object)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageEncoder: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$SaveSnapshotTask: java.lang.Long doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry: java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onRegisterKey(com.android.inputmethod.keyboard.Key)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarPreferenceActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void launchDebugSettings()>
Permission:android.permission.WRITE_CALL_LOG
<com.android.contacts.calllog.CallLogAdapter: void updateCallLogContactInfoCache(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,com.android.contacts.calllog.ContactInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult headsetButtonPress()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void modifyCalendarSubscription(long,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void clearHistory(android.content.ContentResolver)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.PhoneNumberHelper: boolean isVoicemailNumber(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPostalAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSetView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: boolean stopVideoRecording()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserSettings: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter: void <init>(android.content.Context,java.util.List,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType)>
Permission:android.permission.RECORD_AUDIO
<android.media.AudioRecord: void <init>(int,int,int,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.Filter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$4: void onTextChanged(java.lang.CharSequence,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader$LoadContactTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.OtherSettingsPopup: void onSettingChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.launcher2.Launcher: boolean skipCustomClingIfNoAccounts()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromPhone(java.lang.String,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.LomoishEffect: void apply(int,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactEntryListFragment: boolean isSyncActive()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.AccountService$1: void reconcileAccounts(java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProviderIntentService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity: void buildJoinContactDiff(java.util.ArrayList,long,long)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: void renewMmsConnectivity()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: void enqueueRequest(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$UIHandler: void startKeyRepeatTimer(long,int,com.android.inputmethod.latin.PointerTracker)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.SelectAccountDialogFragment$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void access$500(com.android.bluetooth.pbap.BluetoothPbapService)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastRange(int,int,int)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$CalendarAlerts: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void restoreSelectedUri(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void clearConversation(com.android.mms.data.Conversation)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment: void onAttach(android.app.Activity)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$5: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void <init>(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.EasOutboxService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.quickcontact.QuickContactActivity$5: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: void access$1900(com.android.contacts.activities.PeopleActivity)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventHelper: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void startListening(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void updateResponse(android.content.ContentResolver,long,long,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void access$900(com.android.gallery3d.app.AlbumPage,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallerInfoCache: void refreshCacheEntry()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void onClick(android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int getDrmMimeSavedStringRsrc(long,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.Invert: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageAccountsSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.vpn2.VpnSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ScrollBarView: void removeAllComponents()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void updateTitle()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.preferences.GeneralPreferencesFragment$GetAccountsTask: java.lang.String doInBackground(java.lang.Void[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountPreferenceBase: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: boolean hasContentChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupBrowseListAdapter: void <init>(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendDataForSubscriberWithSelfPermissions(int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void revertLastWord(android.view.inputmethod.InputConnection)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallCard: void updatePhotoForCallState(com.android.internal.telephony.Call)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaByDayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.RecentCallsListActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.MtpDeviceSet: void loadDevices()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$1: void doWork()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void eventsChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.LocationSettings: void onStart()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.PopImapSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: java.lang.String getContactDisplayName(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$QuickFix: boolean isApplicable()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.BasePieView: void layout(int,int,boolean,float,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.DialogPicker: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.GpsLocationProvider: void requestRefLocation(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DisplaySettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation: void blockingMarkAllSmsMessagesAsSeen(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView: void onOptionalFieldVisibilityChange()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performAction(int,int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.exchange.EasSyncService: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.PhotoSelectionHandler: void <init>(android.content.Context,android.view.View,int,boolean,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactLoaderFragment: void loadUri(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDeltaList: com.android.contacts.model.EntityDeltaList fromQuery(android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.LomoishFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: boolean onItemSelected(android.view.MenuItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void startStateForResult(java.lang.Class,int,android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.StaticBackground: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlHandler$RLZTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.activity.setup.AccountSetupOptions$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void startRfcommSocketListener()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onContactUriQueryFinished(android.net.Uri)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: void doQuery(com.android.calendar.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void <init>(com.android.calendar.CalendarActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastForSubscriber(int,int,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: void onContentChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$7: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.CAMERA
<com.android.camera.CameraHolder: android.hardware.Camera tryOpen()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.PushReceiver: boolean isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListItem$1: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SIMRecords: void handleSms(byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void initSuggest()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventView: void updateAttendees(java.util.HashMap)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$PhotoData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo: void startIfReady(long,com.android.providers.downloads.StorageManager)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void flushVoiceInputLogs(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void startRepeatKey(com.android.inputmethod.keyboard.Key)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.DefaultVoicemailNotifier: com.android.contacts.calllog.PhoneNumberHelper createPhoneNumberHelper(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean dispatchHoverEvent(android.view.MotionEvent,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageEncoder: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onCustomRingQueryComplete()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarController$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.GraphRunner: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DockSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PickerActivity: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: boolean interceptKeyBeforeDispatching(com.android.server.wm.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onSearchTextChanged()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkStatsService$Stub$Proxy: void forceUpdate()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.AccountServiceProxy$6: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: com.android.emailcommon.service.IEmailService access$100(com.android.email.Controller,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void onActivityCreated(android.os.Bundle)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceInput: void startListeningAfterInitialization(com.android.inputmethod.voice.FieldContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: boolean access$1000(com.android.contacts.activities.PeopleActivity)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CropFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void onVisibilityChanged(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOnLocked(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity: java.util.ArrayList queryForAllRawContactIds(android.content.ContentResolver,long)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager: boolean isNetworkMetered(android.net.NetworkState)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void resetDangerousOptions()>
Permission:android.permission.GET_ACCOUNTS
<android.provider.BrowserContract$Bookmarks: android.net.Uri buildFolderUri(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.PieMenu$PieView: void layout(int,int,boolean,float,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void createContact(com.android.contacts.model.AccountWithDataSet)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDoneDrawing()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void <init>(android.content.Context,java.lang.String)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS
<com.android.exchange.provider.GalEmailAddressAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$2: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.ClusterAlbumSet: void updateClusters()>
Permission:android.permission.CAMERA
<com.android.camera.VideoCamera: void access$1300(com.android.camera.VideoCamera)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$5: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.RECEIVE_SMS
<com.android.providers.telephony.SmsProvider: android.database.Cursor getAllMessagesFromIcc()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void dontAddVoiceMailNumber()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: void onPostExecute(java.lang.Object,java.lang.Object)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onSettingsKeyPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void updateConfiguration()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void detectAndSendKey(int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.provider.GalEmailAddressAdapter$1: void run()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller$7$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.provider.ExchangeProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int sendVcardListingXml(int,javax.obex.Operation,int,int,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: void onSaveInstanceState(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getSyncKey()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$PointerQueue: void releaseAllPointersExcept(com.android.inputmethod.latin.PointerTracker,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity$2: void run()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void notifyDownloadCompleted(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity$ViewPagerVisibilityListener: void onVisibilityChanged(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$2: void onRequest(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void syncReloadDictionaryInternal()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.LocationListener,android.os.Looper)>
Permission:android.permission.READ_CONTACTS,android.permission.PROCESS_OUTGOING_CALLS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OutgoingCallBroadcaster: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager$AccountObserver: void onAccountChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.ImportExportInteraction: void handleImportRequest(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView$MyGestureListener: void onLongPress(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.DeviceProfilesSettings: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.PhotoSelectionHandler: boolean handlePhotoActivityResult(int,int,android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView$Listener: void onLongTap(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.StaticBackground: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void access$100(com.android.settings.DataUsageSummary)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomServiceImpl: boolean isRinging()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService: void reconcileAccountsWithAccountManager(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.PhotoSelectionHandler: long getWritableEntityId()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: void access$400(com.android.calendar.event.EditEventFragment,int)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarAlerts: boolean alarmExists(android.content.ContentResolver,long,long,long)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void reallyStartListening(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView$CalendarGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void setSelectedContactUri(android.net.Uri)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: void access$1200(com.android.inputmethod.keyboard.KeyboardView,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.SyncRunner: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.CamcorderHeadUpDisplay: void restorePreferences(android.hardware.Camera$Parameters)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService: void deleteAccountPIMData(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView: void onLabelRebuilt()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: android.net.sip.SipProfile[] getListOfProfiles()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean deleteSelection()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.CandidateView: void takeSuggestionAt(float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PickerActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment$2: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.EmailServiceProxy$4: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.PhoneNumberInteraction: void onLoadComplete(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ProcessorBase: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: com.android.contacts.model.EntityDeltaList doInBackground(android.content.Intent[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void clearInCallScreenReference()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactMethodUri(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.UPDATE_APP_OPS_STATS,android.permission.ACCESS_COARSE_LOCATION,android.permission.UPDATE_DEVICE_STATS
<com.android.server.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.voicedialer.VoiceDialerActivity$4: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ScrollBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.OpenDownloadReceiver: void access$000(com.android.browser.OpenDownloadReceiver,android.content.Context,long)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void access$500(com.android.mms.ui.ManageSimMessages,android.database.Cursor)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.AccountFilterActivity: java.util.List loadAccountFilters(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PrivacySettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthListView$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingItem$Listener: void onSettingChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.XLargeUi: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogQueryHandler: void fetchVoicemailOnly()>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: boolean parse()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startQueryForAll(android.content.AsyncQueryHandler,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void reportFailedUnlockAttempt()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onShowMoreKeysPanel(int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: void access$300(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void onBackPressed()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.PhoneNumberInteraction: void onLoadComplete(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ImportVCardActivity$VCardReadThread: void run()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isSimPinEnabled()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FillLightFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$2: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editMessageItem(com.android.mms.ui.MessageItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.Icon: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: void postNotification(com.android.calendar.alerts.AlertService$NotificationInfo,java.lang.String,android.content.Context,boolean,com.android.calendar.alerts.AlertService$NotificationPrefs,com.android.calendar.alerts.NotificationMgr,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: java.lang.String chooseFullPath(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void updateNetworkEnabledLocked()>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService: boolean access$700(android.speech.RecognitionService,android.speech.IRecognitionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.compat.InputMethodServiceCompatWrapper: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ShowOrCreateActivity: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time)>
Permission:android.permission.READ_SMS
<com.android.mms.util.Recycler$MmsRecycler: boolean anyThreadOverLimit(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onPressKey(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService$Callbacks: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.DefaultVoicemailNotifier$NewCallsQuery: com.android.contacts.calllog.DefaultVoicemailNotifier$NewCall[] query()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean copyToDrmProvider(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void updateIfacesLocked()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageFileViewFragment: void onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.READ_SMS
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromMessageUri(android.content.Context,android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaByDayAdapter: void changeCursor(com.android.calendar.AgendaWindowAdapter$DayAdapterInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PrivacySettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void updateSendStats(com.android.mms.data.Conversation)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void sendMeetingResponse(long,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.LocalAlbumSet: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void handleImportRequest(int)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,com.android.server.WindowManagerService$1)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DrawOverlayFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void access$700(com.android.contacts.activities.PeopleActivity,android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$SequentialSource: long reload()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag()>
Permission:android.permission.READ_SMS
<com.android.mms.drm.DrmUtils: android.net.Uri insert(android.content.Context,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact(com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: boolean queryContactInfo(com.android.contacts.RecentCallsListActivity$CallerInfoQuery)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$27: void onTextChanged(java.lang.CharSequence,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.fall.FallRS: void start()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallContactActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaService: void requestSync(android.content.Context,int,long)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceInput: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onItemClick(int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettings$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.FaceUnlock: void handlePokeWakelock(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.FlickGestureDetector: void clearFlick(boolean)>
Permission:android.permission.READ_PHONE_STATE
<android.telecom.TelecomManager: boolean isInCall()>
Permission:android.permission.READ_SMS
<com.android.mms.util.DownloadManager: void markState(android.net.Uri,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.NonPhoneActivity: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$5: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void access$700(com.android.calendar.EditEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: void access$1200(com.android.calendar.AgendaWindowAdapter,int,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void startListening(boolean,android.os.IBinder)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController: void onLoadFinished(android.content.Loader,java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactTilePhoneFrequentView$1: void onClick(android.view.View)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.Gallery: void onPause()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.LomoishFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService$3: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BreadCrumbView: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: boolean trySwitchToFirstTouchState(float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: android.net.Uri getFirstContactUri()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: void saveState(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: void showIMEIPanel(android.content.Context,boolean,android.telephony.TelephonyManager)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.voicedialer.RecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void eventsChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService: void reconcileAccounts(java.lang.String,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService$RecognitionServiceBinder: void stopListening(android.speech.IRecognitionListener)>
Permission:android.permission.CALL_PHONE
<com.android.phone.PhoneInterfaceManager: void call(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean callContact(android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri findFirstDataRow(long,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$5900(com.android.camera.Camera)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity takeOrGetNull()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.SlideshowActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.GroupingListAdapter$1: void onChange(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: boolean setNextPeriod(java.util.Calendar,java.util.Calendar)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactDetailActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact: java.util.List getByPhoneUris(android.os.Parcelable[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void wakeWhenReadyTq(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void wipe()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback: void reportFailedAttempt()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.database.Cursor queryPhoneNumbers(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int addSubInfoRecord(java.lang.String,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1400(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void snoozePolicy(android.net.NetworkTemplate)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.RecipientAdapter: android.database.Cursor doQuery(java.lang.CharSequence,int,java.lang.Long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: int getContactCount()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.GLView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$1: void onPostExecute(java.lang.Void)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void clearSearches(android.content.ContentResolver)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: java.lang.String getContactDisplayName(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: com.android.browser.Tab createNewTab(android.os.Bundle,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.accounts.ManageAccountsSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5000(com.android.mms.ui.ComposeMessageActivity)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: void update(com.android.mms.transaction.Observable)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader: void loadDirectoryMetaData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactBrowseListFragment: void prepareEmptyView()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void refreshData()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateSlidingTabHint(int,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void asyncDeleteDraftSmsMessage(com.android.mms.data.Conversation)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$2: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListItem: void updateFromView()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$900(com.android.phone.InCallScreen,com.android.internal.telephony.MmiCode)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: boolean onItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EmailAddressAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void access$300(com.android.mms.transaction.SmsReceiverService,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.AccountService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.EmailBroadcastProcessorService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.util.Recycler$MmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener: void pickSuggestionManually(int,java.lang.CharSequence,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: void onSaveInstanceState(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.WidgetUtils: android.graphics.Bitmap createWidgetBitmap(com.android.gallery3d.data.MediaItem)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.data.Contact$ContactsCache: void updateContact(com.android.mms.data.Contact)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService: void registerCalendarObserver(com.android.emailcommon.provider.Account)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getDataUri(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardEntry(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.Operation,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage$UpdateBookmarkTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: boolean ignoreAllIncomingCalls(com.android.internal.telephony.Phone)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void access$1000(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onClickOtaTryAgainButton()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void clearLoadingBit(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.Filter: void process(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.CALL_PHONE,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void doReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView$Listener: boolean addWordToDictionary(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: com.android.browser.SnapshotTab createNewSnapshotTab(long,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment$MessageOpenTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$400(com.android.phone.InCallScreen,android.os.AsyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: boolean onCustomRequest(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDelta: android.content.ContentProviderOperation$Builder buildSetAggregationMode(java.lang.Long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler$ProcessMotionEvent: boolean processMotionEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntryCommitter: void onEntryCreated(com.android.vcard.VCardEntry)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void access$700(com.android.calendar.DeleteEventHelper,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void updateSecondaryTitleFields(long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.StraightenFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$RunningServicesActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$300(com.android.contacts.activities.ConfirmAddDetailActivity,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: void onUpEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: void onDoubleTapShiftKey(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void setupContactDetailFragment(android.net.Uri)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: void process()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void onClick(android.view.View)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: void <init>(com.android.calendar.MonthActivity,com.android.calendar.Navigator)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void onSaveInstanceState(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void initView(com.android.calendar.CalendarView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBAFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub: void setRestrictBackground(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void access$100(com.android.calendar.EventInfoFragment,android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: void <init>(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader$LoadContactTask: void onPostExecute(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void enter()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity$2: void onChange(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: void loadPhoto()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void initWhitelistAndAutocorrectAndPool(android.content.Context,java.util.Locale)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onPreviewTextureCopied()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$5: android.accounts.AccountManagerFuture start()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToPackedGrayFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onDialerClose()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.vcard.SelectAccountActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailNumber()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void <init>(com.android.browser.WebViewController,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: java.util.List getProviders(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.util.ThreadPool$Job: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: java.lang.String generateSaveFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,boolean,com.android.providers.downloads.StorageManager)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.UndoBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void endInCallScreenSession(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.PanoramaActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.wifi.AdvancedWifiSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.CropImage$LoadDataTask: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void callListenerOnTextInput(com.android.inputmethod.keyboard.Key)>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.contacts.ContactsProvider2: void verifyAccounts()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$2800(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$15: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: boolean makeItemDefault(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.database.Cursor doFilter(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventView: void <init>(android.app.Activity,android.view.View,com.android.calendar.event.EditEventHelper$EditDoneRunnable)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videoproc.BackDropperFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.QuickResponseActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity: int compare(com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V21: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onDisconnect(android.os.AsyncResult)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void access$800(com.android.calendar.DeleteEventHelper)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: android.os.Bundle getProviderInfo(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateCallStateWidgets(com.android.internal.telephony.Call)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter$QueryHandler$1: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PowerUsageSummaryActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageUseActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void goToLockScreen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: void setAggregationException(long,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub: void reportFailedAttempt()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: int readFromResponse(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: java.lang.String getActiveSubscriberId(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.QuickContactWindow: void handleData(android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onPause()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager: void trimDatabase()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.users.UserSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$3: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent$TimeListener: void onTimeSet(android.widget.TimePicker,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen$TouchInput: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephony$Stub: boolean isSimPinEnabled()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void loadDictionary()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekAdapter: void setEvents(int,int,java.util.ArrayList)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: void asyncCheckPassword()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$800(com.android.camera.Camera)>
Permission:android.permission.CALL_PHONE
<com.android.internal.telephony.ITelephony$Stub$Proxy: void call(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: java.util.List buildLimitedNetworksList()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleBackspace(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadPhotosInBackground()>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_RESPOND_VIA_MESSAGE,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendTextForSubscriberWithSelfPermissions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void onSaveInstanceState(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void updateNetworkRulesLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void run(android.accounts.AccountManagerFuture)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void access$1100(com.android.calendar.DeleteEventHelper,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallback: void onUserChanged(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusWatcher$2: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntitySet: android.content.ContentProviderOperation$Builder beginKeepTogether()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean isAllowedProviderSafe(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarTablet: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.NotificationMgr$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: boolean isNetworkMetered(android.net.NetworkState)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void hangupRingingCall()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void deleteSelectedEvent()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.RetryScheduler: void setRetryAlarm(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: void notifyContactListFilterChanged()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void markAsRead()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: com.android.contacts.vcard.ImportRequest constructImportRequest(byte[],android.net.Uri,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void onMessageSent()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: void restoreState(android.os.Bundle,long,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreenShowActivation: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SimpleImageFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardActionListener: void onSwipeDown()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarViewAdapter$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.MoreSuggestionsView$1: void onCodeInput(int,int[],int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSetView: void removeAllComponents()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SearchActivity: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$600(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailFragment: void showEmptyState()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onResume()>
Permission:android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean enableCellBroadcast(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateRingingCall(com.android.internal.telephony.CallManager)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean _isProviderEnabledLocked(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean addGnssMeasurementsListener(android.location.IGnssMeasurementsListener,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$1: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiP2pSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPicker: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.providers.telephony.MmsSmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleSeparator(int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void updateShouldCaptureThumbnails()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.test.FragmentTestActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.TileImageView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void drawAfterScroll(android.graphics.Canvas)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void systemReady()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.AbstractSyncParser: void wipe()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment$MessagesLoaderCallback: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForExistingContact(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.DocumentaryEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader: com.android.contacts.ContactLoader$Result loadInBackground()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AbstractGalleryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$AndroidCustomData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$VpnSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.PosterizeEffect: void apply(int,int,int,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: android.net.Uri updateUri()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getContactFilterUri(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment: void updateAccountType(java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$4: boolean onActionItemClicked(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onStart()>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.EasOutboxService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$4500(com.android.calendar.DayView,android.view.MotionEvent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameBranch: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$13: void onCancel(android.content.DialogInterface)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaByDayAdapter: void <init>(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void launchSettings()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void buildJoinContactDiff(java.util.ArrayList,long,long)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment$1: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3: void createWindow(boolean,android.os.Message)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView$2: void onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification$3: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager$3: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.GrainEffect: void apply(int,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void <init>(com.android.browser.WebViewController,android.webkit.WebView)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService$UpdateThread: void run()>
Permission:android.permission.READ_PHONE_STATE
<android.net.DhcpStateMachine$DefaultState: void enter()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountServerBaseFragment: void saveSettingsAfterEdit()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowActivateScreen()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataLoader: java.lang.Object access$1700(com.android.gallery3d.app.AlbumDataLoader,java.util.concurrent.Callable)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: java.lang.String getMimeTypeForId(android.content.Context,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: java.util.List getActiveSubInfoList()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void discard()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SoundSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SecurityPolicy: void deleteSecuredAccounts(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: android.net.Uri getContactUriForEmail(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.ContactsAsyncHelper$OnImageLoadCompleteListener: void onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.quickcontact.QuickContactActivity: void access$700(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactItemListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$34: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: void onDestroy()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSearchMode(boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectCalendarsFragment: void toggleVisibility(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: boolean parseOneVCard(boolean)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DrawRectFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactLoaderFragment$1: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DisplaySettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDeltaList: java.util.ArrayList buildDiff()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$BluetoothSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SpellCheckersSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerOnePane: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.NfcImportVCardActivity: com.android.contacts.vcard.ImportRequest createImportRequest()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CrossProcessFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: void parseVCardFile()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosink.MediaEncoderFilter: void startRecording(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onUpEventInternal()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.DreamSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.WirelessSettings: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ChipsAddressTextView: void showAlternates(com.android.ex.chips.RecipientChip,android.widget.ListPopupWindow,int,android.content.Context)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.PosterizeFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask: android.database.Cursor doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: void updateLegacyPhotoData(long,long,android.content.ContentValues)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DevelopmentSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMemberLoader: void <init>(android.content.Context,long)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.LogTag$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void showPausePromptDialog(com.android.internal.telephony.Connection,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: void setActiveTab(com.android.browser.Tab)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.CALL_PHONE,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.Sources: java.util.ArrayList getAccounts(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void handleMove(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BreadCrumbView: void pop(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onCreate(android.os.Bundle)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getUriToQuery()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getSmsNewMessageNotificationInfo(android.content.Context,java.util.Set)>
Permission:android.permission.GET_ACCOUNTS
<com.android.development.AccountsTester: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SubSettings: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int access$3600(com.android.mms.ui.ComposeMessageActivity,long,boolean)>
Permission:android.permission.READ_CALENDAR
<android.content.CursorEntityIterator: java.lang.Object next()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$1: android.accounts.AccountManager$Future2Task start()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void goTo(android.text.format.Time,long,java.lang.String,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$800(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.AccountFilterActivity$MyLoaderCallbacks: void onLoadFinished(android.content.Loader,java.util.List)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void reallyStartListening(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void stopVideoRecording()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: com.android.gallery3d.ui.ScreenNail run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DateTimeSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.TextToSpeechSettings: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$WebsiteData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader: void loadStreamItems(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsApplication$DelayedInitializer: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SecuritySettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputManager$Callbacks: int interceptMotionBeforeQueueingWhenScreenOff(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SecuritySettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AdaptiveBackground: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: boolean onSearchRequested()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$3400(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map getUsableInvitableAccountTypes()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: android.content.Intent createEmailIntent(android.content.Context,long,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setColor(int,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.PhoneNumberHelper: java.lang.CharSequence getDisplayNumber(java.lang.CharSequence,java.lang.CharSequence)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation$ConversationQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactTileView$1: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DeviceInfoSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity: void onClick(android.view.View)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void executeDownload(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestLocationUpdatesLocked(java.lang.String,long,float,com.android.server.LocationManagerService$Receiver)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity$3: void onChange(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment: void saveReminders()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageViewFragment: java.io.File performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment$4: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void access$600(com.android.mms.ui.ManageSimMessages)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageApplicationsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void initAsynchronously(android.content.Context,int,java.util.Locale)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameBranch: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView$MyGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$000(com.android.mms.ui.ComposeMessageActivity)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void access$600(com.android.server.net.NetworkStatsService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity: void onClick(android.view.View)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.VignetteEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$4: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void finish()>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.CalendarSyncEnabler: java.lang.String enableEasCalendarSyncInternalForTest()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity: void access$300(com.android.contacts.ui.EditContactActivity,android.accounts.Account)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$Cell detectAndAddHit(float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void setSearchMode(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View createViewFromResource(int,android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onItemClick(int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView$ContextMenuHandler: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.Utility$ForEachAccount: void performAction(long)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController: void <init>(android.app.Activity,android.os.Bundle,android.app.FragmentManager,com.android.contacts.widget.TransitionAnimationView,android.view.View,com.android.contacts.detail.ContactDetailFragment$Listener)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSetView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getDataUri(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SepiaFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getGroupIdLevel1()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editMmsMessageItem(com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView$PresenceQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ActionBarAdapter: void setCurrentTab(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: com.android.inputmethod.latin.UserHistoryDictionary getInstance(android.content.Context,java.lang.String,int,android.content.SharedPreferences)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: void <init>(android.content.Context)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.FisheyeEffect: void apply(int,int,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPicker: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ServiceStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerBase: void onRefresh()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.accounts.AccountSyncSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: int interceptMotionBeforeQueueingWhenScreenOff(int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean copyMedia(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void showIncomingCall()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: com.android.emailcommon.service.IEmailService getServiceForAccount(long)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.WifiWatchdogStateMachine$OnlineState: boolean processMessage(android.os.Message)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onResult(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DisplaySettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleWeeksAdapter: void init()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSerialNumber()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void confirmDeleteThread(long)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void saveContact(android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$ThreadListQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void putInBackground()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactDetailActivity: void onAttachFragment(android.app.Fragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void access$500(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$FaceHighlightView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_SMS
<com.android.mms.model.AudioModel: void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader: void postViewNotificationToSyncAdapter()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumSetPage$1: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void access$000(com.android.providers.calendar.CalendarProvider2,boolean)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$EventDays: android.database.Cursor query(android.content.ContentResolver,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.AccessibilitySettings: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: void updateFullImage(long,com.android.gallery3d.util.Future)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.GlobalActions: void <init>(android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$CalendarObserver: void <init>(com.android.exchange.ExchangeService,android.os.Handler,com.android.emailcommon.provider.Account)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.InputManager$Callbacks: boolean interceptKeyBeforeDispatching(android.view.InputChannel,int,int,int,int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$2: void removeAllComponents()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ClassZeroActivity: android.net.Uri storeMessage(android.telephony.SmsMessage)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: int access$1500(com.android.server.WindowManagerService,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.webkit.GeolocationService: void setEnableGps(boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int getDrmMimeSavedStringRsrc(long,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean showMessageDetails(com.android.mms.ui.MessageItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: void updateScreenNail(long,com.android.gallery3d.util.Future)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.FlickGestureDetector: void access$000(com.android.inputmethod.accessibility.FlickGestureDetector,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EmailAddressAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$QuickResponseChecker: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: boolean loadFromConversation(com.android.mms.data.Conversation)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$4100(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: void addPreloadedTab(com.android.browser.Tab)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.AutoFixFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void onStart()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SIMRecords: void handleSmses(java.util.ArrayList)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void onRestoreInstanceState(android.os.Bundle)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter: void presentImageThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.ImageModel)>
Permission:android.permission.GET_ACCOUNTS
<com.android.calendar.AllInOneActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.server.DemoThread: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekAdapter: void <init>(android.content.Context,java.util.HashMap)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.GLRootView$IdleRunner: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AddAccountSettings: void addAccount(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.ClusterAlbumSet: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromEmail(java.lang.String,boolean)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.Entity next()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataLoader$ReloadTask: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter: void <init>(com.android.exchange.EasSyncService)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void launchSettings(java.lang.Class)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.WifiApConfigStore$InactiveState: void enter()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosink.MediaEncoderFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onRemovePictureChosen()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PowerUsageSummaryActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.StreamItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer$HandlerForOutputStream: boolean onInit(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onPressKey(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.util.ThreadPool$Worker: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.location.GpsLocationProvider: void reportAGpsStatus(int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.PROCESS_OUTGOING_CALLS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OutgoingCallBroadcaster: void processIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void startRepeatKey(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountPreferenceBase: void onAuthDescriptionsUpdated()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SecuritySettings: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void removeFromTree()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.SpellCheckersSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onPhotoSelected(android.graphics.Bitmap)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity: void access$400(com.android.calendar.AlertActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TextToSpeechSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$16: void onCancel(android.content.DialogInterface)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void <init>(com.android.browser.WebViewController,android.webkit.WebView,android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.provider.Downloads: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.PhoneNumberInteraction: void performAction(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void onAttach(android.app.Activity)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailListener: void run()>
Permission:android.permission.PEERS_MAC_ADDRESS,android.permission.ACCESS_FINE_LOCATION,android.permission.BLUETOOTH_PRIVILEGED,android.permission.ACCESS_COARSE_LOCATION,android.permission.BLUETOOTH_ADMIN,android.permission.UPDATE_DEVICE_STATS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder: void startScan(int,boolean,android.bluetooth.le.ScanSettings,java.util.List,android.os.WorkSource,java.util.List,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.Device: java.lang.String getConsistentDeviceId(android.content.Context)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ByUri: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$7: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$1: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onWindowFocusChanged(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.MessageItem access$500(com.android.mms.ui.ComposeMessageActivity,java.lang.String,long,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector: void registerEnabledProviders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onClose()>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean access$300(com.android.inputmethod.keyboard.KeyboardView,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryWithContactIdAndLookupKey(android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$10: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.grass.GrassView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void doResumeUpdates()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.SearchResultsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageFileViewFragment: void reloadUiFromMessage(com.android.emailcommon.provider.EmailContent$Message,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.Settings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.EmailAddressAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void doFinish()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DockSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$DataListener: void onLoadingFinished()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$6: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: byte[] getPdu(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void access$1000(com.android.gallery3d.app.AlbumSetPage,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView$2: void onAnimationEnd(android.animation.Animator)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$PduBodyCache: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageListItem: void bind(com.android.mms.ui.MessageListAdapter$AvatarCache,com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: boolean processIntent(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.pim.vcard.VCardEntry: android.net.Uri pushIntoContentResolver(android.content.ContentResolver)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DevelopmentSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatus$Callback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageAccountsSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$1: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlHandler: boolean handleMenuClick(com.android.browser.Tab,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void updateCalendar(android.view.View)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.provider.AccountReconciler: boolean accountsNeedReconciling(android.content.Context,java.util.List,android.accounts.Account[])>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: android.view.KeyEvent dispatchUnhandledKey(com.android.server.wm.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.OnContactBrowserActionListener: void onInvalidSelection()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: boolean switchToTab(com.android.browser.Tab)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: int placeCall(android.content.Context,com.android.internal.telephony.Phone,java.lang.String,android.net.Uri,boolean,android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.UiModeManagerService: void systemReady()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$4: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: java.lang.String getOriginalSyncId(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ApplicationSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$MyIndicatorWheelListener: void onSharedPreferenceChanged()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$6: void runInternal(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDelta: void buildAssert(java.util.ArrayList)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.adapter.Search$SearchParser: boolean parseResponse()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.EdgeView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.HudLayer$14: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateDialpadVisibility()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity: void onBackPressed()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$11: void onLoadFinished(android.content.Loader,com.android.settings.net.ChartData)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void delete(long)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: boolean isInCall()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity$3: void onChange(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$CryptKeeperSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object waitForNextEventTarget(android.view.KeyEvent,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,boolean,boolean,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.AsyncRunner$AsyncRunnerTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IccProvider: java.util.ArrayList loadFromEf(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void startLongPressTimer(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void <init>(android.content.Context,int,java.util.Locale)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$31: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean openPopupIfRequired(int,com.android.inputmethod.latin.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserSettings: void clearHistory()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void access$700(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactEntryListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void onPause()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.GlobalActions: void <init>(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage load(com.android.mms.ui.ComposeMessageActivity,android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataAdapter$ReloadTask: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager: boolean refreshMessageList(long,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider$SyncContext: boolean login(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DockSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS
<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: com.android.contacts.ui.ContactsPreferencesActivity$AccountSet doInBackground(com.android.contacts.ui.ContactsPreferencesActivity,java.lang.Void[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Utils: java.lang.String getDisplayedDatetime(long,long,long,java.lang.String,boolean,android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: java.lang.String getLine1AlphaTagForDisplay(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void setMonthDisplayed(android.text.format.Time)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void start(android.os.Bundle,android.content.Intent)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: android.net.sip.SipProfile[] getListOfProfiles()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector: int getTotalEnabledProviders()>
Permission:android.permission.READ_SMS
<com.android.mms.model.MediaModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ImportExportInteraction: void doShareVisibleContacts()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.InLineSettingPicker$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: boolean parseOneVCard()>
Permission:android.permission.SEND_SMS
<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void notifyThroughDatabase(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ContrastFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<android.net.IConnectivityManager$Stub: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.ComboAlbum: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void doFinish()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService: boolean hasMismatchInPopImapAccounts(android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivity: boolean access$2000(com.android.mms.ui.ComposeMessageActivity,com.android.mms.data.Contact)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getFirstContactUri()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.FlickGestureDetector: boolean dispatchFlick(android.view.MotionEvent,android.view.MotionEvent)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: void open(android.net.sip.SipProfile)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: boolean parseOneVCard()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity$ContactDetailLoaderFragmentListener$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void <init>(android.content.Context,com.android.inputmethod.latin.LatinIME,java.lang.String,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.BaseStatusBar: void start()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingSwitch: boolean changeIndex(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.FilmStripView: void removeAllComponents()>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean callSelection()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onMMIComplete(com.android.internal.telephony.MmiCode)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: void onPostExecute(com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: void onAttachFragment(android.app.Fragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: java.lang.String buildUri()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact: android.net.Uri getUri()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.SyncSettings: void onResume()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: long createCalendar(com.android.exchange.EasSyncService,com.android.email.provider.EmailContent$Account,com.android.email.provider.EmailContent$Mailbox)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: void updateCallLogContactInfoCache(java.lang.String,com.android.contacts.calllog.ContactInfo,com.android.contacts.calllog.ContactInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result getContactInfo(android.content.Context,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertService: void processMessage(android.os.Message)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.Utils: void setTimeZone(android.content.Context,java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void sendSmsWorker(java.lang.String,java.lang.String,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.SharpenEffect: void apply(int,int,int,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller$7: void onReceiveValue(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void addToOnlyBigramDictionary(java.lang.CharSequence,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void notifyThroughDatabase(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$6500(com.android.camera.Camera)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothAtPhonebook: java.lang.String getLastDialledNumber()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: android.accounts.Account getAccount(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.RawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
Permission:android.permission.ACCESS_FINE_LOCATION
<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onShowHideDialpad()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPage$2: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity$2: void onLoadComplete(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.CountryDetectorService$2: void run()>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocalePickerActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$600(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: boolean saveResponse()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSetView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onNewRingingConnection(android.os.AsyncResult)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PRECISE_PHONE_STATE,android.permission.READ_PRIVILEGED_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.server.TelephonyRegistry: void listenForSubscriber(long,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void setMobilePolicySplit(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void init(android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.voicedialer.CommandRecognizerEngine: void setupGrammar()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void syncReloadDictionaryIfRequired()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.BrightnessEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void startMsgListQuery()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$23: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$PersistTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void onBackPressed()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.CameraScreenNail: void directDraw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void startRetryTimer()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$30: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlockLocked()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.USE_SIP
<com.android.phone.SipBroadcastReceiver: void takeCall(android.content.Intent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videoproc.BackDropperFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void doContactDelete(android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthWeekEventsView: void drawEvents(android.graphics.Canvas)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void serviceLogging(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$BluetoothSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onUserChanged(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$FullImageListener: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1AlphaTag()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.NetworkManagementService$NetdCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsUtils: long queryForRawContactId(android.content.ContentResolver,long)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.status.StatusBarPolicy: void installIcons(android.content.Context,com.android.server.status.StatusBarService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressKey(int,boolean,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlHandler: boolean startActivityForUrl(com.android.browser.Tab,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onSearchTextChanged()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment$2: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService$PolicyThread: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void drawTopPanel(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity$CalendarGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener: boolean addWordToDictionary(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void access$3400(com.android.settings.DataUsageSummary,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen$1: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void refresh(android.text.format.Time,long,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: void access$400(com.android.contacts.ContactsListActivity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onMMICancel()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: void run()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService$ServiceHandler: void processPendingTransaction(com.android.mms.transaction.Transaction,com.android.mms.transaction.TransactionSettings)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogNotificationsService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$6: android.accounts.AccountManagerFuture start()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageStitcher: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomServiceImpl: void showInCallScreen(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AdaptiveBackground: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem$2: void onPduLoaded(com.android.mms.ui.MessageItem)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void onTouchEvent(int,int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccessibilitySettings: void onResume()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<android.content.pm.IPackageManager$Stub$Proxy: int[] getPackageGids(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: boolean access$600(com.android.calendar.AgendaWindowAdapter,com.android.calendar.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.DialtactsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startDelete(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$900(com.android.contacts.activities.ConfirmAddDetailActivity,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onPause()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.EdgeView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService$Stub: void reconcileAccounts(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void finish()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updateGroups(long,android.content.ContentValues)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.BootReceiver: void access$100(com.android.server.BootReceiver,android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$4: android.accounts.AccountManager$Future2Task start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.activity.setup.AccountSetupOptions: void onDone()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactEditorActivity: void onResume()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView$UIHandler: void startLongPressTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void onLoadComplete(android.content.Loader,android.database.Cursor)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: int getCurrentTtyMode()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.GroupDetailActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterController: void selectCustomFilter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailUpdatesFragment: com.android.contacts.model.AccountType getAccountTypeForStreamItemEntry(com.android.contacts.util.StreamItemEntry)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleWakeWhenReady(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephony: boolean isSimPinEnabled()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SaturateFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$FaceHighlightView: void removeAllComponents()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity: void onPause()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ApplicationSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onUpEventForRelease(int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: int getContactCount()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageUseActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void recalc()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.AccountServiceProxy$8: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void setMainPane(android.app.FragmentTransaction,int,int,long,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onVisibilityChanged(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: void loadGroupMetaData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: void access$100(com.android.contacts.calllog.CallLogAdapter)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void onFinishInput()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void handleMove(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: java.lang.String getLine1NumberForDisplay(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean deleteSelection()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void setPreviewDisplay(android.view.SurfaceHolder)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: boolean onKeyUp(int,android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: void access$700(com.android.mms.data.Contact$ContactsCache,com.android.mms.data.Contact)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.wifi.WifiSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.provider.ExchangeDirectoryProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SingleRunningTask: void run(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void updateNotificationsLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void onAction(com.android.contacts.activities.ActionBarAdapter$Listener$Action)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void buildDiff(java.util.ArrayList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.dialpad.DialpadFragment$Listener: void onSearchButtonPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void finish()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.JoinContactActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ChipsAddressTextView: com.android.ex.chips.RecipientChip selectChip(com.android.ex.chips.RecipientChip)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void access$3100(com.android.calendar.EventInfoFragment)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void onClick(android.view.View)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void access$300(com.android.contacts.ContactsListActivity,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader: void access$2000(com.android.contacts.ContactLoader)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatus$Callback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$4300(com.android.camera.Camera)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void handleImportRequest(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FixedRotationFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$1: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.OpenDownloadReceiver: void onReceiveAsync(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void bindCommonMessage()>
Permission:android.permission.READ_CALENDAR
<android.util.CalendarUtils$TimeZoneUtils: void forceDBRequery(android.content.Context,java.lang.Runnable)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler$SmsRecycler: void deleteMessagesForThread(android.content.Context,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask: java.lang.Integer doInBackground(com.android.contacts.model.EntityDeltaList[])>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub$Proxy: void stopListening(android.speech.IRecognitionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.TileImageView: void removeAllComponents()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void closeEmptyTab()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: void open(android.net.sip.SipProfile)>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.calendar.CalendarProvider2: boolean onCreate()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.mail.MessagingException doInBackground(java.lang.Void[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.GLRoot$OnGLIdleListener: boolean onGLIdle(com.android.gallery3d.ui.GLCanvas,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberPickerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen$1: void onClick(android.view.View)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$2: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.PhoneWindowManager$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void startVideoRecording()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.wifi.AdvancedSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.PhotoSelectionHandler: int getWritableEntityIndex()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest: void testScreenRequestsRecreation()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.QuickContactActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView$RecipientReplacementTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_SMS
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesInSameThreadAsMessage(android.content.Context,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController$DataControllerHandler: void doUpdateHistoryTitle(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void drawTopPanel(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$AppDetailsFragment: void onStop()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.GroupDetailActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessagesAdapter$MessagesCursorLoader: java.lang.Object loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$31: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_SMS
<com.android.mms.drm.DrmUtils: void cleanupStorage(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity: void bindData()>
Permission:android.permission.READ_SMS
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
Permission:android.permission.READ_SMS
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification$3: java.lang.Integer doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactSaveService$2: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DisplaySettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: android.net.Uri buildQueryUri(int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.ManageAccountsSettings: void updateAuthDescriptions()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerTwoPane$RefreshTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.DialtactsActivity: void onBackPressed()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageListAdapter$OnDataSetChangedListener: void onContentChanged(com.android.mms.ui.MessageListAdapter)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerFuture start()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo queryContactInfoForPhoneNumber(java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.FilterTypeSet: void updateData()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$5800(com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ConversationList$2: void run()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$4900(com.android.mms.ui.ComposeMessageActivity,int,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.GrainFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.net.Uri getContactUriForEmail(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void access$100(com.android.gallery3d.app.SlideshowPage)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void scheduleRetryOrBailOut()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void goToToday()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: long getFirstVisibleTime()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.Icon: void removeAllComponents()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void editMmsMessageItem(com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewBase: void onScreenTurnedOn()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.QuickContactDivot: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageUseActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void parseIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onDisconnect(android.os.AsyncResult)>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.IndicatorWheel$Listener: void onSharedPreferenceChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsUtils: int getThumbnailSize(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity: boolean onKeyUp(int,android.view.KeyEvent)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void repeatKey(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.NullFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller$Download: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$5000(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.Gallery: void startViewAction(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1600(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onClickOtaActivateButton()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ActionBarAdapter$Listener: void onAction(com.android.contacts.activities.ActionBarAdapter$Listener$Action)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.NoConfirmationSendService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.editor.ContactEditorUtils getInstance(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$3: android.accounts.AccountManager$Future2Task start()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: void syncAlbumPhotos(long,boolean,android.content.SyncResult)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.tts.TtsEngineSettingsFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: java.util.List getProviders(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SettingsPreferenceFragment: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onProviderStatusChange()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDataRoaming(int,long)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void cancel()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void switchFromStructuredNameToFullName()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ActivityBase: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean saveRingtone(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactItemListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.GLView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$EmailData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.MovieView: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView$IndividualReplacementTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$33: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameStore: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarViewAdapter: void refresh(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void showLocked()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void updateSendFailedNotification(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlideshowView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: void importLegacyContactsInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void loadDictionaryAsync()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$200(com.android.camera.VideoCamera)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactDetailActivity$2$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SplitContactConfirmationDialogFragment$Listener: void onSplitContactConfirmed()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.EffectSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.EmailSyncAdapter: void <init>(com.android.exchange.EasSyncService)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.BasicSettingPopup$Listener: void onSettingChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void rebuildStructuredName(com.android.contacts.model.EntityDelta$ValuesDelta)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: void updateInCallNotification(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void bindNotifInd()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.EmailServiceProxy: void <init>(android.content.Context,android.content.Intent,com.android.emailcommon.service.IEmailServiceCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void asyncDeleteObsoleteThreads(android.content.AsyncQueryHandler,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void updateView()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.vcard.ImportVCardActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.NotificationController$2: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void setFormattedDigits(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.development.SyncAdapterDriver: void startSyncSelected(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekAdapter: void onDayTapped(android.text.format.Time)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object access$1900(com.android.gallery3d.app.AlbumSetDataLoader,java.util.concurrent.Callable)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.EmailBroadcastProcessorService: void onSystemAccountChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactEditorActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings: void updateHeaderList(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.adapter.Search$SearchParser: boolean parse()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavTabScroller$2: void onAnimationEnd(android.animation.Animator)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageListItem: void bindCommonMessage(com.android.mms.ui.MessageListAdapter$AvatarCache,com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.data.Contact$ContactsCache: void access$500(com.android.mms.data.Contact$ContactsCache,com.android.mms.data.Contact)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[],java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: boolean openPopupIfRequired(int,com.android.inputmethod.latin.PointerTracker)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountsListAdapter: void <init>(android.content.Context,com.android.contacts.util.AccountsListAdapter$AccountListFilter,com.android.contacts.model.AccountWithDataSet)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void onFinishInput()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.NotificationController: android.graphics.Bitmap getSenderPhoto(com.android.emailcommon.provider.EmailContent$Message)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void switchToState(int,float,float)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FisheyeFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListItem: void access$000(com.android.mms.ui.ConversationListItem)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: void notifyObservers()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialerView: boolean dispatchKeyEvent(android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessages(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact: android.net.Uri getPhoneUri()>
Permission:android.permission.SEND_SMS,android.permission.ACCESS_NETWORK_STATE,android.permission.READ_EXTERNAL_STORAGE
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: boolean access$1300(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BaseUi: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ActionModeHandler$ActionModeListener: boolean onActionItemClicked(android.view.MenuItem)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void sendMmsWorker(com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<android.bluetooth.HeadsetBase$1: void run()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: void close(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$2900(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void sendPendingMessages(long)>
Permission:android.permission.READ_CONTACTS
<com.android.phone.BluetoothHandsfree$31: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity: void access$200(com.android.contacts.ui.EditContactActivity,android.accounts.Account)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.GLTextureSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.Editor: void onFieldChanged(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.dialog.ClearFrequentsDialog$1$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceInfoSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactDetailActivity$3$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FillLightFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void onPrepareOptionsMenu(android.view.Menu)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void access$1100(com.android.phone.PhoneApp)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity: void createContact(android.accounts.Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void updateParametersOnStartInputView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.AccountService$1: void restoreAccountsIfNeeded()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1000(com.android.phone.InCallScreen,android.os.AsyncResult,char)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$21: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$12: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.widget.QuickContactBadge: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$TouchInput: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.wm.InputManager$Callbacks: android.view.KeyEvent dispatchUnhandledKey(com.android.server.wm.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void onAttach(android.app.Activity)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void access$800(com.android.phone.sip.SipSettings)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.SelectCalendarsActivity: void onClick(android.view.View)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>
Permission:android.permission.READ_SMS
<com.android.mms.MmsApp: void onTerminate()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: boolean onKeyUp(int,android.view.KeyEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListXL$RefreshTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: void access$100(com.android.contacts.ViewContactActivity)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.IntentProvider$1: android.content.Intent getIntent(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onDialerOpen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager: void access$900(com.android.exchange.SyncManager)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.Gallery: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.AccountFilterActivity: void onResume()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.VoiceProxy$6: void onPostExecute(java.lang.Boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void blockingUpdateNewMessageIndicator(android.content.Context,long,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Event: void loadEvents(android.content.Context,java.util.ArrayList,long,int,int,java.util.concurrent.atomic.AtomicInteger)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.RECEIVE_SMS
<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void doFooterClick()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void enableSync(android.database.sqlite.SQLiteDatabase)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: boolean onCustomRequest(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ColorTemperatureFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PatternUnlockScreen: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Preloader: com.android.browser.Preloader$PreloaderSession getSession(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.contacts.ContactsProvider2: boolean onCreate()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.inputmethod.UserDictionaryList: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: boolean save()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SubtypeSwitcher: void updateSubtype(com.android.inputmethod.compat.InputMethodSubtypeCompatWrapper)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onClickOtaEndButton()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationList: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$AccountDisplay: void <init>(android.content.ContentResolver,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity: boolean doDeleteAction()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.Controller: void searchMore(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView: void finishInput(java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment$2: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: android.net.Uri ensureIsContactUri(android.content.ContentResolver,android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller: void onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void dialButtonPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider$SyncContext: void reloadAccounts()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$1000(com.android.camera.VideoCamera)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: void showMEIDPanel(android.content.Context,boolean,android.telephony.TelephonyManager)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.EasOutboxService: void runAccountMailbox()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void handleIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarBase: void onAction(java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void notifyDownloadFailed(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void createViewsAndFragments(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: boolean createOneEntry()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createAndAddWindows()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void switchToKeyboardView()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$4900(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: boolean handleCallKey()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallController: com.android.phone.Constants$CallStatusCode placeCallInternal(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService$8: void run(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.quickcontact.QuickContactActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactBrowseListContextMenuAdapter: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void handleSms(byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter$1: void onItemLoaded(com.android.mms.util.ThumbnailManager$ImageLoaded,java.lang.Throwable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$2: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void doLongPress(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettings: void onAuthDescriptionsUpdated()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onRestart()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int getDrmMimeMenuStringRsrc(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updateContactMethods(long,android.content.ContentValues)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void onBackPressed()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: void onCreate(android.os.Bundle,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.voice.VoiceInput: void startListeningAfterInitialization(com.android.inputmethod.deprecated.voice.FieldContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$3: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void updateDownload(com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void pokeWakelock(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void updateFragmentsVisibility()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView$CalendarGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService: long checkMailboxes()>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.HeadUpDisplay$Listener: void onSharedPreferencesChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.InLineSettingPicker: boolean changeIndex(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void access$300(com.android.calendar.CalendarView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.DefaultContactBrowseListFragment: void prepareEmptyView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.JoinContactActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateState(com.android.internal.telephony.CallManager)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.BasicSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataLoader: void resume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.ServerThread$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void onSingleTapUp(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.AbstractSyncAdapter: void wipe()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME$5: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.BaseRecipientAdapter: android.database.Cursor access$100(com.android.ex.chips.BaseRecipientAdapter,java.lang.CharSequence,int,java.lang.Long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void finish()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void resume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Bookmarks$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void onCreate()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void descendInto(java.lang.String,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: void updateAutoCorrectionStatus(java.util.Map,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,int[],java.lang.CharSequence,double,int,java.lang.CharSequence)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub: java.util.List getAllCellInfo()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$BluetoothSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void access$000(com.android.browser.NavScreen,com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$EntityDeltaComparator: int compare(java.lang.Object,java.lang.Object)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView$3: void run()>
Permission:android.permission.READ_CONTACTS
<com.android.calendar.EventInfoActivity: void addAttendeesToLayout(java.util.ArrayList,android.widget.LinearLayout,java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addVideo(android.net.Uri,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult access$500(com.android.phone.BluetoothAtPhonebook,java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TetherSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.MediaSet: long reload()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void updateScreen(com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment: void access$300(com.android.contacts.group.GroupDetailFragment,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.MessageStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlHandler$RLZTask: void onPostExecute(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAppWidgetService: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.CalendarSyncEnabler: void enableEasCalendarSync()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin: android.accounts.Account[] getAccounts(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: boolean addWordToDictionary(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$23: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void onNewIntent(android.content.Intent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.SyncRunner: boolean performStep()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.OtherSettingsPopup$Listener: void onOtherSettingChanged()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void startLongPressTimer(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void onClick(android.view.View)>
Permission:android.permission.RECEIVE_SMS,android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.UiccSmsController: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2$PipeMonitor: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.IState: boolean processMessage(android.os.Message)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.UiModeManagerService$8: void retrieveLocation()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$ImData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$700(com.android.mms.data.WorkingMessage,long,java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: void parseVCardFile()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: long access$1600(com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void access$200(com.android.providers.calendar.CalendarProvider2)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation: void access$900(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.PowerManagerService$3: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void enter()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<android.provider.Calendar$Calendars: int deleteCalendarsForAccount(android.content.ContentResolver,android.accounts.Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void initFragments(long,int,android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void checkPausedOrCanceled(com.android.providers.downloads.DownloadThread$State)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SpellCheckersSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactDetailActivity: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewBase: void wakeWhenReadyTq(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onCodeInput(int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AccountPreferenceBase: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void doSaveAction()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.IntentHandler$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void goBackOnePageOrQuit()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.State: boolean processMessage(android.os.Message)>
Permission:android.permission.CAMERA
<com.android.camera.CameraHolder: android.hardware.Camera open()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.SyncSettings: void onStart()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: java.lang.String access$300(com.android.vcard.VCardComposer,java.lang.String,java.lang.reflect.Method)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.ManageConferenceUtils: void updateManageConferencePanel(java.util.List)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startDelete(android.content.AsyncQueryHandler,int,boolean,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void pokeWakelock()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$AppDetailsFragment: void onStart()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity: void attachPhotoHandler()>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService: void access$800(com.android.exchange.ExchangeService,android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void <init>(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: long insertSettings(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapOverlayFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceAdminSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: int dispatchKey(android.view.KeyEvent,int,int)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler$MmsRecycler: boolean checkForThreadsOverLimit(android.content.Context)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void updateResponse(long,long,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.ManageAccountsSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.MoreSuggestionsView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateNoCall(com.android.internal.telephony.Phone)>
Permission:android.permission.MODIFY_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayNameUsingSrc(java.lang.String,int,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorControlWheel: void onSettingChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: void recreateWebView(com.android.browser.Tab)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void access$1000(com.android.providers.downloads.DownloadService,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: void enforceReadPermission()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusLoader$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageStitcher: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$600(com.android.mms.data.WorkingMessage,long,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesByThreadId(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void displayOnHoldCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void setQueryTextToFragment(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity: void access$700(com.android.calendar.AlertActivity)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: boolean isSimPinEnabled()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: void parseItems()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternCellAdded(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback: void cancel()>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$4: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: int interceptMotionBeforeQueueingWhenScreenOff(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void cancel()>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactLoaderFragment$1: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3: void onRequestFocus(android.webkit.WebView)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void updateMailbox(long,long,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void resume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteReminders(android.net.Uri,boolean,java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.AccountFilterActivity$MyLoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAppWidgetService: void performUpdate(android.content.Context,int[],java.util.Set,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$4: void onLongTap(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthWeekEventsView: int drawEvent(android.graphics.Canvas,com.android.calendar.Event,int,int,int,boolean)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendStoredText(long,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasAccountService: void sync()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.wifi.p2p.WifiP2pSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void onAttachedToWindow()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: android.location.Location getLastKnownLocation(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceInfoSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$QuickResponseChecker: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void onPause()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$600(com.android.camera.Camera)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBAFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment$2: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowProperScreen()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcast(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Bookmarks: void removeFromBookmarks(android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void doCluster(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$500(com.android.camera.VideoCamera)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[],java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void configureContentView(boolean,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: boolean resolveIntent()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ClassZeroActivity: android.net.Uri replaceMessage(android.telephony.SmsMessage)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: void showWeb(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void createGroup(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ShowOrCreateActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge: boolean performAction(int,int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: boolean onLongClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void onProviderStatusChange()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter$Listener: void onAction(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPicker: void onPause()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getContactsSize()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: long getOriginalId(java.lang.String)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhoneticNameEditorView: void onTypeSelectionChange(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardView: boolean dispatchHoverEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: void fillPhoneTypeContact(com.android.mms.data.Contact,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onAttach(android.app.Activity)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$OnKeyboardActionListener: void onKey(int,int[],int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$PersistTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService$Callbacks: int interceptMotionBeforeQueueingWhenScreenOff(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PowerUsageSummaryActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.model.ImageModel: com.android.mms.util.ItemLoadedFuture loadThumbnailBitmap(com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.SEND_SMS
<com.android.server.MmsServiceBroker$BinderService: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.PhotoSelectionHandler: int getPhotoPickSize()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.NetworkManagementService: void access$400(com.android.server.NetworkManagementService,java.lang.String,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.util.DraftCache: void access$000(com.android.mms.util.DraftCache)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager: void reconcileAccountsWithAccountManager(android.content.Context,java.util.List,android.accounts.Account[],boolean,android.content.ContentResolver)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void <init>(android.content.Context,java.io.File,long,long,java.util.Locale)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getSubscriberId()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void deleteThumbnail()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter: void wipe()>
Permission:android.permission.SEND_SMS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getMsisdn()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: void access$1400(com.android.calendar.AgendaWindowAdapter,com.android.calendar.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportProcessor: boolean readOneVCard(java.io.InputStream,int,java.lang.String,com.android.vcard.VCardInterpreter,int[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity$4: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSelectedContactUri(android.net.Uri)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean isDrmRingtoneWithRights(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.PhoneDisambigDialog: void show()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onOtaCloseFailureNotice()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: void viewMmsMessageAttachment(android.content.Context,com.android.mms.data.WorkingMessage)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.PhoneNumberInteraction: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.ThumbnailManager$ThumbnailTask$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.LocationClustering: java.lang.String generateName(java.util.ArrayList,com.android.gallery3d.util.ReverseGeocoder)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.AccountService: android.os.IBinder onBind(android.content.Intent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: com.android.email.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.email.provider.EmailContent$Account)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$RefreshCalendars: void run()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$1: void removeAllComponents()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AddAccountSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.deviceinfo.Memory: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void handleDown(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallContactActivity: void onStart()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onOptionKeyLongPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult access$6000(com.android.phone.BluetoothHandsfree)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$10: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void goTo(android.text.format.Time,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onHoverEventInternal(android.view.MotionEvent,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void resetStateLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void onCreate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ChipsAddressTextView: android.widget.ListAdapter createAlternatesAdapter(com.android.ex.chips.RecipientChip)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.AutoFixFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsSingleRecipientSender: void <init>(android.content.Context,java.lang.String,java.lang.String,long,boolean,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: java.lang.Object loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void showContactsUnavailableFragmentIfNecessary()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.provider.AccountReconciler: boolean reconcileAccountsInternal(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void onStop()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onViewContactAction(android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: android.database.Cursor getEventCursor(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$2500(com.android.phone.InCallScreen)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity: void dismissFiredAlarms()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$2100(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactEditorAccountsChangedActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void changeParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.VignetteFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS
<com.android.email.EmailAddressAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean isDrmRingtoneWithRights(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.PieStackView: void layout(int,int,boolean,float,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory$2: void run()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkManagementEventObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: void enter()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.emailcommon.service.EmailServiceProxy$12: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.quickcontact.QuickContactActivity: void show()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<android.net.EthernetDataTracker$InterfaceObserver: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.RECORD_AUDIO
<android.inputmethodservice.KeyboardView$2: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void updateSuggestions()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void createContact()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsMessageSender: java.lang.String getOutgoingServiceCenter(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.AccountFilterActivity: java.util.List access$100(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void startObexServerSession()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA
<com.android.camera.Camera: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getFirstContactUri()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasAccountService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity$2: void onPostExecute(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateForegroundCall(com.android.internal.telephony.Phone)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void switchToDefaultView(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.SEND_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessageSender: boolean sendMessage(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleCharacter(int,int[],int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.PicasaDataSource: void loadMediaSetsIntoFeed(com.cooliris.media.MediaFeed,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberId()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getSyncKey()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onRemovePictureChosen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$3: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void onScroll(android.widget.AbsListView,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void addProximityAlertLocked(double,double,float,long,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.NonPhoneActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void setFormattedDigits(java.lang.String,java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter: void dirtyContactsWithinDirtyGroups()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: boolean importLegacyContacts(com.android.providers.contacts.LegacyContactImporter)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: void syncUsers(android.content.SyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void restartSuggestionsOnWordBeforeCursorIfAtEndOfWord(android.view.inputmethod.InputConnection)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void saveDraft(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void performPoll(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: long getWritableEntityId()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void goToToday()>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.CropView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment: void bindGroupMetaData(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onCodeInput(int,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: int getEventAccessLevel(android.content.Context,com.android.calendar.Event)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.ManageCachePage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void updateSubtype(android.view.inputmethod.InputMethodSubtype)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void setKeyguardEnabled(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.InputStreamSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void systemReady()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.LocationManager: void startReceivingLocationUpdates()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.activities.DialtactsActivity$11: void onCallNumberDirectly(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateScreen()>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SecuritySettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: boolean dispatchHoverEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: void onPostExecute(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1200(com.android.phone.InCallScreen,android.os.AsyncResult,char)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: java.util.List getReportItems()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.PhotoAppWidgetConfigure: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$3: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: boolean initNextView(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: java.lang.String getBetterNumberFromContacts(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsUtils: boolean areGroupWritableAccountsAvailable(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowProgramSuccessDialog()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.socialwidget.SocialWidgetProvider$1: void onLoadComplete(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,int,int,int,int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController: void setContactListFilter(int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$BaseFutureTask: void startTask()>
Permission:android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor makeThumbInternal(com.android.providers.media.MediaProvider$ThumbData)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView$Listener: void onSingleTapUp(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsApplication$DelayedInitializer: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.FilmStripView: void resume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.deprecated.VoiceProxy: void revertVoiceInput()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TetherSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$5: boolean onActionItemClicked(android.view.MenuItem)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailAlphaTag()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SubtypeSwitcher: void init(com.android.inputmethod.latin.LatinIME)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.ChipsUtil: boolean tryUpdateRecencyInfo(android.widget.MultiAutoCompleteTextView[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSlidingWindow$AlbumDisplayItem: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager: boolean loadMoreMessages(long,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: boolean isVoicemailAvailable()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: boolean access$700(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.WifiApConfigStore$DefaultState: void enter()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.HttpUtils: byte[] httpConnection(android.content.Context,long,java.lang.String,byte[],int,boolean,java.lang.String,int)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void rescheduleMissedAlarms()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void access$600(com.android.mms.ui.ManageSimMessages,android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onCancelBgTraining(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$Future2Task: void startTask()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void onSuccess(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void onSplitContactConfirmed()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: void addAttendees(java.util.ArrayList)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$1: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.AbstractSyncService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.Icon: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AdvancedWifiSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.BrowserContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ShowOrCreateActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowProgramFailure(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SoundSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void resume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.galaxy.GalaxyRS: void start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$6: void limitReached(java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleSetHidden(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetProvider: void performUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[],long[])>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager: void findSpace(java.io.File,long,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void switchViews(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageCombineFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.Presenter: void present(com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void <init>(android.content.Context,com.android.internal.policy.impl.PhoneWindowManager,android.os.LocalPowerManager)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: java.util.Map getMmsReportStatus()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.SnoozeAlarmsService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void onAccountChosen(com.android.contacts.model.AccountWithDataSet,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiP2pSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity: void setEmptyText()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$Directory: void notifyDirectoryChange(android.content.ContentResolver)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void onProgressComplete(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.quickcontact.QuickContactActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController: void <init>(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupEditorActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void switchFromFullNameToStructuredName()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.Controller: int searchMessages(long,com.android.emailcommon.service.SearchParams)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: android.app.PendingIntent createBroadcastMailIntent(android.content.Context,long,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void acquireAggregationSuggestions(android.content.Context,com.android.contacts.editor.RawContactEditorView)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME$8: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onMoveEvent(int,int,long)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService$ServiceHandler: boolean processTransaction(com.android.mms.transaction.Transaction)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab createNewTab(boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.common.widget.GroupingListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.tablet.TabletStatusBar: void start()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.TintFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void showDialpadInternal(boolean)>
Permission:android.permission.CAMERA
<com.android.wallpaper.walkaround.WalkAroundWallpaper: void access$200(com.android.wallpaper.walkaround.WalkAroundWallpaper)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactsUnavailableFragment: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void next()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.TileImageView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Utility: java.lang.String getConsistentDeviceId(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.PduLoaderManager: com.android.mms.util.ItemLoadedFuture getPdu(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.DetailMode: java.lang.CharSequence[] populateSetViewDetailModeStrings(android.content.Context,com.cooliris.media.MediaSet,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: void processBroadcastIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMemberLoader: void <init>(android.content.Context,long,java.lang.String[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.RetargetFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.MenuExecutor: void access$700(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$11: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: void parseItems()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity: void afterTextChanged(android.text.Editable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService: void reconcileAccountsWithAccountManager(android.content.Context,java.util.List,android.accounts.Account[],boolean,android.content.ContentResolver)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: void process()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onContactListFilterChanged()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void initLoader()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$UserDictionarySettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MmsMessageSender: void sendReadRec(android.content.Context,java.lang.String,java.lang.String,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.OneTimeInitializer: void initialize(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntryHandler: void onEntryCreated(com.android.vcard.VCardEntry)>
Permission:android.permission.CALL_PHONE
<com.android.phone.PhoneInterfaceManager: void call(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void bindGroupMetaData(android.database.Cursor)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri access$1300(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$DiscardDraftListener: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleShow()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.PhoneNumberInteraction: void performAction(android.content.Context,java.lang.String,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventView$AddAttendeeClickListener: void onClick(android.view.View)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void updateHomeClock()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean invokeCustomRequest(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$6: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: android.net.Uri getUri()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment$8: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.ContactsSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.Navigator: void goToToday()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.voicedialer.VoiceContact: java.util.List getVoiceContacts(android.app.Activity)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: boolean generateAlerts(android.content.Context,com.android.calendar.alerts.NotificationMgr,android.content.SharedPreferences,android.database.Cursor,long,int)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void appendEventAccessibilityString(java.lang.StringBuilder,com.android.calendar.Event)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void saveAndRegisterProfile(android.net.sip.SipProfile)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: android.net.Uri getDownloadUri(long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.SearchActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$700(com.android.server.net.NetworkPolicyManagerService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardSwitcher: void onPressKey(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.AttachmentDownloadService: boolean canPrefetchForAccount(com.android.emailcommon.provider.Account,java.io.File)>
Permission:android.permission.READ_CONTACTS
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult access$4800(com.android.phone.BluetoothHandsfree)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: void sendAcknowledgeInd(com.google.android.mms.pdu.RetrieveConf)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$800(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkTemplate,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: void parseItems()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void startExtraInfoQuery()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$MyHandler: void onPollAlarm()>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.WebViewController: void onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiP2pSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void clearLoadingBit(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataAdapter: void resume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void setGrabbedState(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: boolean isContactWritable()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.ExchangeUtils: com.android.emailcommon.service.IEmailService getExchangeService(android.content.Context,com.android.emailcommon.service.IEmailServiceCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri readDraftMmsMessage(android.content.Context,long,java.lang.StringBuilder)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void setController(com.android.browser.WebViewController)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onSwipeDown()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlideshowView: void removeAllComponents()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3: void onReceivedTitle(android.webkit.WebView,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void access$400(com.android.calendar.AllInOneActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$AddContactTask: void onPostExecute(java.lang.Object,java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupOptions: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayNameUsingSrc(java.lang.String,long,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactTileListFragment$2: void onContactSelected(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$2: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.SearchResultsActivity: void afterTextChanged(android.text.Editable)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri createDraftMmsMessage(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void access$300(com.android.providers.downloads.DownloadService)>
Permission:android.permission.READ_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$2800(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$InsertOperationConstrutor: boolean onElement(com.android.vcard.VCardEntry$EntryElement)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController: void showEmptyState()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: android.content.Intent newFlashIntent()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.WeakAsyncTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addStatusBarWindow()>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: boolean hangupRingingCall(com.android.internal.telephony.Call)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventLoader: void startBackgroundThread()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void unlock()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.data.Contact$ContactsCache$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleSimStateChange(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void doUpdateTimezoneDependentFields()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void reportFailedAttempt()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void handleSelectSyncedCalendarsClicked(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$KeyboardLayoutPickerActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PieControl: void access$000(com.android.browser.PieControl)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: boolean parseItem()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void closeCurrentTab(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.AccountSelectionUtil: void doImportFromSim(android.content.Context,android.accounts.Account)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.policy.NetworkController: void <init>(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri getContactFilterUri(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleWeeksAdapter: void updateParams(java.util.HashMap)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallMenuView: boolean dispatchKeyEvent(android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupDetailFragment$3: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS,android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.UiccSmsController: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>
Permission:android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED,android.permission.DOWNLOAD_CACHE_NON_PURGEABLE,android.permission.DOWNLOAD_WITHOUT_NOTIFICATION,android.permission.INTERNET,android.permission.ACCESS_CACHE_FILESYSTEM,android.permission.WRITE_EXTERNAL_STORAGE,android.permission.ACCESS_DOWNLOAD_MANAGER
<com.android.providers.downloads.DownloadProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: void onResume()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessagesAdapter$SearchCursorLoader: java.lang.Object loadInBackground()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountServerBaseFragment$4: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void createExceptionResponse(long,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DrawOverlayFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void updateDatabaseFromHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsApplication: java.lang.Object getSystemService(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void setTitleInActionBar(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.DictionaryCollection: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteFromTable(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SharpenFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA
<com.android.camera.Camera: void ensureCameraDevice()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DateTimeSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages$1: void onChange(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void onRetryTimeout()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onCodeInput(int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void access$100(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$10: android.accounts.AccountManagerFuture start()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$HighlightRectangle: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void setSearchMode(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: void start(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.RECORD_AUDIO
<android.media.MediaRecorder: void setAudioSource(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)>
Permission:android.permission.READ_CONTACTS
<com.android.email.activity.MessageView$PresenceCheckTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void setSearchMode(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void initialize(android.os.Bundle,long)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void onAttachedToWindow()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab: void cancelGrab()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.EasOutboxService: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator$1: void onUserChanged(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri getContactFilterUri(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.VideoCamera: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.ApplicationSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: java.util.ArrayList asList(java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.provider.BrowserProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$1: void onChange(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.voicedialer.VoiceContact: java.lang.String redialNumber(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView: android.widget.ListAdapter createAlternatesAdapter(com.android.ex.chips.RecipientChip)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.AccountSelectionUtil: void doImportFromSdCard(android.content.Context,android.accounts.Account)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: java.lang.String getOwner(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.CustomContactListFilterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getContactUri(int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean haveSomethingToCopyToSDCard(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.AggregationSuggestionEngine: void loadAggregationSuggestions(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest: void testWokenByNonMenuKey()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$KeyboardLayoutPickerActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub: android.os.Bundle getCellLocation()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE,android.permission.MANAGE_NETWORK_POLICY,android.permission.CONNECTIVITY_INTERNAL
<com.android.server.net.NetworkPolicyManagerService: void setRestrictBackground(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: void loadPhoto()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarEventModel: void <init>(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: void clearDefaultsForInactiveSubIds()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: android.os.Bundle createSaveState()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageUtils: java.lang.String getLocalNumber()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity$ContactBrowserActionListener: void onSelectionChange()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void initVoicemailButton()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser: void parse(java.io.InputStream)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void handleServiceStateChanged(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.accounts.SyncSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void resetContactsDictionary(com.android.inputmethod.latin.Dictionary)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventLoader$LoadEventDaysRequest: void processRequest(com.android.calendar.EventLoader)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void setSearchMode(boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void <init>(android.content.Context,long,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void commandsParser()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PickerActivity: void onPause()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$KeyboardLayoutPickerActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$19: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void access$1200(com.android.phone.PhoneApp)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification$3: void onPostExecute(java.lang.Integer)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void onCloseTab(com.android.browser.Tab)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.vcard.ImportVCardActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceInput: void <init>(android.content.Context,com.android.inputmethod.voice.VoiceInput$UiListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock(int)>
Permission:android.permission.READ_SMS
<com.android.mms.model.ImageModel: void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView$CalendarGestureListener: boolean onDown(android.view.MotionEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaByDayAdapter$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean checkProviderState(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BaseUi: void <init>(android.app.Activity,com.android.browser.UiController)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BaseUi: void setUseQuickControls(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocationSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: void onDownEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.SecondLevelIndicatorControlBar: void onSettingChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ProviderStatusWatcher: void notifyListeners()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.MailService: boolean access$200(com.android.email.service.MailService,com.android.email.Controller,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookVcards(javax.obex.Operation,int,int,boolean,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.deviceinfo.UsbSettings: void onResume()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ContrastFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.Icon: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FlipFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: boolean onItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageApplicationsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: void onPause()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsUtils: long queryForContactId(android.content.ContentResolver,long)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void onRefreshKeyboard()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.ADNList: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: void handleNest()>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_RESPOND_VIA_MESSAGE,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhone$SipConnection: void dial()>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void swipeRight()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void onDraw(android.graphics.Canvas)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void transferData(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void onReceivedTitle(com.android.browser.Tab,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: void handleNest()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri createDraftMmsMessage(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.settings.RadioInfo: void onPause()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$MessageStatusListener: void onMaxPendingMessagesReached()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.mail.store.ExchangeStore: android.accounts.AccountManagerFuture removeSystemAccount(android.content.Context,com.android.email.provider.EmailContent$Account,android.accounts.AccountManagerCallback)>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService: void stopListening(android.speech.IRecognitionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.socialwidget.SocialWidgetProvider: void access$000(android.content.Context,int,android.appwidget.AppWidgetManager,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FlipFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.widget.ContactHeaderWidget: void bindFromPhoneNumber(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void access$700(com.android.mms.ui.ManageSimMessages)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: android.os.Bundle _getProviderInfoLocked(java.lang.String)>
Permission:android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.net.Uri getAlbumArtOutputUri(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,long,android.net.Uri)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void editSlideshow()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void access$2100(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler: boolean handleSuddenJumping(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.OutputStreamTarget: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.MoreSuggestionsView$1: boolean onCustomRequest(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter: void <init>(com.android.contacts.interactions.PhoneNumberInteraction,android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void access$2400(com.android.settings.DataUsageSummary)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void reallyStartListening(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceAdminSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.FilterSet: void updateData()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView$GotoBroadcaster: void onAnimationEnd(android.view.animation.Animation)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthWeekEventsView: void onDraw(android.graphics.Canvas)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternDetected(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.EntityDeltaList: com.android.contacts.model.EntityDelta getFirstWritableRawContact(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.BaseRecipientAdapter$DefaultFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void addMoreNetworks()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void systemReady()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void deleteExceptionEvent()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void access$2000(com.android.calendar.EventInfoFragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.QuickContactDivot: void assignContactFromEmail(java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastRangeForSubscriber(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.quickcontact.QuickContactActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.PhotoSelectionHandler: com.android.contacts.model.EntityDeltaList getDeltaForAttachingPhotoToContact()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity$10: void onSearchButtonPressed()>
Permission:android.permission.READ_SMS
<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ActionModeHandler: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler$SmsRecycler: boolean checkForThreadsOverLimit(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity: void onBackPressed()>
Permission:android.permission.READ_SMS
<com.android.mms.util.DownloadManager: java.lang.String getMessage(android.net.Uri)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: android.location.Location getLastKnownLocation(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SelectAccountDialogFragment$Listener: void onAccountChosen(com.android.contacts.model.AccountWithDataSet,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.AccountBackupRestore: boolean doRestoreAccounts(android.content.Context,com.android.email.Preferences)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SelectAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.GLTextureTarget: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<android.accounts.AccountManagerService$SimWatcher: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasOutboxService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter$2: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupDetailFragment$2: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RedEyeFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$2: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: void access$1200(com.android.inputmethod.keyboard.KeyboardView,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView: void addToDictionary(java.lang.CharSequence)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void onClose()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$KeyboardLayoutPickerActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.ContactList: com.android.mms.data.ContactList blockingGetByUris(android.os.Parcelable[])>
Permission:android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean disableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.voicedialer.RecognizerEngine: void setupGrammar()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: void onSimLockChangedResponse(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void asyncReloadDictionaryIfRequired()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void handleSmsReceived(android.content.Intent,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.ContactsPreferencesActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void handleDialButtonClickWithEmptyDigits()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdn()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.SystemUI: void start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TitleBarXLarge: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void resetContactsDictionary(com.android.inputmethod.latin.ContactsDictionary)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void reuseTab(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$CryptKeeperSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage$1: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void updateAllOptions()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int update(int,long,android.content.ContentValues)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void onWindowFocusChanged(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.preferences.GeneralPreferencesFragment$3: boolean onPreferenceClick(android.preference.Preference)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.HeadUpDisplay$2: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addAttachment(java.lang.String,android.net.Uri,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService$Stub: java.lang.String getDeviceId()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: void handleNest()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.LocationSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactItemListAdapter: void onContentChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageView: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.agenda.AgendaListView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SelectCalendarsAdapter$RefreshCalendars: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.MenuExecutor$ProgressListener: void onProgressComplete(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.SyncManager: java.lang.String getDeviceIdInternal(android.content.Context)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void moveOutboxMessagesToQueuedBox()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView$2: boolean onCustomRequest(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.IntentHandler$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DataConnection$DcActivatingState: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void putMessage(android.os.Message)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: void onBackPressed()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.ContactLoaderFragment: android.net.Uri getPreAuthorizedUri(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.test.FragmentTestActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$20: void run()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<android.media.AudioService: void <init>(android.content.Context)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment$2: void run()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: void onNewIntent(android.content.Intent,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.Sources: void <init>(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$5600(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptFallback(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.ConcatenatedDataSource: void loadMediaSets(com.cooliris.media.MediaFeed)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void access$1100(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PreloadRequestReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener: void onTrigger(android.view.View,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void keyguardDone(boolean)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.StatusBarService: void onCreate()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ExchangeStore$ExchangeTransport: android.os.Bundle checkSettings(java.net.URI)>
Permission:android.permission.READ_PHONE_STATE
<android.telecom.TelecomManager: void showInCallScreen(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIccSerialNumber()>
Permission:android.permission.READ_CONTACTS
<com.android.voicedialer.BluetoothVoiceDialerActivity$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: int getPhotoPickSize()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AddAccountSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.MtpDeviceSet: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AccountSyncAdapter: void setSyncKey(java.lang.String,boolean)>
Permission:android.permission.CALL_PHONE
<com.android.internal.telephony.ITelephony$Stub: void call(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void onDialerClose(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.DialogPicker: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleKeyguardDone(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager: void verifySpace(int,java.lang.String,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.FilterSet: long reload()>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogQueryHandler: void markNewVoicemailsAsOld()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$AddContactTask: void onPostExecute(com.android.contacts.ui.EditContactActivity,java.util.ArrayList)>
Permission:android.permission.GET_ACCOUNTS
<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void copyToPhoneMemory(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult access$400(com.android.phone.BluetoothAtPhonebook,java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: boolean isGroupMembershipEditable()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomServiceImpl: boolean isTtySupported()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addAudio(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToPackedGrayFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.android.contacts.PhoneCallDetails)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.NsdService$NsdStateMachine$DefaultState: void enter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void onTrigger(android.view.View,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void onCreate(android.os.Bundle,android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter$DayAdapterInfo: void <init>(android.content.Context)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ClassZeroActivity: void saveMessage()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: boolean allowsToBeAutoCorrected(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void onSendPendingMessages()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactEditorActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController: void sendEventRelatedEvent(java.lang.Object,long,long,long,long,int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab: void onVisibilityChanged(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusLoader: void loadProviderStatus()>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BookmarkDragHandler$BookmarkDragController: void actionItemClicked(android.view.View,com.android.browser.BookmarkDragHandler$BookmarkDragState)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.GrayscaleEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean checkProviderState(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void addMembersToGroup(android.content.ContentResolver,long[],long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactEditorActivity: void onStart()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$2: void deleteAccountPIMData(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService$WMThread: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: java.util.List _getProvidersLocked(android.location.Criteria,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.NotificationController$MessageContentObserver: void onChange(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.NotificationImportExportListener: void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void goTo(com.android.calendar.CalendarController$EventInfo,boolean)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void stop()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingSwitch$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.mail.Store: android.os.Bundle checkSettings()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.EmailServiceUtils: boolean isExchangeAvailable(android.content.Context)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastRangeForSubscriber(long,int,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager: android.accounts.Account[] getAccounts(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void onPause()>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void access$400(com.android.phone.sip.SipEditor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void swipeRight()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PickerActivity: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: void notifyPatternDetected()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.FilterTypeSet: long reload()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void setCurrentTab(android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController,com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void forgotPattern(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: java.util.List getSubInfoUsingIccId(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: long handleInsertException(long,android.content.ContentValues,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void doSingleTapUp(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: boolean isMobilePolicySplit()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter: void update()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub: void deleteAccountPIMData(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void delayedCleanupAfterDisconnect()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean isForwardable(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleVerifyUnlock()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void dispatchTriggerEvent(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$10: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void access$500(com.android.phone.sip.SipEditor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1700(com.android.internal.policy.impl.KeyguardViewMediator,com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BaseUi: void showWeb(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.State: void enter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SpellCheckersSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.WifiStateMachine$InitialState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void updateBigramPredictions()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onDownEvent(int,int,long,com.android.inputmethod.keyboard.PointerTrackerQueue)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem loadItem()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyContactImporter: void updateDisplayNamesAndLookupKeys()>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService: boolean checkPermissions(android.speech.IRecognitionListener)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.FetchUrlMimeType: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ClassZeroActivity: void access$200(com.android.mms.ui.ClassZeroActivity)>
Permission:android.permission.READ_SMS
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DevelopmentSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void initialize(android.os.Bundle,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void postCapture()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BookmarkDragHandler$2: boolean onDrag(android.view.View,android.view.DragEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void setModification(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListItem: void updateAvatarView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.CrashRecoveryHandler: void startRecovery(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.SplitAggregateView: void <init>(android.content.Context,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Dictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity$Listener: void onContactLoaded(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPicker: void onBackPressed()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$600(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$FaceHighlightView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: boolean haveEmailContact(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.StateMachine$SmHandler: void performTransitions()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1500(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void loadDictionary()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$MyLoadingListener: void onLoadingFinished()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.GeneralPreferences: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: java.util.List getAllSubInfoList()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AdvancedWifiSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.NetworkManagementService: void notifyLimitReached(java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.AttachPhotoActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.NameConverter: java.lang.String structuredNameToDisplayName(android.content.Context,java.util.Map)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: void setModelIfDone(int)>
Permission:android.permission.GET_ACCOUNTS,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void checkPermissionsSafe(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void access$1000(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.ReverseGeocoder: void run()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ActionBarAdapter$Listener: void onAction()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView$2: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: java.lang.String formatDateString(int)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$1: void run()>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactSaveService: void deliverCallbackOnUiThread(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$DoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: boolean onQueryTextSubmit(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.model.TextModel: void <init>(android.content.Context,java.lang.String,java.lang.String,int,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity: void access$500(com.android.contacts.activities.ContactBrowserActivity,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleWeeksAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$800(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void bind(com.android.mms.ui.MessageItem,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.webkit.GeolocationService: void start()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void setPermissionEnforced(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.CAMERA
<com.android.wallpaper.walkaround.WalkAroundWallpaper: void startCamera()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag: android.net.Uri getStreamItemPhotoUri()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getSuggestedWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$4500(com.android.mms.ui.ComposeMessageActivity,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void loadSearch(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhoneticNameEditorView: void notifyEditorListener()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void access$1000(com.android.calendar.EventInfoFragment,android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageAccountsSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$AddContactTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void dismissAlarm(long)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertService: boolean updateAlertNotification(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityModifier: void parseExtras(android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.Welcome: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$EntityDeltaComparator: int compare(com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ChipsAddressTextView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.SupplicantStateTracker$InactiveState: boolean processMessage(android.os.Message)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.MediaFeed$2: void run()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void checkPendingNotification()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: boolean pickDefaultSuggestion(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller$7: void onReceiveValue(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: boolean onItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.AccountSelectionUtil: void doImport(android.content.Context,int,android.accounts.Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$7: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerTwoPane$RefreshTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: boolean handleSeparator(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$2600(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$2: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.BookmarkExpandableView: void onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: void addColumnValue(java.util.ArrayList,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void updateEvent(android.view.View)>
Permission:android.permission.WRITE_CONTACTS
<com.android.contacts.CallDetailActivity$5: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.SocialProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.panorama.PanoramaActivity: void onPause()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startQuery(android.content.AsyncQueryHandler,int,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: boolean queueQuery(int,int,android.text.format.Time,java.lang.String,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.PanoramaActivity: void onPause()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.DateTimeSettings: void onResume()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: void onLongPressShiftKey(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void hideWindow()>
Permission:android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogQueryHandler: void fetchCalls(int,int,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: java.lang.String getBestProvider(android.location.Criteria,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventHelper: boolean saveEvent(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService$8: void runInternal(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean onContactInfoLoaded(android.database.Cursor)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.DebugFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void delete(long,long,long,int,java.lang.Runnable)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getBigramPredictions(java.lang.CharSequence)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CropRectFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void scheduleNextAlarmLocked(android.database.sqlite.SQLiteDatabase)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook: void handleAccessPermissionResult(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$2400(com.android.phone.InCallScreen)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$4: void onUserChanged(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void onDestroy()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupContactFromUri(android.net.Uri)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void restoreState(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onContactUriQueryFinished(android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void access$500(com.android.calendar.event.EditEventView)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller$Download: void saveDataUri()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void onPause()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailFragment: void setData(android.net.Uri,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: boolean fixAllDayTime(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: int onStartCommand(android.content.Intent,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.InputManager$Callbacks: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AlertAdapter: void updateView(android.content.Context,android.view.View,java.lang.String,java.lang.String,long,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: void onBackPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListItem: void bind(android.content.Context,com.android.mms.ui.ConversationListItemData)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void finish()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.DismissAllAlarmsService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity next()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncAdapter: java.lang.String getSyncKey()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void startPhotoQuery(long,android.net.Uri,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask: void onSuccess(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.UiccSmsController: boolean updateMessageOnIccEfForSubscriber(long,java.lang.String,int,int,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void restoreSelectedUri(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListXL$RefreshTask: void onPostExecute(java.lang.Boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressPickerFragment: void onItemClick(int,long)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.CalendarSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: android.net.Uri replaceMessage(android.content.Context,android.telephony.SmsMessage[],int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void <init>(android.content.Context,com.android.calendar.agenda.AgendaListView,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void access$400(com.android.mms.transaction.SmsReceiverService)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: int getEventAccessLevel(android.content.Context,com.android.calendar.Event)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$800(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void goTo(long,boolean,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getMsisdn()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterController: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.SystemUIService: void onCreate()>
Permission:android.permission.READ_SMS
<com.android.mms.model.TextModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: void access$400(com.android.inputmethod.keyboard.LatinKeyboardView,com.android.inputmethod.keyboard.PointerTracker,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.PowerManagerService$4: void run()>
Permission:android.permission.CALL_PHONE
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean endCall()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void onDraw(android.graphics.Canvas)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.IState: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportProcessor: boolean readOneVCard(android.net.Uri,int,java.lang.String,com.android.vcard.VCardInterpreter,int[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.wifi.WifiSettings: void onResume()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView$FullPicture: void drawTileView(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: void onSaveInstanceState(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: com.android.phone.InCallScreen$InCallInitStatus internalResolveIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavTabScroller$OnLayoutListener: void onLayout(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void startIncomingCallQuery(com.android.internal.telephony.Connection)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView: void notifyEditorListener()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void initView(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void screenTurnedOff(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<android.provider.Calendar$Calendars: int delete(android.content.ContentResolver,java.lang.String,java.lang.String[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.PanoramaActivity: void onBackPressed()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumSetPage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$11: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageSlicer: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DuotoneFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void access$300(com.android.contacts.ContactsListActivity,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.MasterClear: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountServerBaseFragment$4: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void access$300(com.android.providers.calendar.CalendarProvider2,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetection(android.location.Country,android.location.Country,boolean,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorButton: void onSettingChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA
<com.android.camera.Camera$4: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.calendar.LaunchActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.RecentCallsListActivity: void access$000(com.android.contacts.RecentCallsListActivity)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: int getEventAccessLevel(android.content.Context,com.android.calendar.Event)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$AccountSet: java.util.ArrayList buildDiff()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk$1: void run()>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void updateBluetoothIndication(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.BluetoothSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: void onDestroy()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader: void onStartLoading()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Bookmarks$1: void updateImages(android.content.ContentResolver,java.lang.String,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity$AddContactTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$Watchdog$1: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager: long discardPurgeableFiles(int,long)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.RetryScheduler: void scheduleRetry(android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.EmailContent$Account)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ActionBarAdapter: void setCurrentTab(int,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.CropView$FaceHighlightView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: boolean onLongPress(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.settings.RadioInfo: void onResume()>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService: void cancel(android.speech.IRecognitionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getHeaderEntryView(android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$500(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceId()>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void handleStopMessage()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.XLargeUi: void showWeb(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5700(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.ChooseTypeAndAccountActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void keyguardDone(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: void onPostExecute(com.android.contacts.PhoneCallDetails[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkAlertObserver: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState: boolean processMessage(android.os.Message)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOnLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$4: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: boolean isTtySupported()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogAdapter$CallFetcher: void fetchCalls()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.DialogPicker: void onCreate(android.os.Bundle)>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService$RecognitionServiceBinder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabBar$TabView: void closeTab()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.database.Cursor queryPhoneNumbers(long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView$Picture: void draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onUseAsPrimaryChosen()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.FaceUnlock: void handleServiceConnected()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: boolean access$1600(com.android.calendar.EditEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaService: boolean getIsSyncable(android.content.Context,android.accounts.Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleCharacterWhileInBatchEdit(int,int,int,int,android.view.inputmethod.InputConnection)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOnUpstreamMobileConnection(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.common.widget.GroupingListAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet: void processQueue()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void handleOnscreenButtonClick(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_CONTACTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void onCreate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onDownEventInternal(int,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.quickcontact.QuickContactWindow: void handleData(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy$KeyboardFlickGestureDetector: boolean dispatchFlick(android.view.MotionEvent,android.view.MotionEvent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void loadDraft()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.MoreSuggestionsView$1: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactListEmptyView: void show(boolean,boolean,boolean,boolean,boolean,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$1100(com.android.server.net.NetworkPolicyManagerService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: void simulateKeyPress(com.android.inputmethod.keyboard.Key)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri access$400(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void switchToTab(com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotBar: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.PopImapSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void removeTab(com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PieControl: void onClick(android.view.View)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void pause()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void configureScreenFromIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView: void addToDictionary(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: android.view.View switchViews(boolean,float,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: void cleanupPhotoStore()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowProgramFailureNotice(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactSelectionActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: void outputRawContactsAsVCard(java.io.OutputStream,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$PhoneData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void access$700(com.android.contacts.activities.DialtactsActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.IndexerListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void setEntityDeltaList(com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.PieMenu: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.emailcommon.service.AccountServiceProxy$5: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void eventsChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ConnectivityService: boolean isNetworkMeteredUnchecked(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreen: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage$UpdateBookmarkTask: java.lang.Void doInBackground(android.content.ContentValues[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ClassZeroActivity$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: void checkFilterValidity(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: java.lang.String getBetterNumberFromContacts(java.lang.String,java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage loadDraft(com.android.mms.ui.ComposeMessageActivity,com.android.mms.data.Conversation)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1300(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.ChipsUtil: void updateRecencyInfo(com.android.ex.chips.RecipientEditTextView)>
Permission:android.permission.READ_SMS
<com.android.providers.telephony.MmsSmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void onSaveCompleted(boolean,int,boolean,android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: boolean isDuplicateName(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.LoadingListener: void onLoadingFinished()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.VCardImportExportListener: void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void persistThumbnail()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void doContactDelete(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void access$600(com.android.inputmethod.latin.LatinIME,android.view.inputmethod.EditorInfo,boolean)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager: void verifySpaceBeforeWritingToFile(int,java.lang.String,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.CropImage: void onPause()>
Permission:android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.FolderSyncParser: boolean parse()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$MyHandler: void onRebootRecovery()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DockSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$MyHeadUpDisplayListener$1: void run()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: void access$400(com.android.inputmethod.keyboard.KeyboardView,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onRestart()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.GoogleSource: void createMyContactsIfNotExist(android.accounts.Account,android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: void updateHeaderFooter(int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity: void setupContactDetailFragment(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commandsParser()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.HeadUpDisplay$Listener: void onSharedPreferenceChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntryConstructor: void endEntry()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$900(com.android.phone.InCallScreen)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.wifi.p2p.WifiP2pSettings: void onResume()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: boolean isRegistered(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameStore: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions: void startLongPressTimer(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBigramDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactEntryListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void startEmergencyCallFromAirplaneModeSequence(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: void refresh(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: java.util.List getProviders(android.location.Criteria,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleHide()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.vcard.SelectAccountActivity: void onStart()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.activity.Welcome$1: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhotoActionPopup$Listener: void onRemovePictureChosen()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onClick(android.view.View)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.SlideshowPage$1: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsActivity: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: int dispatchTrackball(com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogFragment: void fetchCalls()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.SocialProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManagerResponse$Stub$Proxy: void onResult(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.EdgeView: void removeAllComponents()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment$2: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.CallLogAsync$GetLastOutgoingCallTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.Gallery: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.GroupingListAdapter: void onContentChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void access$500(com.android.contacts.editor.ContactEditorFragment,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View createLockScreen()>
Permission:android.permission.READ_CONTACTS
<com.android.internal.widget.ContactHeaderWidget: void bindFromEmail(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumView: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$32: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void eventsChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.inputmethod.SpellCheckersSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupDetailFragment$2: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: void systemReady()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageViewFragment: void onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorControlWheelContainer: void onSettingChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean smsContact(android.database.Cursor)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.GrainFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PowerUsageSummaryActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailFragment: void access$400(com.android.contacts.group.GroupDetailFragment,android.database.Cursor)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.IEmailService getExchangeService(android.content.Context,com.android.emailcommon.service.IEmailServiceCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView: void onLabelRebuilt()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasSyncService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void reportFailedUnlockAttempt()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.PanoramaActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarAlerts: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void ensureActiveMobilePolicyLocked()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectCalendarsFragment: void eventsChanged()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.ui.SurfaceTargetFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.OutputStreamTarget: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void reloadEvents()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService$Callbacks: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getVideoThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DrawRectFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.SMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter: void setSyncKey(java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void access$900(com.android.contacts.activities.PeopleActivity,com.android.contacts.activities.ActionBarAdapter$TabState)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onTransitionKey(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.Key,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator$3: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.SlideEditorActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$1: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$1000(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.CropView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOffLocked()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Event: android.database.Cursor instancesQuery(android.content.ContentResolver,java.lang.String[],int,int,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.webkit.GeolocationService: boolean start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$MultiWaveViewMethods: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: com.android.browser.Controller createController()>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupBrowserActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.InLineSettingPicker$3: boolean onTouch(android.view.View,android.view.MotionEvent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void stopVideoRecordingAndShowAlert()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsUtils: java.lang.String querySuperPrimaryPhone(android.content.ContentResolver,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.PhoneNumberHelper: boolean canSendSmsTo(java.lang.CharSequence)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.RotateEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: java.lang.String getLine1NumberForDisplay(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService$Callbacks: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity$1: void onContactLoaded(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: boolean handleChars(android.content.Context,java.lang.String,android.widget.EditText)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.StateMachine$SmHandler: void invokeEnterMethods(int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub$Proxy: void snoozePolicy(android.net.NetworkTemplate)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment$1: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void handleBootCompleted()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.ImportExportInteraction: void access$000(com.android.contacts.interactions.ImportExportInteraction,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.BaseStatusBar$NotificationClicker: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void adjustUserActivityLocked()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactEditorActivity: void onBackPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void handleUp(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$5: void cancel()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean access$100(com.android.inputmethod.keyboard.LatinKeyboardView,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub: void cancel(android.speech.IRecognitionListener)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void resume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: void onDataSetChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean smsContact(android.database.Cursor)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.KeyInputQueue$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SoundSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.DockSettings: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.galaxy.GalaxyView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void onDraw(android.graphics.Canvas)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.AttachmentEditor: boolean update(com.android.mms.data.WorkingMessage)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void syncReloadDictionaryIfRequired()>
Permission:android.permission.GET_ACCOUNTS
<android.provider.BrowserContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$13: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity$ContactDetailLoaderFragmentListener: void onDetailsLoaded(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void updateHomeTime()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void onPressKey(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onUseAsPrimaryChosen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$NameData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithPhoneNumber(java.util.Collection)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallerInfoCache$CacheAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void access$100(com.android.mms.ui.ConversationList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallTouchUi: void onTrigger(android.view.View,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.LocalAlbumSet: java.util.ArrayList loadSubMediaSets()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: void swipeDown()>
Permission:android.permission.RECEIVE_MMS
<android.telephony.SmsManager: void downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.DialtactsActivity: void onResume()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BlendFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void addVoiceMailNumberPanel()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: boolean updateEffectSelection()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void onBackPressed()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void access$1600(com.android.gallery3d.app.AlbumSetPage,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.NoConfirmationSendService: int onStartCommand(android.content.Intent,int,int)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void handleSipReceiveCallsOption(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter: boolean parse(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.Divot: void assignContactFromEmail(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS
<com.android.contacts.SearchResultsActivity: void doContactDelete(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateBigramPredictions()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: void onTextChanged(java.lang.CharSequence,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$4: void onSingleTapUp(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: boolean handleChars(android.content.Context,java.lang.String,boolean,android.widget.EditText)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ImportExportDialogFragment: void doShareVisibleContacts()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin: void startLogin()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void <init>(android.content.Context,java.util.Locale)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: android.app.Notification makeNewAlertNotification(android.content.Context,java.lang.String,java.lang.String,int,boolean,long,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.StraightenEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerTwoPane: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void createButtonsSpinner(int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ImportCompleteListener: void onProgressComplete(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.ContactsSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactPhotoLoader$LoaderThread: void loadPhotosFromDatabase()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ImportExportInteraction$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void access$000(com.android.contacts.activities.DialtactsActivity,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$PostalData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$AmsTask: void doWork()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallCard: void onImageLoadComplete(int,java.lang.Object,android.widget.ImageView,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: boolean onBackKey()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: void <init>(android.content.Context,com.android.calendar.agenda.AgendaListView)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getMmsNewMessageNotificationInfo(android.content.Context,java.util.Set)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void setEmptyText()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageSlicer: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.CallDetailActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView: void notifyEditorListener()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$WaveViewMethods$1: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventHelper: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void handleSmsSent(android.content.Intent,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TetherSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$MyLoadingListener: void onLoadingFinished()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: void closeTab(com.android.browser.Tab)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DreamSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void onRestart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.pim.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.AbstractSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void regenerateInstancesTable()>
Permission:android.permission.CAMERA
<com.android.camera.Camera: void access$700(com.android.camera.Camera)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ImportExportDialogFragment$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: int getWritableEntityIndex()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$9: java.lang.Long doInBackground(com.android.browser.Tab[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportSimUnlocked()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3: void access$1600(com.android.browser.Tab$3,boolean,android.os.Message)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.FilmStripView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet: void access$700(com.android.email.service.AttachmentDownloadService$DownloadSet)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallerInfoCache$CacheAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.CalendarPreferenceActivity: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.PosterizeFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: java.io.File getCacheDestination(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void <init>(com.android.contacts.editor.ContactEditorFragment,android.content.Context,com.android.contacts.editor.BaseRawContactEditorView,int,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.GoogleCalendarUriIntentFilter: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteMatchingCalendars(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void acquireAggregationSuggestions(com.android.contacts.editor.RawContactEditorView)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.JoinContactActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetModel: void buildFromCursor(android.database.Cursor,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FisheyeFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: void launchTransaction(int,com.android.mms.transaction.TransactionBundle,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.UserDictionaryList: void onResume()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void detectAndSendKey(int,int,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void goToLockScreen()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void performPollLocked(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$300(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPostalAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$PointerQueue: void releaseAllPointersOlderThan(com.android.inputmethod.latin.PointerTracker,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ConfirmAddDetailActivity: com.android.contacts.model.EntityDelta addEditableRawContact(android.content.Context,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void loadDictionaryAsync()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: boolean access$1200(com.android.camera.VideoCamera)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity: void onRestoreInstanceState(android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: byte[] loadAvatarData(com.android.mms.data.Contact)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$1300(com.android.contacts.activities.ConfirmAddDetailActivity)>
Permission:android.permission.READ_SMS
<com.android.mms.model.RegionMediaModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactPickerFragment: boolean isSyncActive()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupDetailActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasAccountService: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager: boolean sendPendingMessages(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void configureListFragmentForRequest()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.Navigator: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAlarmManager: void rescheduleMissedAlarms()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.widget.QuickContactBadge$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromPduBody(android.content.Context,com.google.android.mms.pdu.PduBody)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void onCancel(android.content.DialogInterface)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void onCodeInput(int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.CallLogAsync$GetLastOutgoingCallTask: java.lang.String doInBackground(com.android.phone.CallLogAsync$GetLastOutgoingCallArgs[])>
Permission:android.permission.READ_SMS
<com.android.mms.util.DraftCache: void rebuildCache()>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub: void stopListening(android.speech.IRecognitionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: java.util.List getContactInfoForPhoneUris(android.os.Parcelable[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleWeeksAdapter: void onDayTapped(android.text.format.Time)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.Gallery: void onResume()>
Permission:android.permission.RECORD_AUDIO
<com.android.internal.widget.PasswordEntryKeyboardView: void swipeRight()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactsUnavailableFragment: void update()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void bindNotifInd(com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onClick(android.view.View)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.StaticBackground: void removeAllComponents()>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri access$200(android.content.Context,com.android.mms.data.Conversation,java.lang.StringBuilder)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.PhoneNumberPickerFragment: boolean isSyncActive()>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.EmailServiceProxy$11: void run()>
Permission:android.permission.READ_PRIVILEGED_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getDeviceId(java.lang.String)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhotoEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
Permission:android.permission.CAMERA
<com.android.camera.VideoCamera: void onSharedPreferencesChanged()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy$KeyboardFlickGestureDetector: boolean onHoverEvent(android.view.MotionEvent,com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: boolean access$300(com.android.inputmethod.latin.LatinKeyboardBaseView,int,com.android.inputmethod.latin.PointerTracker)>
Permission:android.permission.READ_CALENDAR
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity next()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView$ContextMenuHandler: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void onRestoreInstanceState(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$4: void startTask()>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage$MessageStatusListener: void onMessageSent()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void wakeWhenReadyLocked(int)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri readDraftMmsMessage(android.content.Context,com.android.mms.data.Conversation,java.lang.StringBuilder)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void pickPhoto(int)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.RetryScheduler: int getRetrieveStatus(long)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.ACCESS_NETWORK_STATE,android.permission.READ_EXTERNAL_STORAGE
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void refreshSelectedContactUri()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub: java.util.List getNeighboringCellInfo()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.model.VideoModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void access$400(com.android.inputmethod.voice.VoiceIMEConnector,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$9: android.accounts.AccountManagerFuture start()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void updateEnabledSubtypes()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountServerBaseFragment$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.WaveView: void tryTransitionToStartAttemptState(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactTileView$Listener: void onCallNumberDirectly(java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: android.database.Cursor getAttendeesCursor(android.content.Context,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.CameraHeadUpDisplay: void restorePreferences(android.hardware.Camera$Parameters)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcast(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$HighlightRectangle: void removeAllComponents()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageSlicer: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void onResume()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.GoogleSource: void attemptMyContactsMembership(com.android.contacts.model.EntityDelta,java.lang.String,java.lang.String,android.content.Context,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder: void setPreviewDisplay(android.view.SurfaceHolder,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.BluetoothSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5800(com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Utils: java.lang.String getDayOfWeekString(int,int,long,android.content.Context)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void finishRecorderAndCloseCamera()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void doResumeUpdates()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ResizeFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void reloadDataAndSetSelectedUri(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$3: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$3: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: android.os.Bundle getProviderInfo(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.systemui.net.NetworkOverLimitActivity$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_SMS
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: boolean save(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.AlphaBlendFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onDestroy()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$2300(com.android.phone.InCallScreen)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$ReloadTask: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDeltaList: void buildSplitContactDiff(java.util.ArrayList,int[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView: void notifyEditorListener()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: void retrieve()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$AnniversaryData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AddAccountSettings: void onAuthDescriptionsUpdated()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$3500(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateIncomingCallWidgetHint(int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$PruneThumbnails: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init>(com.android.contacts.activities.PhotoSelectionActivity,android.content.Context,android.view.View,int,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment$2: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void access$100(com.android.browser.Controller,android.os.Bundle,android.content.Intent,long,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void enter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$UserDictionarySettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: android.view.View switchViews(boolean,float,float)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.ScrollerView: void onLayout(boolean,int,int,int,int)>
Permission:android.permission.SEND_SMS
<android.telephony.SmsManager: void sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.USE_SIP,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.SipCallOptionHandler$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener: void onPressKey(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: void deleteFromSim(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.RecipientAdapter: android.database.Cursor access$100(com.android.ex.chips.BaseRecipientAdapter,java.lang.CharSequence,int,java.lang.Long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDoneDrawing()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactsFrontDoor: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void processMotionEvent(int,int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter: void bindView(android.view.View,android.database.Cursor,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$40: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BaseUi: boolean onBackKey()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.MasterClear: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: void setUpAdapter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardStatusViewManager: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void onRestart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: boolean switchToTab(com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void handleUp(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SettingsPreferenceFragment: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void goToLockScreen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performActionForKey(com.android.inputmethod.keyboard.Key,int,android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: void onAttachFragment(android.app.Fragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void restartSuggestionsOnWordBeforeCursor(android.view.inputmethod.InputConnection,java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowHome()>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: java.lang.String getDeviceId()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void createExceptionResponse(long,long,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayFragment: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.net.DataUsageMeteredSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: boolean saveReminders()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void generateBinaryDictionary()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1900(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountsListAdapter: void <init>(android.content.Context,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.voicedialer.VoiceDialerActivity$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer$OneEntryHandler: boolean onInit(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void asyncDeleteDraftMmsMessage(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PieControl$TabAdapter$1: void onClick(android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$1400(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: com.android.phone.InCallScreen$SyncWithPhoneStateStatus syncWithPhoneState()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onPhotoSelected(android.graphics.Bitmap)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE,android.permission.MANAGE_NETWORK_POLICY
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies()>
Permission:android.permission.GET_ACCOUNTS
<com.android.development.AccountsTester$3: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void doFilter(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: void addAttendees(java.util.HashMap)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void configureContactListFragmentForRequest()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: void doShareVisibleContacts()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void closeCurrentTab()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaByDayAdapter: void calculateDays(com.android.calendar.AgendaWindowAdapter$DayAdapterInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void sendFragmentVisibilityChange(int,boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IccProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onInvalidSelection()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.ContactsPreferencesActivity$DisplayAdapter: void <init>(android.content.Context)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void onStop()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity$4: void onChange(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getGroupIdLevel1()>
Permission:android.permission.CAMERA
<android.hardware.Camera: android.hardware.Camera open()>
<android.hardware.Camera: android.hardware.Camera open(int)>
Permission:android.permission.READ_CONTACTS
<com.android.calendar.EventInfoActivity: void initAttendeesCursor()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
Permission:android.permission.READ_SMS
<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: void updateInCallNotification()>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: int getCalculatedPreferredNetworkType()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onRepeatKey(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupExchange: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: boolean onKey(android.view.View,int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.performance.ThroughputFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.CaptureAnimManager: boolean drawAnimation(com.android.gallery3d.ui.GLCanvas,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointers(long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean showMessageDetails(com.android.mms.ui.MessageItem)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: void processMessage(android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void callListenerOnCodeInput(com.android.inputmethod.keyboard.Key,int,int[],int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.CalendarSyncEnabler: java.lang.String enableEasCalendarSyncInternal()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController: void showContactWithUpdates(boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessagesByThreadId(android.content.Context,long)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogListItemHelper: void configureCallSecondaryAction(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncReloadDictionaryIfRequired()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$6: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.SlideshowEditActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageViewFragmentBase: java.io.File performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void <init>(android.content.Context,java.io.File,long,long,com.android.inputmethod.latin.Flag[],java.util.Locale)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages: void access$000(com.android.mms.ui.ManageSimMessages)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getContactNamesByNumber(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailLayoutController: void <init>(android.app.Activity,android.os.Bundle,android.app.FragmentManager,android.view.View,com.android.contacts.detail.ContactDetailFragment$Listener)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment$MessagesLoaderCallback: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.MODIFY_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayName(java.lang.String,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.PhoneCallDetailsHelper: void setPhoneCallDetails(com.android.contacts.PhoneCallDetailsViews,com.android.contacts.PhoneCallDetails,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.SearchResultsActivity: void onSearchTextChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.Gallery: void startGetContent(android.content.Intent)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTrackerQueue: void releaseAllPointersExcept(com.android.inputmethod.keyboard.PointerTracker,long)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub: android.accounts.Account[] getAccounts(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.InputStreamSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onCustomRingtoneQueryTimeout(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventView: boolean prepareForSave()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerOnePane: void onRefresh()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void onBackPressed()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onUserInteraction()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.EmailServiceProxy: void <init>(android.content.Context,java.lang.String,com.android.emailcommon.service.IEmailServiceCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$9: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void access$200(android.speech.SpeechRecognizer)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.Gallery: void initializeDataSource()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1AlphaTag()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void selectFirstFoundContactAfterDelay()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryWithContactIdAndLookupKey(android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,android.os.CancellationSignal)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$OnKeyboardActionListener: void swipeDown()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void afterTextChanged(android.text.Editable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.PostalAddressPickerFragment: boolean isSyncActive()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo: android.net.Uri getAllDownloadsUri()>
Permission:android.permission.READ_CONTACTS
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult access$4600(com.android.phone.BluetoothHandsfree)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.ScrollBarView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ShutterButton: boolean performClick()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$4: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DataUsageSummaryActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailNumber()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.EmailServiceUtils: boolean isServiceAvailable(android.content.Context,java.lang.String)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo: void startIfReady(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.DictionaryCollection: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onShutterButtonClick()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onBackPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void renameGroup(android.content.Intent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onStop()>
Permission:android.permission.READ_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getPhonebookNumberList()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler: void deleteOldMessages(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity: void selectAccountAndCreateContact(java.util.ArrayList)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$9: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.XLargeUi: void <init>(android.app.Activity,com.android.browser.UiController)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void pokeWakelock(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TextToSpeechSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ProviderStatusWatcher$ProviderStatusListener: void onProviderStatusChange()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarDebug$FetchInfoTask: java.util.List doInBackground(java.lang.Void[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void stopVideoRecordingAndGetThumbnail()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: void access$400(com.android.inputmethod.keyboard.KeyboardView,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailAlphaTag()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openPopupIfRequired(int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$4: void run()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: void doShareVisibleContacts()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.TransactionSafeActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void requestRemoveProviderInfoWithDelay()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: boolean access$900(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo,boolean,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLView: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void checkQualityAndStartPreview()>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[],java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BlackWhiteFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayFragment: void goTo(android.text.format.Time,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: int onStartCommand(android.content.Intent,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DateTimeSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: boolean areGroupWritableAccountsAvailable()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.MessageStatusService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: java.io.InputStream openDownloadStream(android.content.Context,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.InputStreamSource: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: boolean queueQuery(int,int,android.text.format.Time,java.lang.String,int,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ResizeFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: android.accounts.Account findIntendedAccount(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvn()>
Permission:android.permission.RECEIVE_SMS
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectCalendarsSyncFragment: void onPause()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator$1: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: boolean enableCellBroadcast(int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$2: android.accounts.AccountManager$Future2Task start()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void updateManageConferencePanelIfNecessary()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaService$2: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$MyHeadUpDisplayListener: void onSharedPreferenceChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1Number()>
Permission:android.permission.CAMERA
<com.android.camera.Camera: void restartPreview()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$11: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void onScroll(android.widget.AbsListView,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1AlphaTag()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void syncReloadDictionaryInternal()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$3800(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.DownloadHandler: void onDownloadStartNoStream(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$29: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.SMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DeviceAccountLogin: void handleLogin(java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.WaveView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.TransactionSafeActivity: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController$DataControllerHandler: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameFetch: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.DataUsageStatUpdater: boolean update(java.util.Collection,java.util.Collection,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V30: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: void fireKeyPressEvent(com.android.inputmethod.keyboard.PointerTracker,int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManually(int,java.lang.CharSequence,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void maybeEnableFallback(android.content.Context)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: long addFolderToCurrent(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDone(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$9: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.PhoneDisambigDialog: void <init>(android.content.Context,android.database.Cursor,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.MessageStatusReceiver: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.VignetteFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SelectCalendarsAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: com.android.calendar.alerts.AlertService$NotificationWrapper makeExpandingNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,long,long,int,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$1: void acquired()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SIMRecords: int dispatchGsmMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity: void createNewContact()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$1: void removeAllComponents()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventLoader$LoaderThread: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DateTimeSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void handleImportRequest(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void updateEventDetails()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void onAttachedToWindow()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.PrivacySettings: void onResume()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onPopupWindowVisibilityChanged(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void onAttachedToWindow()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.AccountBackupRestore: void restoreAccountsIfNeeded(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void switchState(com.android.gallery3d.app.ActivityState,java.lang.Class,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void commitTyped(android.view.inputmethod.InputConnection)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactEditorActivity$1: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean deleteSelection()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void setEmptyText()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.SyncManager: long checkMailboxes()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.PhotoView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: boolean isValidWord(java.util.Map,java.lang.CharSequence,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onKey(int,int[],int,int)>
Permission:android.permission.CAMERA
<android.hardware.Camera: void native_setup(java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean callContact(android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.SyncManager: void registerCalendarObserver(com.android.email.provider.EmailContent$Account)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FillLightFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void revertCommit(android.view.inputmethod.InputConnection)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.ImportExportDialogFragment: boolean handleImportRequest(int)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: boolean isOpened(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: boolean hasAutoCorrectionForConsideredWord(java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.XLargeUi: void setUseQuickControls(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void enterSearchUi()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1300(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.AggregationSuggestionView: boolean canEditSuggestedContact()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity: void onSearchTextChanged()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$3300(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataAdapter: java.lang.Object access$1800(com.android.gallery3d.app.AlbumSetDataAdapter,java.util.concurrent.Callable)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager: void setRestrictBackground(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V40: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void requestCloseOtaFailureNotice(long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthListView: void <init>(android.content.Context,android.util.AttributeSet)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLRoot: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.Gallery: void checkStorage()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.IndicatorWheel: void onSettingChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void resume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onNewIntent(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.Filter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void confirmDeleteThreads(java.util.Collection,android.content.AsyncQueryHandler)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateForegroundCall(com.android.internal.telephony.CallManager)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void access$700(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomServiceImpl: boolean isInCall()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcast(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageUseActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService$RecognitionServiceBinder: void cancel(android.speech.IRecognitionListener)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.TintFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: android.os.ParcelFileDescriptor openDownload(android.content.Context,long,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AdaptiveBackground: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.OtherSettingsPopup$Listener: void onSettingChanged()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void saveDraft()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$1$1: void run()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AdvancedWifiSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorControlBar: void onSettingChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.Device: java.lang.String getDeviceIdInternal(android.content.Context)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.ContactDetailUpdatesFragment$2: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry: void iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean isSyncActive()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhoneticNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$4: void onLongTap(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$200(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void <init>(android.content.Context,java.util.Locale)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void verifyUnlock()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BreadCrumbView: void clear()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleBackspaceWhileInBatchEdit(int,android.view.inputmethod.InputConnection)>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogQueryHandler: void markMissedCallsAsRead()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$LookupBookmarkCount: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardInterpreterCollection: void endEntry()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SoundSettings: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onCreate(android.os.Bundle)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$2: void onKey(int,int[],int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void deleteDownloadLocked(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Dictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.WeakAsyncTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void startMsgListQuery()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.deviceinfo.Memory: void onResume()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapOverlayFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void close(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V21: void parse(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void startSequenceInternal(android.os.Message)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AdaptiveBackground: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.calendar.CalendarSettingsActivity$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void configureFragments(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.EmailSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.CallLogActivity: boolean onKeyUp(int,android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAppWidgetService: android.database.Cursor getUpcomingInstancesCursor(android.content.ContentResolver,long,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlideshowView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void onResume()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.OnContactBrowserActionListener: void onFinishAction()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: java.lang.CharSequence buildLimitedNetworksString()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity$StrequentContactListFragmentListener: void onContactSelected(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1200(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView: void onClick(android.view.View)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.tablet.TabletStatusBar: void addStatusBarWindow()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataLoader$ReloadTask: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment$5: void onClick(android.view.View)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void doOnResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$AccountDisplay: void buildDiff(java.util.ArrayList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V40: void parse(java.io.InputStream)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.BrowserContract$Settings: void setSyncEnabled(android.content.Context,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void doCluster(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$800(com.android.phone.InCallScreen)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragment: void onRespondToInvite(int,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.emailcommon.utility.AttachmentUtilities: void saveAttachment(android.content.Context,java.io.InputStream,com.android.emailcommon.provider.EmailContent$Attachment)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.net.NetworkPolicyEditor$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void initForNewRadioTechnology()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.Gallery: void access$100(com.cooliris.media.Gallery)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$3: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onPause()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo: void notifyPauseDueToSize(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: void closeTab(com.android.browser.Tab)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: void onDraw(android.graphics.Canvas)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: boolean initWithRawContactsEntityUri(android.net.Uri)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void blockingUpdateNewMessageIndicator(android.content.Context,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$7000(com.android.mms.ui.ComposeMessageActivity,int)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void close(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$2900(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void setController(com.android.browser.WebViewController)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController createContactListFilterController(android.content.Context)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.NullFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void recalc()>
Permission:android.permission.READ_CONTACTS,android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.LockSettingsService: void systemReady()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void setFilter(com.android.contacts.list.ContactListFilter,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity$ContactBrowserActionListener: void onViewContactAction(android.net.Uri)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.AbstractSyncService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController$DataControllerHandler: void doSaveThumbnail(com.android.browser.Tab)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.UndoBarView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void notifyFailed(android.content.Context,boolean,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void onDialerClose()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION
<android.location.ILocationManager$Stub: boolean addGpsStatusListener(android.location.IGpsStatusListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void onUserLeaveHint()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailNumber()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity$PageChangeListener: void onPageScrollStateChanged(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void createButtonsSpinner(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void doShareVisibleContacts()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocalePickerActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void eventsChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$2: void onLongTap(int)>
Permission:android.permission.CAMERA
<com.android.camera.Camera$JpegPictureCallback: void onPictureTaken(byte[],android.hardware.Camera)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$9: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean processMessage(android.os.Message)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void initInternal(com.android.inputmethod.latin.LatinIME,android.content.SharedPreferences,com.android.inputmethod.latin.LatinIME$UIHandler)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardStatusViewManager: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.PushReceiver: long findThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: long getOrCreateThreadId(android.content.Context,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.Gallery: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.HeadUpDisplay: void restorePreferences(android.hardware.Camera$Parameters)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$UserDictionarySettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$LoadMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SecurityPolicy: void onPasswordExpiring(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Utils: java.lang.String formatMonthYear(android.content.Context,android.text.format.Time)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarController: void launchDeleteEvent(long,long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.NotificationTransaction: void <init>(android.content.Context,int,com.android.mms.transaction.TransactionSettings,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: boolean hangupRingingCall(com.android.internal.telephony.Phone)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: boolean updateAlertNotification(android.content.Context)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosink.MediaEncoderFilter: void updateMediaRecorderParams()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void forwardMessage(com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BookmarkUtils: android.net.Uri getBookmarksUri(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncParser: void commandsParser()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager: boolean refreshMessageList(long,long,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ServiceStore: com.android.emailcommon.service.IEmailService getService()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.voicedialer.RecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager$AccountObserver: void access$500(com.android.exchange.SyncManager$AccountObserver)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS,android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.UiccSmsController: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.AbstractSyncAdapter: void <init>(com.android.exchange.EasSyncService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.DataUsageStatUpdater$DataUsageFeedback: android.net.Uri access$000()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils$4: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController: void initialize(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void syncReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void access$700(com.android.calendar.AllInOneActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void pokeWakelock(int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void access$700(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: boolean handlePhotoActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService: boolean isMailboxSyncable(com.android.emailcommon.provider.Account,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: void onSwipeDown()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void onContactUriQueryFinished(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter: void presentVideoThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onClose()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneFavoriteFragment: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Dictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ContrastFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: void setMonthDisplayed(android.text.format.Time,boolean)>
Permission:android.permission.WRITE_CALL_LOG
<com.android.contacts.CallDetailActivity$6: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.AccountFilterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DrawRectFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean handleForwardedMessage()>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager$6: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void unregisterProfile(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: com.android.contacts.ContactLoader$Result doInBackground(java.lang.Void[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean haveSomethingToCopyToDrmProvider(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: boolean isTemplateRelevant(android.net.NetworkTemplate)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RedEyeFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: java.util.List getSimCallManagers()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.server.DemoDataSet: void add(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: void removeParentChildRelationShips()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.browser.BrowserSettings: void initialize(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void access$500(com.android.calendar.AllInOneActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification$1: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity$CalendarGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo()>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactTileAdapter$1: void onClick(com.android.contacts.list.ContactTileView)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.SupplicantStateTracker$ScanState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.voicedialer.PhoneTypeChoiceRecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void updateConfiguration()>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.PhoneDisambigDialog: void <init>(android.content.Context,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: int interceptMotionBeforeQueueingWhenScreenOff(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.AccountSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaApi: android.accounts.Account[] getAccounts(android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.MailService: boolean syncOneAccount(com.android.email.Controller,long,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$1: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void requestUpdateBluetoothIndication()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$RunningServicesActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AddAccountSettings: void updateAuthDescriptions()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void setupFlattenedList()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.AccountFilterActivity$FilterLoader: java.lang.Object loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.ManageConferenceUtils: void updateManageConferenceRow(int,com.android.internal.telephony.Connection,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: boolean areContactWritableAccountsAvailable()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: void doUpdateVisitedHistory(com.android.browser.Tab,boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void startAsyncQuery()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void onClose()>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri access$800(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: boolean isVideoCallingEnabled()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: void handleSimStateChange(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.phone.OtaStartupReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_PRIVILEGED_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getDeviceIdForPhone(int,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int getActiveSubInfoCount()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerBase: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onPhantomUpEvent(int,int,long)>
Permission:android.permission.READ_CONTACTS
<com.android.voicedialer.BluetoothVoiceDialerActivity$2: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3: void onCloseWindow(android.webkit.WebView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab$LoadData: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$MyHandler: void onPolicyChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewManager$KeyguardViewHost: void dispatchDraw(android.graphics.Canvas)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void viewContact(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PreloadRequestReceiver: void handlePreload(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.voice.VoiceInput: void cancel()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.PushReceiver: boolean access$100(android.content.Context,com.google.android.mms.pdu.NotificationInd)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.EasAccountService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void loadDictionary()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.DisplaySettings: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.DebugFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAlarmManager: void runScheduleNextAlarm(boolean,com.android.providers.calendar.CalendarProvider2)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void rebindEditorsForNewContact(com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListFragment: void onItemClick(int,long)>
Permission:android.permission.SEND_SMS,android.permission.READ_EXTERNAL_STORAGE
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ScrollBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: android.net.Uri doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.CallDetailActivity: void updateData(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,long,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Preloader: void handlePreloadRequest(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToGrayFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void updateAttendees(android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void openThread(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.PhotoAppWidgetBind: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$7: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void launchMultiplePhonePicker()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.policy.StatusBarPolicy: void <init>(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumDataAdapter: java.lang.Object executeAndWait(java.util.concurrent.Callable)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onResume()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ById: android.net.Downloads$StatusInfo getStatus(android.content.Context,long)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$NotificationInfo getNewMessageNotificationInfo(android.content.Context,boolean,java.lang.String,java.lang.String,java.lang.String,long,long,android.graphics.Bitmap,com.android.mms.data.Contact,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void startQuery()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaService: void performSyncImpl(android.content.Context,android.accounts.Account,android.os.Bundle,android.content.SyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity$ContactBrowserActionListener: void onFinishAction()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void onDrawerOpened()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: void onResume()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayFragment: void eventsChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.CallLogAsync$AddCallTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_SMS
<com.android.providers.telephony.MmsSmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$1: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void doStart(android.os.Bundle,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.SelectAccountDialogFragment$Listener: void onAccountChosen(android.accounts.Account)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.providers.telephony.SmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: void toggleNavScreen()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int access$2800(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void initView(com.android.calendar.CalendarView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void onActivityCreated(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventHelper$EditDoneRunnable: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$5: android.content.Loader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocationSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.StaticBackground: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: boolean queueQuery(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: com.android.phone.CallNotifier init(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.BootReceiver: void removeOldUpdatePackages(android.content.Context)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: java.lang.String getContactDisplayName(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void initializeSecondTime()>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void updateDraftSmsMessage(com.android.mms.data.Conversation,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: boolean access$300(com.android.mms.data.WorkingMessage,android.net.Uri)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: java.util.List getMmsReportItems()>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager$EasAccountsUpdatedListener: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.StraightenFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Calendars: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter: boolean parse(java.io.InputStream)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void access$2200(com.android.email.activity.MessageListFragment)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void onKey(int,int[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$15: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressPickerFragment: void onItemClick(int,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingKnob$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: boolean isOpened(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: android.view.View access$100(com.android.calendar.event.AttendeesView,com.android.calendar.event.EditEventHelper$AttendeeItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettingsInAddAccount: void updateAuthDescriptions()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$700(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void onDestroyView()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onShutterButtonClick(com.android.camera.ShutterButton)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$10: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UI: boolean onBackKey()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.StrequentContactListFragment: boolean isSyncActive()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,java.lang.String,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService$1: void scanCompleted(java.lang.String,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.MonthView: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.ServerThread: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneFavoriteFragment$ContactTileAdapterListener: void onCallNumberDirectly(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DevelopmentSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: int processQuery(android.database.Cursor,android.content.Context,long,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.grass.GrassRS: void start()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BreadCrumbView: void notifyController()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.SurfaceTextureSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.TelephonyRegistry: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory$3$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$13: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getSelectedUri(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void addAttachment(java.lang.String,android.net.Uri,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.net.Uri build()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.SelectAccountActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onFinishAction()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarDebug$FetchInfoTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PhotoPage$PreparePhotoFallback: boolean onGLIdle(com.android.gallery3d.ui.GLCanvas,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.Sources: com.android.contacts.model.Sources getInstance(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.NegativeFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object access$2400(com.android.gallery3d.app.PhotoDataAdapter,java.util.concurrent.Callable)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void onSingleTapUp(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean addNmeaListener(android.location.OnNmeaMessageListener,android.os.Handler)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ScrollBarView: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: boolean parseOneVCard()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onContactListFiltersLoaded()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ExchangeStore: com.android.emailcommon.service.IEmailService getService()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.SlideshowView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onCodeInput(int,int,int)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.SyncManager: java.lang.String getDeviceId()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.SearchResultsActivity: boolean isSyncActive()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.BaseRecipientAdapter: android.database.Cursor doQuery(java.lang.CharSequence,int,java.lang.Long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: boolean isProviderEnabled(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarBase: void onClick(android.view.View)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void addProfile(android.net.sip.SipProfile)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$InputDispatcherThread: void run()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings$ConfirmEnforceFragment$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView: void onLabelRebuilt()>
Permission:android.permission.SEND_SMS
<com.android.server.MmsServiceBroker$BinderService: void sendMessage(long,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSlidingWindow$AlbumDisplayItem: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$800(com.android.contacts.activities.ConfirmAddDetailActivity,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void setSelectedDay(android.text.format.Time)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity: void saveContact(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void onClickOtaActivateNextButton()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: void handleActionUp(android.view.MotionEvent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView$FullPicture: void draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: boolean access$300(com.android.contacts.activities.PeopleActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: void outputRawContactsAsVCard(android.net.Uri,java.io.OutputStream,java.lang.String,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
Permission:android.permission.RECORD_AUDIO
<android.speech.RecognitionService$RecognitionServiceBinder: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void access$700(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void restoreSelectedUri(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.OnPhoneNumberPickerActionListener: void onHomeInActionBarSelected()>
Permission:android.permission.READ_SYNC_STATS,android.permission.GET_ACCOUNTS,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.content.ContentService: java.util.List getCurrentSyncs()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.StringLogger: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService: void runAccountReconcilerSync(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$1: void released()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videoproc.BackDropperFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onAction()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.RawContactReadOnlyEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController: void sendEventRelatedEventWithResponse(java.lang.Object,long,long,long,long,int,int,long,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupDetailDisplayUtils: void bindGroupSourceView(android.content.Context,android.view.View,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: boolean access$1700(com.android.settings.DataUsageSummary)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.AccountFilterActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub: void cancel()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void handleSmses(java.util.ArrayList)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: void parse(java.io.InputStream)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SecurityPolicy: boolean wipeExpiredAccounts(android.content.Context,com.android.email.Controller)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.SnapshotTab createNewSnapshotTab(long,boolean)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: boolean scanFile(com.android.providers.downloads.DownloadInfo,boolean,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void deleteDraftSmsMessage(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageAccountsSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.PduLoaderManager$PduTask$1: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void <init>(com.android.calendar.CalendarActivity)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: com.android.emailcommon.service.IEmailService getExchangeEmailService()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.EmailAddressPickerFragment: boolean isSyncActive()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void handleCancel(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$3900(com.android.calendar.DayView,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ActivityState: void onPause()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceInfoSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void systemReady()>
Permission:android.permission.READ_SMS
<com.android.mms.util.Recycler$MmsRecycler: void deleteMessagesOlderThanDate(android.content.Context,long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManager: java.util.Map getUsableInvitableAccountTypes()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$NoteData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void loadDictionary()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsUtils: boolean areContactWritableAccountsAvailable(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceInfoSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: boolean dispatchKeyEvent(android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void setQueryString(java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: int getWritableEntityIndex()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcast(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void initializeRecorder()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int access$3100(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PatternUnlockScreen: void onWindowFocusChanged(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onReviewCancelClicked(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updatePhotoByDataId(long,android.content.ContentValues)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int access$2900(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onRestart()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: boolean access$1600(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateSuggestions()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1800(com.android.internal.policy.impl.KeyguardViewMediator,int)>
Permission:android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: void updateCallLog(com.android.contacts.RecentCallsListActivity$CallerInfoQuery,com.android.contacts.RecentCallsListActivity$ContactInfo)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void show()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void access$500(com.android.mms.ui.MessageListItem)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void onAttachFragment(android.app.Fragment)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$5: void pokeWakelock()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.RespondViaSmsManager$RespondViaSmsCancelListener: void onCancel(android.content.DialogInterface)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Void doInBackground(android.content.Intent[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UI: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleDayPickerFragment: void onAttach(android.app.Activity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void handleNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void loadDictionary()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void viewContact(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SoundSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupBrowserActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PhotoPage$1: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: boolean onSearchRequested()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService: void registerCalendarObserver(com.android.emailcommon.provider.EmailContent$Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactItemListAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$CryptKeeperSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen$3: void afterTextChanged(android.text.Editable)>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager: void <init>(android.content.Context,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: void onSwipeDown()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthWeekEventsView: int drawEvent(android.graphics.Canvas,com.android.calendar.Event,int,int,int,boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri access$100(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncParser: void commit()>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthWeekEventsView: boolean onHoverEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void handleNotifyScreenOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$1: void onRequest(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void restorePreferences()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void processResponseHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,org.apache.http.HttpResponse)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.content.Intent createIntent(android.content.Context,long)>
Permission:android.permission.SEND_SMS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendTextForSubscriberWithSelfPermissions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.ContactLoaderUtils: android.net.Uri ensureIsContactUri(android.content.ContentResolver,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactEntryListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$5: void run()>
Permission:android.permission.USE_SIP
<com.android.phone.SipCallOptionHandler: void access$200(com.android.phone.SipCallOptionHandler,android.net.sip.SipProfile)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void startQuery()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer$HandlerForOutputStream: boolean onInit(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.RecipientAdapter: android.database.Cursor doQuery(java.lang.CharSequence,int,java.lang.Long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PowerUsageSummaryActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: android.net.Uri saveAsMms(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onTrigger(android.view.View,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void switchCamera()>
Permission:android.permission.READ_CONTACTS,android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.LockSettingsService: long getLong(java.lang.String,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactSelectionActivity: void configureListFragment()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts$ImportAllSimContactsThread: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,com.android.internal.widget.LockPatternUtils)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void onResume()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void onPause()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void setupTopCrumb()>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Events: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.AccountBackupRestore: boolean doRestoreAccounts(android.content.Context,com.android.email.Preferences,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.EasSyncService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteFromEventRelatedTable(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CropRectFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri createLoaderUri()>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.ClearMissedCallsService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageItem: void access$100(com.android.mms.ui.MessageItem,com.google.android.mms.pdu.EncodedStringValue,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getPhonebookSize(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.StaticBackground: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AdvancedWifiSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp$NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void bindPhotoHandler(com.android.contacts.editor.BaseRawContactEditorView,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.Invert: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.StorageManager$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.QuickContactWindow: void show(android.net.Uri,android.graphics.Rect,int,java.lang.String[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectCalendarsFragment: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp$MediaButtonBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BookmarkUtils$1$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView$1: void run()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: void <init>(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceInfoSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SelectAccountDialogFragment: void onAccountSelected(com.android.contacts.model.AccountWithDataSet)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageFileViewFragment: java.io.File performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManually(int,java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void access$900(com.android.bluetooth.pbap.BluetoothPbapService)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onTrigger(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Dictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: android.database.Cursor queryPhoneNumbers(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void updateIfaces()>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$Model: void resume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TextToSpeechSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean)>
Permission:android.permission.USE_SIP
<com.android.phone.SipBroadcastReceiver$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.CropView$HighlightRectangle: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.DialtactsActivity: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.JoinContactActivity: void onStart()>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.KeyInputQueue: boolean preprocessEvent(com.android.server.InputDevice,android.view.RawInputEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix: void execute()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayNumber(java.lang.String,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeWithDataSet: boolean hasData(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onError(android.media.MediaRecorder,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.Gallery: void startDefaultPage()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DisplaySettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AdvancedWifiSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.InputManager$Callbacks: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void search(java.lang.String,android.text.format.Time)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView$1: void onAnimationEnd(android.animation.Animator)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: void onStatusChanged(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettingsInAddAccount: void onAuthDescriptionsUpdated()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService$1: void released()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub: boolean isNetworkMetered(android.net.NetworkState)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void removeMembersFromGroup(android.content.ContentResolver,long[],long)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void commitCurrentAutoCorrection(int,android.view.inputmethod.InputConnection)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity: void access$000(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.widget.ContactHeaderWidget: void startPhotoQuery(long,android.net.Uri,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: long createCalendar(com.android.exchange.EasSyncService,com.android.emailcommon.provider.EmailContent$Account,com.android.emailcommon.provider.EmailContent$Mailbox)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void handlePostOnDialChars(android.os.AsyncResult,char)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: boolean setVoiceInput(com.android.inputmethod.voice.VoiceInput)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView: void onTypeSelectionChange(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarTablet: void onAction(java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.USE_SIP
<com.android.phone.SipBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageFileViewFragment: void onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void initAsynchronously(android.content.Context,java.util.Locale)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean isSyncActive()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DownloadTouchIcon: java.lang.Void doInBackground(java.lang.String[])>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void access$000(android.speech.SpeechRecognizer,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub: void pokeWakelock()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: com.android.inputmethod.voice.VoiceIMEConnector init(com.android.inputmethod.latin.LatinIME,android.content.SharedPreferences,com.android.inputmethod.latin.LatinIME$UIHandler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$1: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$VendorSpecificCommandHandler: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<android.inputmethodservice.KeyboardView: void swipeDown()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase: void reloadUiFromMessage(com.android.emailcommon.provider.EmailContent$Message,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean access$900(com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageItem: void interpretFrom(com.google.android.mms.pdu.EncodedStringValue,android.net.Uri)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: android.os.Bundle getProviderInfo(java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void access$100(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void access$600(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$InterfaceObserver: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$2: void actionItemClicked(android.view.View,com.android.browser.BookmarkDragHandler$BookmarkDragState)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.util.RateController: boolean isLimitSurpassed()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SharpenFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl: android.content.Entity next()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler: boolean checkForThreadsOverLimit(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupDetailActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactDetailActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ApplicationSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ViewContactActivity: android.database.Cursor setupContactCursor(android.content.ContentResolver,android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean access$600(com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData,android.database.Cursor)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo$Reader: void readRequestHeaders(com.android.providers.downloads.DownloadInfo)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: byte[] getPdu(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$6: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AddAccountSettings: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock(int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.SupplicantStateTracker$UninitializedState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void <init>(android.content.Context,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getPhoneUri(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void verifyUnlock()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: void updateNotificationsAtStartup()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void launchSettingsClass(java.lang.Class)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.Device: java.lang.String getDeviceId(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.JoinContactActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.PhoneDisambigDialog: void <init>(android.content.Context,android.database.Cursor,boolean,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.DTMFTwelveKeyDialer: void closeDialer(boolean)>
Permission:android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity: void resetNewCallsFlag()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: void asyncReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void onClose()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SaturateFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: boolean access$1500(com.android.calendar.EditEvent)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceInput: void reset()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.NotificationController: android.app.Notification createNewMessageNotification(long,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.PhotoView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: void updateMonthHighlight(android.widget.AbsListView)>
Permission:android.permission.READ_CONTACTS,android.permission.CALL_PHONE,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void syncReloadDictionaryIfRequired()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternDetected(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void access$500(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewManager: void verifyUnlock()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void <init>(android.content.Context,long)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel createEmptyTextModel(android.content.Context,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void doWork()>
Permission:android.permission.MODIFY_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayNumber(java.lang.String,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean callSelection()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation: void access$800(android.content.Context)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment$11: void onClick(android.view.View)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.StringSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter: com.android.mms.ui.MessageItem getCachedMessageItem(java.lang.String,long,android.database.Cursor)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void onSuccess(com.android.emailcommon.provider.EmailContent$Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.EmailAddressListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void addAttendee(android.content.ContentValues,java.util.ArrayList,int,com.android.calendar.EventInfoFragment$Attendee,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.SearchResultsActivity: void setEmptyText()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ServiceStore: android.os.Bundle checkSettings()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void <init>()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.Controller: void deleteSyncedDataSync(long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.MediaSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: byte[] getPdu(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
Permission:android.permission.ACCESS_FINE_LOCATION
<android.location.ILocationManager: boolean addGpsStatusListener(android.location.IGpsStatusListener)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ContactDeletionInteraction: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void deleteParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: com.android.calendar.alerts.AlertService$NotificationWrapper makeBasicNotification(android.content.Context,java.lang.String,java.lang.String,long,long,long,int,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.LocalPhotoSource: android.graphics.Bitmap getImage(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.pim.vcard.VCardEntryCommitter: void onEntryCreated(android.pim.vcard.VCardEntry)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocalePickerActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.AttachPhotoActivity: void onStart()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.DefaultVoicemailNotifier$NameLookupQuery: java.lang.String query(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map findUsableInvitableAccountTypes(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$3800(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SecurityPolicy: void onAdminEnabled(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.NegativeEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void dumpThreadsTable(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$3: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.LockSettingsService: boolean getSeparateProfileChallengeEnabled(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactSelectionActivity: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void rebuildFullName(com.android.contacts.model.EntityDelta$ValuesDelta)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void access$100(com.android.server.net.NetworkStatsService,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertActivity$3: void onClick(android.view.View)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.wm.InputManager$Callbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>
Permission:android.permission.READ_SMS
<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMemberLoader: com.android.contacts.GroupMemberLoader constructLoaderForGroupDetailQuery(android.content.Context,long)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IIccPhoneBook: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: boolean isOpened(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.CropImage$LoadBitmapDataTask: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.TetherSettings: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.Parser: boolean parse()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$AccountSet: java.util.ArrayList buildDiff()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void access$200(com.android.phone.OtaUtils)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhotoActionPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$CalendarsEntity$EntityIteratorImpl: java.lang.Object next()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.event.EditEventFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageOrderManager$LoadMessageListTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: void doDraw(android.graphics.Canvas)>
Permission:android.permission.READ_SMS
<com.android.mms.model.VideoModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntitySet: void buildSplitContactDiff(java.util.ArrayList,int,int,int[])>
Permission:android.permission.CAMERA
<com.android.camera.CameraButtonIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$300(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: int startNonInteractiveOtasp(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void addMmsNotificationInfos(android.content.Context,java.util.Set)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController$DataControllerHandler: void handleMessage(com.android.browser.DataController$DCMessage)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
Permission:android.permission.CAMERA
<com.android.wallpaper.walkaround.WalkAroundWallpaper$WalkAroundEngine: void onVisibilityChanged(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri getSelectedUri(int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.net.Downloads$ByUri: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onClose()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactEditorActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin: void run(android.accounts.AccountManagerFuture)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.PosterizeFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.SyncManager$CalendarObserver: void <init>(com.android.exchange.SyncManager,android.os.Handler,com.android.email.provider.EmailContent$Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onPressKey(int)>
Permission:android.permission.CAMERA
<com.android.camera.Camera: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet: void onWatchdogAlarm()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AuthenticatorHelper: void onAccountsUpdated(android.content.Context,android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSetupNames: android.net.Uri access$100()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void asyncReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void dispatchTriggerEvent(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.TintEffect: void apply(int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.EmailServiceProxy$13: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SimpleImageFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.Camera: void onUserInteraction()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.NotifyingAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void stopObexServerSession()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void access$300(com.android.internal.widget.multiwaveview.GlowPadView,int,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void joinContacts(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.calendar.CalendarSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean hasContentChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void handleOtaspEvent(android.os.Message)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$3: void doWork()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: void initListAdapter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.Object next()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: void initFragments(long,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$1: void startTask()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.EdgeView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupAccountType: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: long queryForContactId(android.content.ContentResolver,long)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void initLoader(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void sendAccessibilityEventAsNeeded(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.Icon: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void createCameraScreenNail(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.widget.ContactHeaderWidget$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.BROADCAST_STICKY,android.permission.START_TASKS_FROM_RECENTS,android.permission.READ_EXTERNAL_STORAGE,android.permission.START_ANY_ACTIVITY
<com.android.server.am.PendingIntentRecord: void send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.SupplicantStateTracker$DisconnectedState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: void checkForSubscriberId()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader$Result: long getFirstWritableRawContactId(android.content.Context)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void access$100(android.speech.SpeechRecognizer)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1400(com.android.phone.InCallScreen)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.FlipEffect: void apply(int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.util.ReverseGeocoder: java.lang.String computeAddress(com.android.gallery3d.util.ReverseGeocoder$SetLatLong)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void onResume()>
Permission:android.permission.READ_CONTACTS
<com.android.voicedialer.VoiceDialerActivity$1: void run()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: boolean isRegistered(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SuggestionsView$2: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.socialwidget.SocialWidgetProvider$1: void onLoadComplete(android.content.Loader,java.lang.Object)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void retrieveSipLists()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void checkSelection()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.CameraSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.PicasaDataSource: java.util.HashMap getAccountStatus(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$2600(com.android.phone.InCallScreen)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: void addCellToPattern(com.android.internal.widget.LockPatternView$Cell)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void addNetworkPolicyLocked(android.net.NetworkPolicy)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean copyMessageToIccEf(int,byte[],byte[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AdaptiveBackground: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController$ContactListFilterListener: void onContactListFiltersLoaded()>
Permission:android.permission.RECORD_AUDIO
<com.android.soundrecorder.Recorder: void startRecording(int,java.lang.String,android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Vpn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragment: void reloadUiFromMessage(com.android.emailcommon.provider.EmailContent$Message,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.Utility$ForEachAccount: void onPostExecute(java.lang.Long[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountWithDataSet: boolean hasData(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void loadDictionaryAsync()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastForSubscriber(long,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab openIncognitoTab()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void keyguardDone(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.CropImage: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader: void loadInvitableAccountTypes(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void configureQuickFix()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$700(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void setSearchMode(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactSelectionActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: boolean sameRecipient(android.net.Uri,android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.MediaSetSource: void reload()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void access$300(com.android.server.location.ComprehensiveCountryDetector)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SuggestionsAdapter: void onClick(android.view.View)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$3800(com.android.calendar.DayView,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void doFilter(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.MasterClear: void loadAccountList()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$3100(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DockSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.location.GpsLocationProvider: void requestSetID(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CALENDAR
<android.util.CalendarUtils$TimeZoneUtils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,com.android.internal.widget.LockPatternUtils)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientAlternatesAdapter: void <init>(android.content.Context,long,long,int,com.android.ex.chips.RecipientAlternatesAdapter$OnCheckedItemChangedListener)>
Permission:android.permission.RECEIVE_MMS
<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(long,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SepiaFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.users.UserDetailsSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void setupEditorForAccount()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment: void onResume()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DevelopmentSettings: boolean isPermissionEnforced(android.content.Context,java.lang.String)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList loadCallHistoryList(int)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: boolean interceptKeyTi(android.view.WindowManagerPolicy$WindowState,int,int,boolean,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.StringSource: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void onStartInputViewInternal(android.view.inputmethod.EditorInfo,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.MenuExecutor: void access$600(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations,java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: void onResume()>
Permission:android.permission.RECORD_AUDIO
<com.android.soundrecorder.SoundRecorder: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: void onPostExecute(java.lang.Boolean)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void <init>(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: com.android.contacts.PhoneCallDetails[] doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.browser.Browser: void onCreate()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.DefaultVoicemailNotifier: com.android.contacts.calllog.DefaultVoicemailNotifier getInstance(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.EasSyncService: void runAccountMailbox()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAlarmManager: void scheduleNextAlarmLocked(android.database.sqlite.SQLiteDatabase,com.android.providers.calendar.CalendarProvider2)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void setInCallScreenMode(com.android.phone.InCallScreen$InCallScreenMode)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageItem$PduLoadedMessageItemCallback: void onItemLoaded(java.lang.Object,java.lang.Throwable)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void onResume()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR
<com.android.exchange.SyncManager: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.numeric.SinWaveFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp$PhoneAppBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$BluetoothSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void open(android.net.sip.SipProfile,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadDictionaryAsync()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: android.content.Intent createIntent(android.content.Context,long)>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.voice.VoiceInput: void startListening(com.android.inputmethod.deprecated.voice.FieldContext,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner$RunnerResult doInBackground(android.filterfw.core.SyncRunner[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void start(android.content.Intent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.VignetteFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlock(android.view.WindowManagerPolicy$OnKeyguardExitResult)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.Utils: int getWeekNumberFromTime(long,android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService$1: void acquired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updatePhones(long,android.content.ContentValues)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void deleteGroup(android.content.Intent)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment: boolean onActionBarItemSelected(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageList$1: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AsyncQueryService: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onRequest(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.numeric.SinWaveFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView$2: void onAnimationEnd(android.animation.Animator)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onCdmaCallWaiting(android.os.AsyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.browser.BrowserSettings: void <init>(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithAddress(java.util.Collection)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.widget.MmsWidgetService$MmsFactory: android.database.Cursor queryAllConversations()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getContactFilterUri(java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick(com.android.camera.ShutterButton)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment$4: void onClick(android.view.View)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: void close(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarReceiver: void access$000(com.android.providers.calendar.CalendarReceiver,android.content.ContentResolver)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.VideoCamera: void createCameraScreenNail(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.VCardImportExportListener: void onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity: boolean isSyncActive()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SubSettings: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMemberFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>
Permission:android.permission.RECORD_AUDIO
<android.inputmethodservice.KeyboardView$OnKeyboardActionListener: void swipeRight()>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getNewMessageNotificationInfo(java.lang.String,java.lang.String,android.content.Context,int,java.lang.String,long,long,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity$1: void onChange(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$CalendarObserver$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$1200(com.android.server.net.NetworkPolicyManagerService)>
Permission:android.permission.READ_PHONE_STATE
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.CropView$FaceHighlightView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.CameraPicker$Listener: void onSharedPreferenceChanged()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: void viewMmsMessageAttachment(android.content.Context,com.android.mms.data.WorkingMessage,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: android.location.Location _getLastKnownLocationLocked(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputManager$Callbacks: long interceptKeyBeforeDispatching(com.android.server.wm.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings: void access$700(com.android.phone.sip.SipSettings,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.InputMethodConfig: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1: void removeAllComponents()>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>
Permission:android.permission.READ_SMS
<com.android.mms.util.Recycler$MmsRecycler: void deleteMessagesForThread(android.content.Context,long,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.ColorTemperatureEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullPhonebook(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$6: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: boolean trySwitchToFirstTouchState(android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void loadMessageContent()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage$SaveBookmarkRunnable: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: boolean performAction(int,int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void bind(com.android.mms.ui.MessageItem,boolean,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: boolean saveResponse(android.content.ContentResolver)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$31: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V40: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean callContact(android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.OnContactBrowserActionListener: void onSelectionChange()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.NfcImportVCardActivity: void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleDayPickerFragment: boolean goTo(long,boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: long findFirstDataId(long,java.lang.String)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.SearchResultsActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void setData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void updateRecordingTime()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcast(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab showPreloadedTab(com.android.browser.IntentHandler$UrlData)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowProgramFailureDialog()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.CandidateView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity$2: void onLoadComplete(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$1: void onSimLockChangedResponse(boolean)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector$2: void onCountryDetected(android.location.Country)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.data.Conversation: void dumpSmsTable(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean access$000(com.android.inputmethod.keyboard.LatinKeyboardView,com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupDetailActivity: void onStart()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.QuickContactWindow: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.TintFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: boolean fillDigitsIfNecessary(android.content.Intent)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendVCards(javax.obex.Operation,java.lang.String,boolean,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void onUpdateSelection(int,int,int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.AlbumSetSlidingWindow: com.android.gallery3d.ui.BitmapTexture getLoadingTexture()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void shutdownLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void setSearchMode(boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.RetargetFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void getWords(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$1: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V30: void parse(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init>(com.android.contacts.activities.PhotoSelectionActivity,android.content.Context,android.view.View,int,com.android.contacts.model.EntityDeltaList,com.android.contacts.activities.PhotoSelectionActivity$1)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<android.view.IWindowManager$Stub$Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocationSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.PushReceiver: long access$000(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Email: void onCreate()>
Permission:android.permission.GET_ACCOUNTS
<com.android.development.AccountsTester: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$2: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: int placeCallVia(android.content.Context,com.android.internal.telephony.Phone,java.lang.String,android.net.Uri,android.net.Uri)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri getUriToQuery()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.BootReceiver$1: void run()>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.ServiceProxy$ProxyRunnable: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$2700(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void onClick(android.view.View)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: boolean setSelectionFromPosition(int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$1300(com.android.camera.Camera)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity: void access$400(com.android.contacts.ViewContactActivity)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertUtils: java.lang.String formatTimeLocation(android.content.Context,long,boolean,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void launchSettings(java.lang.Class)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void callListenerOnCodeInput(com.android.inputmethod.keyboard.Key,int,int,int)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PRECISE_PHONE_STATE,android.permission.READ_PRIVILEGED_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BrightnessFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: java.util.List getAllMessagesFromIccEfForSubscriber(long,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$BirthdayData: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry: void iterateOneList(java.util.List,com.android.vcard.VCardEntry$EntryElementIterator)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter$QueryThread: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: long interceptKeyBeforeDispatching(com.android.server.wm.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsUtils: java.util.ArrayList queryForAllRawContactIds(android.content.ContentResolver,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub: void unlock()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder: void setPreviewSurfaceTexture(android.graphics.SurfaceTexture,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$9: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.EmailBroadcastProcessorService: void onBootCompleted()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void access$800(com.android.providers.downloads.DownloadService,long)>
Permission:android.permission.GET_ACCOUNTS,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertAdapter: void updateView(android.content.Context,android.view.View,java.lang.String,java.lang.String,long,long,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$DeleteThreadListener: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhoneticNameEditorView: void onLabelRebuilt()>
Permission:android.permission.READ_SMS
<com.android.mms.widget.MmsWidgetService$MmsFactory: int queryUnreadCount()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogQueryHandler: void fetchAllCalls()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter: boolean access$1100(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer: boolean createOneEntry(java.lang.reflect.Method)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$4: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void initializeFirstTime()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,com.android.server.wm.WindowManagerService$1)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivity$5: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersOlderThan(com.android.inputmethod.keyboard.PointerTracker,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void placeEmergencyCall()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RotateFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock()>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.MasterClear: void establishInitialState()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.quickcontact.QuickContactWindow: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: void markAsContacted(android.content.ContentResolver,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
Permission:android.permission.RECEIVE_SMS
<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDeltaList: void buildSplitContactDiff(java.util.ArrayList,int,int,int[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: java.util.List _getProvidersLocked(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.Gallery: void access$000(com.cooliris.media.Gallery)>
Permission:android.permission.CAMERA
<com.android.camera.VideoCamera: void resetCameraParameters()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult getPhonebookResult(java.lang.String,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void saveDraft(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.RedEyeEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void cleanup()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void doOnResume()>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.exchange.SyncManager: void onCreate()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: com.android.contacts.model.EntityDeltaList getDeltaForAttachingPhotoToContact()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForEmailAddress(java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void access$400(com.android.calendar.alerts.AlertActivity,long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void configureFragments(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.AccountFilterActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void updateHomeTime()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.ContactLoaderFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: android.net.Uri getContactUri(int)>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager$SyncHandler: void onBootCompleted()>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$AccountObserver: void access$400(com.android.exchange.ExchangeService$AccountObserver)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DownloadTouchIcon: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayFragment: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$LoadMessageTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.ComboAlbumSet: long reload()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.GroupBrowserActivity: void onResume()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessages(android.content.Context)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.MessageStatusReceiver: boolean updateMessageStatus(android.content.Context,android.net.Uri,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView$1: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void handleClose()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.GroupEditorActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void delete(long,long,long,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$GroupDelta: com.android.contacts.ui.ContactsPreferencesActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$21: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UiController: void handleNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor buildCursorForSearchSuggestionsBasedOnFilter(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$1: void onClick(android.view.View)>
Permission:android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor access$1200(com.android.providers.media.MediaProvider,com.android.providers.media.MediaProvider$ThumbData)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler: boolean anyThreadOverLimit(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage: boolean handleContextItem(int,int,int)>
Permission:android.permission.READ_CALENDAR
<android.content.CursorEntityIterator: android.content.Entity next()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1800(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void onClose()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$2: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService$Stub$Proxy: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService$CalendarObserver: void <init>(com.android.exchange.ExchangeService,android.os.Handler,com.android.emailcommon.provider.EmailContent$Account)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry: java.lang.String toString()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDisplayNumberFormat(int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageApplicationsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.DialtactsActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UI: void showWeb(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void updateBody()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void hideAlertAndInitializeRecorder()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void launchMultiplePhonePicker()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DataUsageSummaryActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: com.android.server.WindowManagerService main(android.content.Context,com.android.server.PowerManagerService,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5600(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>
Permission:android.permission.GET_ACCOUNTS,android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: com.android.contacts.model.AccountType getAccountType()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void loadPhotoPickSize()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void endInCallScreenSession()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DeviceAccountLogin: void login(int,com.android.browser.DeviceAccountLogin$AutoLoginCallback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactDetailActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void makePersonalCopy()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter: void getAutomaticLookback()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onOpenCloseDialpad()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity$1: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhoneticNameEditorView: void onOptionalFieldVisibilityChange()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: void sendMessage(com.android.emailcommon.provider.EmailContent$Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MailboxFinder$FindMailboxTask: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.AccountServiceProxy$3: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationListItem: void bind(android.content.Context,com.android.mms.data.Conversation)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void asyncReloadDictionaryIfRequired()>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_RESPOND_VIA_MESSAGE,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void onBackPressed()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: java.lang.String readDraftSmsMessage(com.android.mms.data.Conversation)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageFileView$LoadFilenameTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.users.UserSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewManager: boolean wakeWhenReadyTq(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FlipFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView$1: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcast(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlideshowView: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void updateDraftMmsMessage(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void onClose()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaListView: void deleteSelectedEvent()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.media.MediaScannerConnection$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: boolean preprocessInputEventTq(android.view.RawInputEvent)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms$Stub: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void access$200(com.android.internal.widget.multiwaveview.MultiWaveView,int,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onHoverKey(com.android.inputmethod.keyboard.Key,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.Gallery: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.quickcontact.QuickContactActivity: void bindData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FixedRotationFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService: int interceptMotionBeforeQueueingWhenScreenOff(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: android.view.View makeView()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: com.android.contacts.vcard.ImportRequest constructImportRequest(android.net.Uri,android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest: void testWokenByMenuKeyWhenPatternSet()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.LomoishFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ui.ShowOrCreateActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.AggregationSuggestionView: boolean handleItemClickEvent()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavTabScroller$OnRemoveListener: void onRemovePosition(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$2: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.CallLogAsync$AddCallTask: android.net.Uri[] doInBackground(com.android.phone.CallLogAsync$AddCallArgs[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest: void setUp()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TetherSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.UiccPhoneBookController: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void generateBinaryDictionary()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$BluetoothSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void recreateLockScreen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: boolean onKeyUp(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.email.service.AttachmentDownloadService: void watchdogAlarm()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: java.io.File locateDestinationDirectory(android.content.Context,java.lang.String,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.OutputStreamTarget: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage$5: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View createUnlockScreenFor(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.SwitchAnimManager: boolean drawAnimation(com.android.gallery3d.ui.GLCanvas,int,int,int,int,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AccountSyncSettings$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.CustomContactListFilterActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void finish()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$1500(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void openNewTab()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: void handleImportRequest(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.providers.telephony.SmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.StatusBar: android.view.View makeStatusBarView()>
Permission:android.permission.USE_SIP
<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager: int onStartCommand(android.content.Intent,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaFragment$1: void run()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar: void start()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.app.App: void <init>(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TextToSpeechSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorButton$Listener: void onSettingChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V30: void parse(java.io.InputStream)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onKey(int,int[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$UserDictionarySettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void updateOnExit()>
Permission:android.permission.READ_SMS
<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$InputMonitor: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserHistoryPage$ClearHistoryTask: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyContactImporter: boolean importContacts()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startQueryHaveLockedMessages(android.content.AsyncQueryHandler,long,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$EventsEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToGrayFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailFragment: void bindData()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView$UIHandler: void startKeyRepeatTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarViewAdapter: void <init>(android.content.Context,int)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendMultipartTextForSubscriber(long,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: void execute()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: android.view.View makeView()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$8: void onTextChanged(java.lang.CharSequence,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: java.lang.String getType(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: boolean callSelection()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.TileImageView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$VpnSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumber()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onPhotoSelected(android.graphics.Bitmap)>
Permission:android.permission.CAMERA
<android.media.MediaRecorder: void setVideoSource(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$CryptKeeperSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void onUpEvent(int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment$4: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.MediaFeed: void loadMediaSets()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Bookmarks$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: long getOriginalId(java.lang.String,java.lang.String)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.util.Recycler: android.database.Cursor getAllThreads(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarPhone: void onClick(android.view.View)>
Permission:android.permission.WRITE_CALL_LOG
<com.android.contacts.CallDetailActivity$6: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.common.widget.GroupingListAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$300(com.android.camera.VideoCamera)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneFavoriteFragment$Listener: void onCallNumberDirectly(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: java.util.List getCallCapablePhoneAccounts()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcast(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ContactStatusLoader: java.lang.Object loadInBackground()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorControl: void onSettingChanged()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: boolean preprocessInputEventTq(android.view.RawInputEvent)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsSingleRecipientSender: java.lang.String getOutgoingServiceCenter(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void finish()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void addAttendee(android.content.ContentValues,java.util.ArrayList,int,com.android.calendar.EventInfoActivity$Attendee,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.WirelessSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.Filter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int deleteMatchingColors(java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<android.provider.Calendar$Events: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.AttachPhotoActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts: void importOneSimContact(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: void resume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onOptionKeyPressed()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkManagementEventObserver: void limitReached(java.lang.String,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onUserInteraction()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$5000(com.android.mms.ui.ComposeMessageActivity)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayFragment$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService$1: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void <init>(android.content.Context,int,java.util.Locale)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$10: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.Gallery: void updatePicasaAccountStatus()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void onUpPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void callSelectedEntry()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void preSendSmsWorker(com.android.mms.data.Conversation,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.GET_ACCOUNTS
<android.content.SyncManager$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.ExchangeService: void deleteAccountPIMData(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: void systemReady()>
Permission:android.permission.RECORD_AUDIO
<android.inputmethodservice.KeyboardView: void swipeRight()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter$DataListener: void onPhotoAvailable(long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParser_V21: void parseOne(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.ContactsSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactPickerFragment: void onItemClick(int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.NotificationMgr: void init(android.content.Context)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: boolean discardPurgeableFiles(android.content.Context,long)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.providers.telephony.SmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onCancelEvent(int,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$5: void reportFailedAttempt()>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.CdmaOptions: boolean preferenceTreeClick(android.preference.Preference)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.MediaSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.IndicatorWheel: void onOtherSettingChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: void <init>(android.content.Context,com.android.server.ThrottleService)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.SearchActivity: void deleteEvent(long,long,long)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.SendTransaction: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView: void addOneAttendee(com.android.calendar.CalendarEventModel$Attendee)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int clearSubInfo()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactEntryListFragment: void prepareEmptyView()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void startQuery()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.SubtypeSwitcher: void triggerVoiceIME()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void onMoveEvent(int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.EmailBroadcastProcessorService: void performOneTimeInitialization()>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: boolean getSimplifiedNetworkSettingsEnabledForSubscriber(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void access$5800(com.android.camera.Camera)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void changeParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.LocationClustering: void run(com.android.gallery3d.data.MediaSet)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTrackerQueue: void releaseAllPointersOlderThan(com.android.inputmethod.keyboard.PointerTracker,long)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$800(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ExportProcessor: void run()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void refresh(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListFragment: void requestSelectionToScreen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupBrowseListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener: void onCodeInput(int,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RedEyeFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.IntentProvider: android.content.Intent getIntent(android.content.Context)>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer: boolean init(java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void setSelectedDay(android.text.format.Time)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk: void onSimLockChangedResponse(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.CustomContactListFilterActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.util.DownloadManager$4: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.PhoneDisambigDialog: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.CandidateView: void onClick(android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: java.util.List getMmsReportRequests()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry: boolean isIgnorable()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: void addData(long,long)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.SEND_RESPOND_VIA_MESSAGE,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.ToUpperCase: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTrackerQueue: void releaseAllPointers(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$1000(com.android.contacts.activities.ConfirmAddDetailActivity,long,android.net.Uri,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void startDictionaryLoadingTaskLocked()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.GLTextureTarget: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$RunningServicesActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void showContactInfo(com.android.calendar.CalendarEventModel$Attendee,android.graphics.Rect)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: void handleReadReport(android.content.Context,java.util.Collection,int,java.lang.Runnable)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void selectDefaultContact()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void onDownEvent(int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListFilterController: void notifyContactListFilterChanged()>
Permission:android.permission.GET_ACCOUNTS,android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Tab$4: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.GET_ACCOUNTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.PhoneWindowManager: void showGlobalActionsDialog()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AbstractSyncAdapter: boolean parse(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean onLongPress(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms$Stub: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment: void autoRefreshStaleMailbox()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void startListening(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$2100(com.android.camera.VideoCamera)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.PhoneNumberInteraction: void access$200(android.content.Context,java.lang.String,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType,java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onSharedPreferenceChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: void handleActionDown(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupExchangeFragment: void saveSettingsAfterEdit()>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer: boolean init()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void discardCurrentVideoAndInitRecorder()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.AggregationSuggestionView: boolean performClick()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void doUpdateVisitedHistory(com.android.browser.Tab,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ProviderStatusWatcher: void access$600(com.android.contacts.list.ProviderStatusWatcher)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivity: boolean canAddToContacts(com.android.mms.data.Contact)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1Number()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity: void access$000(com.android.contacts.activities.PhotoSelectionActivity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DataUsageSummaryActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastKnownLocation(java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase$MyAppBridge: void onPreviewTextureCopied()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsMessageSender: void <init>(android.content.Context,java.lang.String[],java.lang.String,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void displayMainCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocalePickerActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.USE_SIP
<com.android.phone.SipCallOptionHandler: void access$300(com.android.phone.SipCallOptionHandler,android.net.sip.SipProfile)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void access$400(com.android.calendar.event.EditEventView)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CropRectFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage(android.content.Context,android.telephony.SmsMessage[],int,java.lang.String)>
Permission:android.permission.MODIFY_PHONE_STATE,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int setDataRoaming(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void <init>(android.content.Context,java.util.Locale)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarViewAdapter: java.lang.String buildWeekNum()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void refreshSelectedContactUri()>
Permission:android.permission.GET_ACCOUNTS
<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMemberLoader: android.net.Uri createUri()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: boolean hasPendingChanges()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallTouchUi: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity: int compare(java.lang.Object,java.lang.Object)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertActivity: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void <init>(com.android.browser.WebViewController,android.webkit.WebView,android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: java.lang.String getActiveSubscriberId(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean checkProviderState(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupIncoming: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void deleteDownload(long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageEncoder: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void close(int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1200(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.tts.TextToSpeechSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.ImportExportDialogFragment: boolean access$000(com.android.contacts.interactions.ImportExportDialogFragment,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: void doTimeChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu(byte[],int,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CropFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab$OnTriggerListener: void onTrigger(android.view.View,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewBase: void show()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView: void setViewStates(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.ObjectSource: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$8: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.IntentHandler: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter: void present(com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleWeeksAdapter: void <init>(android.content.Context,java.util.HashMap)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.UiccSmsController: void sendDataForSubscriber(long,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onPhoneStateChanged(android.os.AsyncResult)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameStore: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: boolean goTo(long,boolean,boolean,boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1100(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS
<com.android.calendar.EmailAddressAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map access$400(com.android.contacts.model.AccountTypeManagerImpl,android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactDetailActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupEditorFragment$4: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PieControl: void buildTabs()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerTwoPane$RefreshTask: void onSuccess(java.lang.Boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$4600(com.android.calendar.DayView,android.view.MotionEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ActivityBase: void onWindowFocusChanged(boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.content.ContentService: void <init>(android.content.Context,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: boolean hangup(com.android.internal.telephony.Phone)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: java.lang.CharSequence computeAutoCorrectionWord(java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence,float,java.lang.CharSequence)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView: void onTypeSelectionChange(int)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$2700(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity$3: void onChange(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosrc.SurfaceTextureTarget: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: void close(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.widget.RemoteViews getViewAt(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarPhone: void onAction(java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void onDoneClicked()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: void notifyObservers()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView: void onDoubleTapShiftKey(com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils$4: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ApplicationSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void <init>(android.content.Context)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService: void performSample()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void setNetworkTemplateEnabled(android.net.NetworkTemplate,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: void <init>(android.os.Handler,android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void onSelectedTabChanged()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkStatsService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean deleteSelection()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void goToUnlockScreen()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void maybeEnableFallback(android.content.Context)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void handleClose()>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivity: void buildAddAddressToContactMenuItem(android.view.Menu)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.interactions.ContactDeletionInteraction: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkStatsService$6: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void onPostExecute(com.android.emailcommon.provider.EmailContent$Message)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleWeekView: void onDraw(android.graphics.Canvas)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaPerformActivation()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$GroupDelta: android.content.ContentProviderOperation buildDiff()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.ReverseGeocoder: boolean process(com.cooliris.media.MediaSet)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DuotoneFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void restoreState(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageItem$PduLoadedCallback: void onPduLoaded(com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void startListening(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.PopImapSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler: void deleteOldMessagesByThreadId(android.content.Context,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void onUserSwitched(int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.MenuHelper: boolean onOptionsItemSelected(android.app.Activity,android.view.MenuItem,com.android.calendar.Navigator)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: void startEntityQuery()>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void updateOnTransition(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void <init>(android.content.Context,java.lang.String,int,android.content.SharedPreferences)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: void parseVCardFile()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity: void access$100(com.android.calendar.AgendaActivity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguardLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.JoinContactActivity: boolean onQueryTextChange(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getSyncKey()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void updateInCallScreen()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CrossProcessFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.ObjectSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.AlphaBlendFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void setSelectedDay(android.text.format.Time)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void handleCharacter(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$100(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.EasSyncService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventLoader$LoadRequest: void processRequest(com.android.calendar.EventLoader)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void access$1000(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkPolicy)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$5700(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onFinishInput()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.DismissAlarmsService: void onHandleIntent(android.content.Intent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetDataAdapter: java.lang.Object executeAndWait(java.util.concurrent.Callable)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactSaveService$Listener: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: com.android.inputmethod.latin.spellcheck.DictAndProximity createDictAndProximity(java.util.Locale)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void editMessageItem(com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void loadDictionaryAsync()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PhoneNumberPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.SlideshowPage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin: void startLoginIfNeeded(android.app.Activity,java.lang.Runnable)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportProcessor: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void pickAlbum(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getContactUri(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardListing(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper: void onServiceStateChanged(android.os.Message)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages: void init()>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.settings.deviceinfo.Status: void onResume()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.CalendarSyncAdapter: boolean parse(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.PhoneDisambigDialog$PhonesAdapter: void <init>(android.content.Context,java.util.List,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.TileImageView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageAccountsSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: com.android.mms.ui.MessageItem getMessageItem(java.lang.String,long,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterfw.core.SyncRunner: void processFilterNode(android.filterfw.core.Filter)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: void sendNotifyRespInd(int)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: long ensureThreadId()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView: void onSelect(java.lang.String,int,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$RunningServicesActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressShift()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DockSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.development.AccountsTester$2: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_SMS
<com.android.mms.widget.MmsWidgetService$MmsFactory: void onDataSetChanged()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$1: android.util.Pair doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneFavoriteFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity$3: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupNames: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$4: android.accounts.AccountManagerFuture start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockScreenWidgetCallback: void userActivity(android.view.View)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastForSubscriber(long,int)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarAlarmManager: void rescheduleMissedAlarms(android.content.ContentResolver)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab: void <init>(com.android.browser.WebViewController,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.LockSettingsService: boolean getBoolean(java.lang.String,boolean,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastRangeForSubscriber(long,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.NotificationImportExportListener: void onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void loadDictionary()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SpellCheckersSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$3700(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapSource: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.MailService: int onStartCommand(android.content.Intent,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: void access$200(com.android.contacts.activities.PeopleActivity,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void takeEmergencyCallAction()>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.adapter.Search: int searchMessages(android.content.Context,long,com.android.emailcommon.service.SearchParams,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$VpnSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView: void showAlternates(com.android.ex.chips.RecipientChip,android.widget.ListPopupWindow,int,android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: void createNewGroupWithAccountDisambiguation()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UI: void setUseQuickControls(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactEntryListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$1200(com.android.contacts.activities.ConfirmAddDetailActivity)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void onOptionalFieldVisibilityChange()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object findTargetWindow(android.view.KeyEvent,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,boolean,int,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupEditorActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView,android.accounts.AccountManager)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.FilmStripView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void runScheduleNextAlarm(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onDialerClose(boolean)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List getAllMessagesFromIccEf(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.RecipientEditTextView$IndividualReplacementTask: java.lang.Void doInBackground(java.lang.Object[])>
Permission:android.permission.READ_SMS
<com.android.mms.ui.SlideshowEditActivity: void initSlideList()>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void stopListening()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void drawAfterScroll(android.graphics.Canvas)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void preloadPhotosInBackground()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.activity.Welcome$MainActivityLauncher: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void takeEmergencyCallAction()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Preloader: void cancelSearchBoxPreload(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void <init>(android.content.Context,long,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.TransportControlView: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void onBackKey()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void access$2100(com.android.contacts.editor.ContactEditorFragment)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void goToToday()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage$4: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.Invert: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$900(com.android.contacts.activities.ConfirmAddDetailActivity,long,android.net.Uri)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: void onResume()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void finishState(com.android.gallery3d.app.ActivityState)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.common.widget.GroupingListAdapter: void onContentChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getSelectedUri(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startKeyRepeatTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.provider.BrowserProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameFetch: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DocumentaryFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertReceiver: android.app.Notification$Builder makeBasicNotificationBuilder(android.content.Context,java.lang.String,java.lang.String,long,long,long,int,boolean,boolean,boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.AccountService$1$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.EditContactActivity$AddContactTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserHistoryPage: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.performance.ThroughputFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V40: boolean parseOneVCard(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.contacts.calllog.CallLogAdapter: void onContentChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$17: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BreadCrumbView$Controller: void onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>
Permission:android.permission.RECEIVE_MMS
<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AlertService: void doTimeChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SplitContactConfirmationDialogFragment$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$18: void run()>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipEditor: void unregisterOldPrimaryAccount()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub: java.util.List getProviders(boolean)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.net.NetworkPolicyEditor$1: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.SimContacts: void access$100(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.NotificationTransaction: void <init>(android.content.Context,int,com.android.mms.transaction.TransactionSettings,com.google.android.mms.pdu.NotificationInd)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$6: void runInternal(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: void showIMEIPanel(android.content.Context,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$3: void run()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadInfo: android.net.Uri getMyDownloadsUri()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragment: void onClick(android.view.View)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void close(java.lang.String,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void hideWindow()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavigationBarPhone: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void pokeWakelock()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DocumentaryFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
Permission:android.permission.READ_SMS
<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView$CalendarGestureListener: void onLongPress(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView: void onOptionalFieldVisibilityChange()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void access$1500(com.android.calendar.EventInfoFragment,android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController$DataControllerHandler: void doUpdateVisitedHistory(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: android.widget.RemoteViews getViewAt(int)>
Permission:android.permission.SEND_SMS,android.permission.READ_SMS
<com.android.mms.transaction.SmsSingleRecipientSender: boolean sendMessage(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$InputDispatcherThread: void process()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusLoader: int getProviderStatus()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void handleClose()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void onAction(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void launchHomeFromHotKey()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.util.AccountFilterUtil: void handleAccountFilterResult(com.android.contacts.list.ContactListFilterController,int,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputMonitor: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onTouchEvent(int,int,int,long,com.android.inputmethod.keyboard.PointerTrackerQueue)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity: void configureContactListFragment()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.StaticBackground: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupExchangeFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$8: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void goToLockScreen()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.NotificationController$1: void onPostExecute(java.lang.Long[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void selectFirstFoundContactAfterDelay()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.TextFieldsEditorView$2: void afterTextChanged(android.text.Editable)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListItem: void updateAvatarView(java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.server.input.InputManagerService$Callbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void access$600(com.android.contacts.group.GroupEditorFragment,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void access$000(com.android.contacts.detail.ContactDetailFragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.adapter.Search$SearchParser: boolean parseStore()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen: void verifyPasswordAndUnlock()>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.CallLogAdapter$1: void onClick(android.view.View)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: void loadDirectoryMetaData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean processMotionEvent(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.NameConverter: android.content.ContentValues displayNameToStructuredName(android.content.Context,java.lang.String,android.content.ContentValues)>
Permission:android.permission.SEND_SMS
<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(long,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$22: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void hideLocked()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupEditorActivity: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactTileListFragment$Listener: void onContactSelected(android.net.Uri)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl: void onPostExecute(java.lang.Long[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.EntityDeltaList: int indexOfFirstWritableRawContact(android.content.Context)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.EmailContent$Account,java.lang.String)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void handleSendMessage()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$RecipientsMenuClickListener: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.calendar.CalendarProvider2: void verifyAccounts()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewManager: void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneApp: void clearInCallScreenMode()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupDetailActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.DictionaryCollection: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity: void onUserInteraction()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService$8: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersExcept(com.android.inputmethod.keyboard.PointerTracker,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.MenuExecutor: void onProgressComplete(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingRestore: boolean changeIndex(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: boolean handleIMEIDisplay(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void access$1900(com.android.calendar.EventInfoFragment,android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$2700(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo access$600(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,long)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntryConstructor: void onEntryEnded()>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: void updateEventAttendeeStatus(android.database.sqlite.SQLiteDatabase,android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguardTimeout()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.GalleryActionBar$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.DictionaryPool: java.lang.Object take()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.net.Uri getUriToQuery()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DevelopmentSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager: void runAccountReconciler()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void onSharedPreferenceChanged()>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastForSubscriber(int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.AccountFilterActivity$FilterLoader: java.util.List loadInBackground()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.launcher2.Launcher: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: boolean itemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekAdapter: void refresh()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest: void testMenuDoesntGoToUnlockScreenOnWakeWhenPukLocked()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$6: void run(java.lang.Object)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void syncReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer: java.lang.String createOneEntryInternal(java.lang.String,java.lang.reflect.Method)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void keyguardDone(boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$1: void onPostExecute(java.lang.Object)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onStop()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<android.telephony.gsm.SmsManager: boolean deleteMessageFromSim(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean startInitialQuery()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController: void setContactData(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void onAccountChosen(android.accounts.Account)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.ImportVCardActivity: void onResume()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void addAttachment(int,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab$LoadData: void onPostExecute(android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.exchange.ContactsSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.datepicker.DatePickerDialog$OnDateSetListener: void onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BreadCrumbView: void popView()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.SlotView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: boolean hasVoiceMailNumber(android.telecom.PhoneAccountHandle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceSvn()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$30: void onContentChanged(com.android.mms.ui.MessageListAdapter)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void <init>(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void screenTurnedOff(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1300(com.android.internal.policy.impl.KeyguardViewMediator,int)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.voice.VoiceInput: void <init>(android.content.Context,com.android.inputmethod.deprecated.voice.VoiceInput$UiListener)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.Icon: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityModifier: void parseStructuredNameExtra(android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.CropImage$LoadBitmapDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl: void performAction(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen$1: void onSimLockChangedResponse(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.ReverseGeocoder: java.lang.String computeMostGranularCommonLocation(com.cooliris.media.MediaSet)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.quickcontact.QuickContactActivity$5: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void removeFromTree()>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.service.AccountService$1: java.lang.String getDeviceId()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusLoader: java.lang.String getProviderStatusData()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$BaseFutureTask: void doWork()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.videosink.MediaEncoderFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceInput: void cancel()>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ClearCallLogDialog$1$1: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailFragment: void buildEntries()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.CameraPreference$OnPreferenceChangedListener: void onSharedPreferenceChanged()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$ShuffleSource: long reload()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: java.lang.String getContactDisplayName(long)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.EmailActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void <init>(long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: void updateEventDetails(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMetaDataLoader: android.net.Uri ensureIsGroupUri(android.net.Uri)>
Permission:android.permission.RECORD_AUDIO
<android.speech.IRecognitionService: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
Permission:android.permission.CAMERA
<com.android.camera.Camera: void access$5600(com.android.camera.Camera)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: void refresh(android.text.format.Time,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity: android.database.Cursor doFilter(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: int beginMmsConnectivity()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.JoinContactListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$200(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.grass.GrassRS$TimezoneTracker: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekActivity: android.view.View makeView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void registerSimStateCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment: void <init>(long,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: boolean handleSuddenJump(android.view.MotionEvent)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaWindowAdapter: boolean queueQuery(int,int,android.text.format.Time,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment: void showContactInfo(com.android.calendar.EventInfoFragment$Attendee,android.graphics.Rect)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: int access$1300(com.android.server.WindowManagerService,android.view.KeyEvent,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService: int access$1400(com.android.server.WindowManagerService,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean access$300(com.android.inputmethod.latin.LatinKeyboardBaseView,int,com.android.inputmethod.latin.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen$2: void onLayout(int,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onWindowFocusChanged(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView$1: void onAnimationEnd(android.animation.Animator)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.PowerManagerService$5: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getContactMethodType(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void onHoldClick()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean saveRingtone(long)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.media.IMediaScannerListener$Stub$Proxy: void scanCompleted(java.lang.String,android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void <init>(android.content.Context,android.util.AttributeSet)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: void access$600(com.android.gallery3d.app.PhotoDataAdapter,long,com.android.gallery3d.util.Future)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.WaveView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: void notifyObservers()>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ExchangeStore: android.os.Bundle checkSettings()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void updateAppDetail()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void reloadDataAndSetSelectedUri(android.net.Uri)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactsFrontDoor: void onCreate(android.os.Bundle)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void access$1100(com.android.inputmethod.latin.LatinIME,boolean)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkStatsService$Stub: void forceUpdate()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabBar$TabView: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader$LoadContactTask: void loadInvitableAccountTypes(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void access$1200(com.android.calendar.DeleteEventHelper,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: void onAttach(android.app.Activity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.HistoryItem: void onCheckedChanged(android.widget.CompoundButton,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.CallContactActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$5500(com.android.mms.ui.ComposeMessageActivity)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlHandler: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.CallContactActivity: void onResume()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: void init(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader: java.lang.Object loadInBackground()>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceSvn()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: android.net.Uri storeMessage(android.content.Context,android.telephony.SmsMessage[],int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekAdapter$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: void onDoubleTapShiftKey(com.android.inputmethod.keyboard.PointerTracker,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy$KeyboardFlickGestureDetector: void clearFlick(boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupDetailFragment$3: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.voice.VoiceInput: void reset()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.common.widget.GroupingListAdapter$1: void onChange(boolean)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int access$3100(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ui.InLineSettingPicker$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void doJoinSuggestedContact(long[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFileLocal(android.net.Uri,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ViewContactActivity: void joinAggregate(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.AccountSelectionUtil$AccountSelectedListener: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.wifi.AdvancedWifiSettings: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.socialwidget.SocialWidgetProvider: void setDisplayNameAndSnippet(android.content.Context,android.widget.RemoteViews,java.lang.CharSequence,java.lang.CharSequence,java.util.List,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void clearPrimary(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupNumber(java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState: void enter()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache: com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData get(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactSelectionActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserHistoryDictionary: void loadDictionary()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$PrivacySettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: boolean parseItem()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$2: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.CropView$HighlightRectangle: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS
<android.pim.vcard.VCardComposer: java.lang.String access$300(android.pim.vcard.VCardComposer,java.lang.String,java.lang.reflect.Method)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void eventsChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: boolean createOneEntry(java.lang.reflect.Method)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RotateFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.PanoramaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocationSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity$35: void run()>
Permission:android.permission.READ_SMS
<com.android.mms.util.DraftCache$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.providers.telephony.SmsProvider: int deleteMessageFromIcc(java.lang.String)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcastRange(int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: int getAllSubInfoCount()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserUnigramDictionary: void <init>(android.content.Context,com.android.inputmethod.latin.LatinIME,java.lang.String,int)>
Permission:android.permission.CAMERA
<com.android.camera.Camera: void startPreview()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void addNetworks()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void setAccount(java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void takeEmergencyCallAction()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment$2: void onChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfo(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.accessibility.FlickGestureDetector$FlickHandler: void startFlickTimeout()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.GoogleSource: void attemptMyContactsMembership(com.android.contacts.model.EntityDelta,android.content.Context)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService: void access$200(com.android.mms.transaction.SmsReceiverService)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBackupAgent: void addBookmark(com.android.browser.BrowserBackupAgent$Bookmark)>
Permission:android.permission.READ_CONTACTS,android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.LockSettingsService: java.lang.String getString(java.lang.String,java.lang.String,int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: void access$000(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ThrottleService$DataRecorder: void record()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void startState(java.lang.Class,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter: boolean onQueryTextChange(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void onActivityCreated(android.os.Bundle)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo insertDownload(com.android.providers.downloads.DownloadInfo$Reader,long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder$4: void onRunnerDone(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$4: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageCombineFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void requestUpdateScreen()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void blockingUpdateAllNotifications(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification$3: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.PhotoActionPopup$Listener: void onUseAsPrimaryChosen()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils: boolean handleHeadsetHook(com.android.internal.telephony.Phone,android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getUriToQuery()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter: void setSearchMode(boolean)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.model.EntitySet: com.android.contacts.model.EntitySet fromQuery(android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity$DeleteClickListener: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: void afterTextChanged(android.text.Editable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.service.AttachmentDownloadService$AccountManagerStub: int getNumberOfAccounts()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.UndoBarView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadThumbnails(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void setSuperPrimary(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: void handleNewIntent(android.content.Intent)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.BrowserActivity: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity: void buildEntries()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void loadUri(android.net.Uri)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void editSmsMessageItem(com.android.mms.ui.MessageItem)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkManagementEventObserver$Stub: void limitReached(java.lang.String,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarUtils$TimeZoneUtils: void forceDBRequery(android.content.Context,java.lang.Runnable)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasOutboxService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SecurityPolicy: void onDeviceAdminReceiverMessage(android.content.Context,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startDeleteAll(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.alerts.AlertService: void dismissOldAlerts(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.BrowserActivity: void onDownloadStartNoStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void access$2300(com.android.contacts.editor.ContactEditorFragment,long,android.graphics.Bitmap,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallerInfoCache: void access$400(com.android.phone.CallerInfoCache)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadDictionary()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$3$1: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.view.PieMenu: void layoutPieView(com.android.browser.view.PieMenu$PieView,int,int,float)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: void onDestroy()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.DownloadHandler$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller$9: boolean onMenuItemClick(android.view.MenuItem)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.SaturateEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Controller: com.android.emailcommon.service.IEmailService getServiceForMessage(long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void selectAccountAndCreateContact()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.DayView$CalendarGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListAdapter: android.net.Uri getGroupUriFromId(long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init>(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactEditorActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$5100(com.android.calendar.DayView,android.view.MotionEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void addAudio(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen$2: void run(android.accounts.AccountManagerFuture)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,com.android.calendar.CalendarController$EventInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME$UIHandler: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void notifyInvalidSelection()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.NonPhoneActivity: void onStart()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.phone.CallCard: void onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView$2: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardInterpreter: void endEntry()>
Permission:android.permission.SEND_SMS,android.permission.READ_EXTERNAL_STORAGE
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.ui.SurfaceRenderFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.SingleRunningTask: void runInternal(java.lang.Object)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$ModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<android.content.ContentService: android.content.IContentService main(android.content.Context,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.adapter.AccountSyncAdapter: void <init>(com.android.exchange.EasSyncService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onCodeInput(int,int[],int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportProcessor: void onEntryCreated(com.android.vcard.VCardEntry)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.net.Uri getContactUriForPhoneNumber(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.Email: void updateLoggingFlags(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage: void access$1600(com.android.gallery3d.app.AlbumPage,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.CallDetailActivity: java.lang.String getVoicemailNumber()>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: boolean loadFromUri(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList$6: boolean onKey(android.view.View,int,android.view.KeyEvent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.LabeledEditorView: void onTypeSelectionChange(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: void onUpEvent(int,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntitySet: void buildSplitContactDiff(java.util.ArrayList,int[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$EntryElementIterator: boolean onElement(com.android.vcard.VCardEntry$EntryElement)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper: void access$900(com.android.calendar.DeleteEventHelper)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.deskclock.AlarmKlaxon: void onDestroy()>
Permission:android.permission.CALL_PHONE
<com.android.internal.telephony.ITelephony: boolean endCall()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getCallHistorySize(int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$7: android.accounts.AccountManagerFuture start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.DataController$DataControllerHandler: void doQueryBookmarkStatus(java.lang.String,java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity take()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupBasics: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView$ScreenNailPicture: void draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaApi: com.cooliris.picasa.PicasaApi$AuthAccount[] getAuthenticatedAccounts(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.AutoCorrection: boolean isValidWord(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[])>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.RECORD_AUDIO
<android.speech.SpeechRecognizer: void handleCancelMessage()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$EntryElement: void constructInsertOperation(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void start()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void setSearchMode(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WifiP2pSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.SmsReceiverService: void messageFailedToSend(android.net.Uri,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity$1: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.ex.chips.BaseRecipientAdapter$DirectoryFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>
Permission:android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.READ_EXTERNAL_STORAGE
<com.android.server.InputMethodManagerService: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: void goTo(android.text.format.Time,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.RenderScriptScene: void start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.provider.DBHelper$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageItem: void <init>(android.content.Context,java.lang.String,android.database.Cursor,com.android.mms.ui.MessageListAdapter$ColumnsMap,java.util.regex.Pattern)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void access$000(com.android.calendar.EventInfoActivity)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.net.NetworkPolicyEditor: void read()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupBrowserActivity: void onStart()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.wallpaper.nexus.NexusRS: void start()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: void <init>(android.content.Context,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.SecuritySettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ExportVCardActivity: android.app.Dialog onCreateDialog(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageApplicationsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.StringLogger: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.server.status.StatusBarPolicy: void <init>(android.content.Context,com.android.server.status.StatusBarService)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void showMissedCallNotification(com.android.internal.telephony.Connection,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.EmailAddressPickerFragment: void prepareEmptyView()>
Permission:android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.tablet.TabletStatusBar$NotificationClicker: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountsListAdapter: void <init>(android.content.Context,com.android.contacts.util.AccountsListAdapter$AccountListFilter)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.TwelveKeyDialer: void afterTextChanged(android.text.Editable)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void onAttach(android.app.Activity)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DuotoneFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AlertAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen$2: void onClick(android.view.View)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.MonitoredActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeKeyWhenKeyguardShowingTq(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void pokeWakelock()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DefaultContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int onGet(javax.obex.Operation)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.CallbackFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: int access$2700(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MiniKeyboardView$1: void onTextInput(java.lang.CharSequence)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void onLabelRebuilt()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment: boolean access$000(com.android.calendar.event.EditEventFragment,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String)>
Permission:android.permission.RECEIVE_SMS,android.permission.SEND_SMS,android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.UiccSmsController: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: boolean isRinging()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.mail.store.ExchangeStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.ISms$Stub: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult access$5400(com.android.phone.BluetoothHandsfree)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SecuritySettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.EffectsRecorder$EffectsListener: void onEffectsUpdate(int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity: void showEmptyStateForTab(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask: java.util.Map doInBackground(java.lang.Void[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekFragment: android.net.Uri access$500(com.android.calendar.month.MonthByWeekFragment)>
Permission:android.permission.SEND_SMS,android.permission.READ_EXTERNAL_STORAGE
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void onActivityCreated(android.os.Bundle)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$4200(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment$Done: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.socialwidget.SocialWidgetProvider: void bindRemoteViews(android.content.Context,int,android.appwidget.AppWidgetManager,com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void chooseUpstreamType(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void access$2900(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLRootView: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean onContactIdLoaded(android.database.Cursor,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavTabScroller: void onLayout(boolean,int,int,int,int)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageViewFragment: void onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.WebViewController: void onReceivedTitle(com.android.browser.Tab,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean callContact(android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.vcard.ImportVCardActivity: void onStart()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.ConnectivityService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ImportVCardActivity: android.app.Dialog onCreateDialog(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardView: void swipeRight()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.FrameSource: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void access$1100(com.android.gallery3d.app.PhotoPage)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: com.android.phone.InCallScreen$InCallInitStatus syncWithPhoneState()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.DeliveryReportActivity: java.util.List getSmsReportItems()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.SearchActivity$1: void onChange(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri access$200(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.panorama.PanoramaActivity: void onWindowFocusChanged(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.TileImageView: boolean onTouch(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.launcher2.Launcher: void showFirstRunWorkspaceCling()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: java.lang.Void doInBackground(java.lang.Void[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity$2: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void access$1500(com.android.phone.InCallScreen)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsActivity: void onBackPressed()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForSelf()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.deviceinfo.UsbSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.PostalAddressPickerFragment: void prepareEmptyView()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMoreKeysPanel(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.GalleryActionBar$ClusterRunner: void doCluster(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.ImportCompleteListener: void goToImportedAlbum()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void access$300(com.android.calendar.CalendarView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.contacts.ContactsProvider2: android.accounts.Account getDefaultAccount()>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.wm.InputManager$Callbacks: boolean interceptKeyBeforeDispatching(com.android.server.wm.InputWindowHandle,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void loadDictionary()>
Permission:android.permission.READ_EXTERNAL_STORAGE
<android.content.pm.IPackageManager$Stub: int[] getPackageGids(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasAccountService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$28: void onContentChanged(com.android.mms.ui.MessageListAdapter)>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.SyncManager: java.lang.String getDeviceId(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.datepicker.DatePickerDialog: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.SubSettings: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.group.GroupEditorFragment: void selectAccountAndCreateGroup()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityDeltaList: android.content.ContentProviderOperation$Builder beginKeepTogether()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: void updateTitle(android.text.format.Time)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.CropView$HighlightRectangle: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.LocalMergeAlbum: long reload()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation$2: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.StringSource: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.AttachImage: void onActivityResult(int,int,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void <init>(android.content.Context,android.view.View,int,boolean,com.android.contacts.model.EntityDeltaList)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.ManageCachePage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void readStateFromBundle(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardScreenCallback: void forgotPattern(boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.VideoCamera: void access$3300(com.android.camera.VideoCamera)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1000(com.android.internal.policy.impl.KeyguardViewMediator)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactBrowserActivity: void access$900(com.android.contacts.activities.ContactBrowserActivity)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.SelectCalendarsActivity: void doSaveAction()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editSmsMessageItem(com.android.mms.ui.MessageItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsListActivity$JoinContactActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: void updateDownloadFailedNotification(android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.EffectSettingPopup$Listener: void onSettingChanged()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AccountSyncSettings: void updateAuthDescriptions()>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$CalendarAlerts: boolean alarmExists(android.content.ContentResolver,long,long,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void internalResolveIntent(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageView: void onClickSender()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView$1: void run()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera$MyHeadUpDisplayListener: void onSharedPreferencesChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ActionBarAdapter$MyNavigationListener: boolean onNavigationItemSelected(int,long)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.KeyboardView$UIHandler: void startLongPressShiftTimer(long,int,com.android.inputmethod.keyboard.PointerTracker)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.ScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager$5: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.util.StateMachine$SmHandler$QuittingState: void enter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.SEND_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity: void clearSearch()>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void updateDraftSmsMessage(long,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.SupplicantStateTracker$DormantState: boolean processMessage(android.os.Message)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void cleanupUpstream()>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: boolean isOpened(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.MessageItem getMessageItem(java.lang.String,long,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PostalAddressListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker: void onUpEventInternal(int,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewBase: void verifyUnlock()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1Number()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen$14: void onCancel(android.content.DialogInterface)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab: void postCapture()>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onSelectionChange()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment: void createContact(android.accounts.Account)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PatternUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.RecipientsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity: void goToToday()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onUserInteraction()>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabBar: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.RecentCallsListActivity: void onResume()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.TransactionService: void access$200(com.android.mms.transaction.TransactionService)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.StatusBar: void start()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment: void finish()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumPicker: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: com.android.contacts.model.EntityDeltaList getDeltaForAttachingPhotoToContact()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onStopVideoRecording(boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector$6: void onPostExecute(java.lang.Boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.NotificationTransaction: void run()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void startMsgListQuery(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.PointerTracker: boolean callListenerOnPressAndCheckKeyboardLayoutChange(com.android.inputmethod.keyboard.Key)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.READ_CALENDAR
<com.android.providers.calendar.CalendarProvider2: int updateEventRelatedTable(android.net.Uri,java.lang.String,boolean,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.IndicatorControlBarContainer: void onSettingChanged()>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceId()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen: void onTrigger(android.view.View,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage: boolean onItemSelected(android.view.MenuItem)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleDayPickerFragment: void updateMonthHighlight(android.widget.AbsListView)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.AgendaActivity$1: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguard()>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.DayView$3: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.AddAccountSettings: void addAccount(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: boolean parse()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.multiwaveview.GlowPadView: void setGrabbedState(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.media.effect.effects.AutoFixEffect: void apply(int,int,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: boolean parse()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void bailOutAfterErrorDialog()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment: void showJoinAggregateActivity(android.net.Uri)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.cooliris.media.DetailMode: java.lang.CharSequence[] populateDetailModeStrings(android.content.Context,java.util.ArrayList)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub: void setNetworkPolicies(android.net.NetworkPolicy[])>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IIccPhoneBook$Stub: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: boolean reloadDictionaryIfRequired()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPage$1: void removeAllComponents()>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.PointerTracker: void repeatKey(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListFragment$3: void onLoadFinished(android.content.Loader,java.lang.Object)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void access$300(com.android.calendar.CalendarView)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment$3: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.widget.IndexerListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerSearchTwoPane: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FixedRotationFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void blockingReloadDictionaryIfRequired()>
Permission:android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService: java.lang.String getDeviceId()>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void cacheAllThreads(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.data.WorkingMessage: void access$900(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void updateEventDetails()>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: java.lang.String getLine1AlphaTagForDisplay(long)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.AlphaBlendFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.email.Controller: void deleteAccountSync(long,android.content.Context)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.ActivityBase: void createCameraScreenNail(boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: boolean dispatchKeyEvent(android.view.KeyEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void recreateUnlockScreen(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.compat.InputMethodServiceCompatWrapper: void onCreate()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.KeyboardSwitcher: void startLongPressTimer(int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarView: boolean initNextView(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: int dispatchGsmMessage(com.android.internal.telephony.SmsMessageBase)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BrightnessFilter: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_SMS
<com.android.mms.transaction.MmsMessageSender: boolean sendMessage(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage: void showPendingBitmap()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController: boolean onContextItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$5: void unlock()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardComposer: boolean init(java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void closeDialpadInternal(boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.browser.AutofillHandler: void asyncLoadFromDb()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.CropImage$LoadDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: com.android.contacts.model.EntitySet doInBackground(com.android.contacts.ui.EditContactActivity,android.content.Intent[])>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageViewFragmentBase: void onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.NullFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: boolean initOtaState()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.util.AccountPromptUtils: void launchAccountPrompt(android.app.Activity)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EventInfoActivity: void onPause()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void access$1600(com.android.camera.VideoCamera,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result load(android.content.Context,java.lang.String)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaListView: void goTo(android.text.format.Time,long,java.lang.String,boolean,boolean)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView$UIHandler: void startLongPressTimer(long,int,com.android.inputmethod.latin.PointerTracker)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords$Builder getSuggestedWordBuilder(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.vcard.VCardParserImpl_V21: void parse(java.io.InputStream)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.ContactBrowserActivity: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity: void bindEditors()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.media.IMediaScannerListener$Stub: void scanCompleted(java.lang.String,android.net.Uri)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.deprecated.voice.VoiceInput: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IccProvider: android.database.MatrixCursor loadFromEf(int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity$TabPagerListener: void onPageSelected(int)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage: java.lang.String access$000(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.media.DataSource: void loadMediaSets(com.cooliris.media.MediaFeed)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: void access$500(com.android.gallery3d.app.PhotoDataAdapter,long,com.android.gallery3d.util.Future)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.CALL_PHONE,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternCellAdded(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.provider.EmailProvider$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserDictionary: void <init>(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.RECEIVE_SMS,android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.UiccSmsController: java.util.List getAllMessagesFromIccEf(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updateAll(android.net.Uri,int,android.content.ContentValues,java.lang.String,java.lang.String[])>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadService: void access$700(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PickerActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactSelectionActivity: void onResume()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void createNewMessage()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.media.IMediaScannerListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean disableCellBroadcast(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.exchange.SyncManager$AccountObserver$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onEffectsUpdate(int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void resetEntireInputState()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView: void onScreenTurnedOn()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToPackedGrayFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ViewContactActivity: void considerBindData()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: android.net.Uri getFirstContactUri()>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.ExchangeUtils: void enableEasCalendarSync(android.content.Context)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.AutoFixFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService$Stub: void open(android.net.sip.SipProfile)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab: void dispatchTriggerEvent(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void getAllBigrams(java.lang.CharSequence,com.android.inputmethod.latin.WordComposer)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void startPreview()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen: void access$100(com.android.browser.NavScreen,com.android.browser.Tab)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void access$700(android.content.Context)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void checkConnectivity()>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.alerts.QuickResponseActivity$QueryThread: void run()>
Permission:android.permission.READ_SMS
<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getMediaModel(android.content.Context,org.w3c.dom.smil.SMILMediaElement,com.android.mms.model.LayoutModel,com.google.android.mms.pdu.PduBody)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.Helpers: void deleteFile(android.content.ContentResolver,long,java.lang.String,java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: void startRequestProcessing()>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.ProviderStatusLoader: void retryUpgrade()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$2: void onPhotoAvailable(long,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$4: void onTabChanged(java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactListFilterControllerImpl: boolean filterAccountExists()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.GalleryActionBar: boolean onNavigationItemSelected(int,long)>
Permission:android.permission.RECORD_AUDIO
<com.google.android.voicesearch.LatinIMEWithVoice: void launchSettings()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.gadget.WidgetSource: android.graphics.Bitmap getImage(int)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FisheyeFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment: void access$1100(com.android.contacts.detail.ContactDetailFragment)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForPhoneNumber(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.WeekView: void recalc()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.deviceinfo.Status: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.TabControl: com.android.browser.SnapshotTab createSnapshotTab(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.panorama.PanoramaActivity: void onResume()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.email.Controller$ControllerService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.USE_SIP
<com.android.phone.sip.SipSettings$2$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ResizeFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.GET_ACCOUNTS
<com.android.email.mail.store.ExchangeStore: android.accounts.AccountManagerFuture addSystemAccount(android.content.Context,com.android.email.provider.EmailContent$Account,boolean,boolean,android.accounts.AccountManagerCallback)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onPressKey(int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.calllog.DefaultVoicemailNotifier: void updateNotification(android.net.Uri)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinKeyboardBaseView: void onUpEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.providers.calendar.CalendarProvider2: void access$300(com.android.providers.calendar.CalendarProvider2)>
Permission:android.permission.READ_PHONE_STATE
<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.quicksearchbox.ui.ContactBadge: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ExportVCardActivity$ActualExportThread: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>
Permission:android.permission.CALL_PHONE,android.permission.GET_ACCOUNTS
<android.view.WindowManagerPolicy: int interceptKeyTq(android.view.RawInputEvent,boolean)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TextToSpeechSettingsActivity: void onBuildHeaders(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$12: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void access$700(com.android.inputmethod.latin.LatinIME)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader$Result: boolean isWritableContact(android.content.Context)>
Permission:android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DataUsageSummaryActivity: void updateHeaderList(java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.phone.PhoneInterfaceManager: java.lang.String[] getPcscfAddress(java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.TelephonyRegistry: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.keyboard.MiniKeyboardView$1: void onCodeInput(int,int[],int,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.dialpad.DialpadFragment: boolean onLongClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: void onPostExecute(java.lang.Object)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.StateManager: void restoreFromState(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallCard: void updateAlreadyDisconnected(com.android.internal.telephony.CallManager)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.GLView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMemberLoader: com.android.contacts.GroupMemberLoader constructLoaderForGroupEditorQuery(android.content.Context,long)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void onLoadComplete(android.content.Loader,java.lang.Object)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.CropFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.JoinContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.month.MonthByWeekAdapter: void init()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.email.activity.MessageViewFragmentBase: void onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.VoiceIMEConnector: void hideVoiceWindow(boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.base.GLTextureTarget: void performOpen(android.filterfw.core.FilterContext)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.exchange.SyncManager$CalendarObserver$1: void run()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$3: void onTabChanged(java.lang.String)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestLocationUpdatesLocked(java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int access$3900(com.android.mms.ui.ComposeMessageActivity,long,boolean)>
Permission:android.permission.USE_SIP
<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageListAdapter: void notifyImageLoaded(java.lang.String)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetModel: com.android.calendar.widget.CalendarAppWidgetModel$EventInfo populateEventInfo(long,boolean,long,long,int,int,java.lang.String,java.lang.String,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$ConfirmRestrictFragment$1: void onClick(android.content.DialogInterface,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$KeyboardLayoutPickerActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS
<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR,android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService$Stub$Proxy: void reconcileAccounts(java.lang.String,java.lang.String)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void pickSuggestionManually(int,java.lang.CharSequence)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: void onPreloginFinished(android.os.Bundle,android.content.Intent,long,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.ExchangeUtils: boolean isExchangeAvailable(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: int updateData(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME: void commitTyped(android.view.inputmethod.InputConnection,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.SoundSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.PhotoView: void removeAllComponents()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CallerInfo: java.lang.String getCallerId(android.content.Context,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: void startQueryHaveLockedMessages(android.content.AsyncQueryHandler,java.util.Collection,int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1Number()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void onNewIntent(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SpellCheckersSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: void doSaveAction()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupEditorActivity: void onStart()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.data.Clustering: void run(com.android.gallery3d.data.MediaSet)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,com.android.internal.widget.LockPatternUtils)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest: void initSynchronously(android.content.Context,com.android.inputmethod.latin.Dictionary,java.util.Locale)>
Permission:android.permission.GET_ACCOUNTS
<com.cooliris.picasa.PicasaContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardViewTest: void testMenuGoesToLockScreenWhenDeviceNotSecure()>
Permission:android.permission.CALL_PHONE
<com.android.mms.ui.ComposeMessageActivity: void dialRecipient()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.LegacyContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.NonPhoneActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsDeliveryInfo getSmsNewDeliveryInfo(android.content.Context)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void syncReloadDictionaryInternal()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.provider.ContactsContract$Contacts: void markAsContacted(android.content.ContentResolver,long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.WindowManagerService$InputMonitor: void notifyLidSwitchChanged(long,boolean)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactDetailFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.UserBinaryDictionary: void <init>(android.content.Context,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.PhoneWindowManager$2: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookOneVcard(javax.obex.Operation,int,boolean,java.lang.String,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventView$TimeListener: void onTimeSet(android.widget.TimePicker,int,int)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayView: void init(android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void access$7000(com.android.mms.ui.ComposeMessageActivity,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$2: void doWork()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.LegacyApiSupport: int updateSettings(android.content.ContentValues)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.AccountUnlockScreen: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Tab$9: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleReadCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.Controller: com.android.browser.Tab openTab(com.android.browser.IntentHandler$UrlData)>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ConversationList$ThreadListQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void access$1100(com.android.bluetooth.pbap.BluetoothPbapService)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_PHONE_STATE
<com.android.contacts.detail.ContactLoaderFragment$ContactLoaderFragmentListener: void onDetailsLoaded(com.android.contacts.ContactLoader$Result)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.activities.DialtactsActivity$5: void onHomeInActionBarSelected()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object access$2500(com.android.gallery3d.app.PhotoDataAdapter,java.util.concurrent.Callable)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DeviceAdminSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock(int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onBackPressed()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void goToUnlockScreen()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary: void updateTabs()>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void onMaxPendingMessagesReached()>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.FetchUrlMimeType: void onPostExecute(java.lang.Object)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.TetherSettings: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockScreen$MultiWaveViewMethods: void onTrigger(android.view.View,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void <init>(android.content.Context,java.lang.String,boolean)>
Permission:android.permission.READ_EXTERNAL_STORAGE
<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.TransactionSafeActivity: boolean onSearchRequested()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage: void setContentPane(com.android.gallery3d.ui.GLView)>
Permission:android.permission.SEND_SMS,android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.email.NotificationController: android.app.Notification createNewMessageNotification(long,long,android.database.Cursor,long,int,int)>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS
<com.android.mms.ui.ManageSimMessages: void refreshMessageList()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.event.EditEventFragment: void access$600(com.android.calendar.event.EditEventFragment,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapService: void access$1200(com.android.bluetooth.pbap.BluetoothPbapService)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void writeDataToDestination(com.android.providers.downloads.DownloadThread$State,byte[],int)>
Permission:android.permission.READ_SMS
<com.google.android.mms.util.PduCache: android.net.Uri normalizeKey(android.net.Uri)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage: void onRootFolderFound(long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME: void onCodeInput(int,int[],int,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.AutologinBar: void onClick(android.view.View)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.text.ToUpperCase: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleTestCommand()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DocumentaryFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR,android.permission.WRITE_CONTACTS
<com.android.calendar.month.SimpleDayPickerFragment: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.MessageUtils$ResizeImageResultCallback: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void onInfo(android.media.MediaRecorder,int,int)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.GroupEditorActivity: void onServiceCompleted(android.content.Intent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccountSyncSettingsActivity: void onAccountsUpdated(android.accounts.Account[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOn()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayFragment: android.view.View makeView()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingKnob$1: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView: void render(com.android.gallery3d.ui.GLCanvas)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageFileViewFragment: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleUserChanged(int)>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupNames$2: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ContactListEmptyView: boolean isSyncActive()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$TetherSettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: void hideNavScreen(int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.GroupMetaDataLoader: void <init>(android.content.Context,android.net.Uri)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.CalendarActivity$1: void run()>
Permission:android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.phone.PhoneStatusBar$NotificationClicker: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.StrequentContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.vpn2.VpnSettings: void onResume()>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.EditEvent: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.DayActivity: void onNewIntent(android.content.Intent)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ConversationList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView$PresenceQueryHandler$1: void run()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity: void configureActionBar(int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.OtaUtils: void otaShowSuccessFailure()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService: void createRawContact(android.content.Intent)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$3$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.SlotView: void removeOneComponent(com.android.gallery3d.ui.GLView)>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.Transaction: void notifyObservers()>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler: int processNewCursor(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec,android.database.Cursor)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment: void access$500(com.android.calendar.EventInfoFragment,android.view.View)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: void onUserInteraction()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void confirmDeleteThread(long)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.IFaceLockCallback: void pokeWakelock()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DisplaySettingsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment: void updateOnEntry()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera: void keepScreenOnAwhile()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen: void handleOtaCallEnd()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.interactions.ImportExportInteraction: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.BrowserBookmarksPage$LookupBookmarkCount: java.lang.Integer doInBackground(java.lang.Long[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.EmailAddressPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onUseAsPrimaryChosen()>
Permission:android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder: void callOnPostExecuteForTest(java.lang.Object)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.WhitelistDictionary: void <init>(android.content.Context,int)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.util.NameConverter: java.lang.String structuredNameToDisplayName(android.content.Context,android.content.ContentValues)>
Permission:android.permission.READ_CALENDAR
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: java.lang.Object next()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionaryAsync()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.activities.AttachPhotoActivity: void onResume()>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.SearchResultsActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthActivity: void goToToday()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.model.VideoModel: com.android.mms.util.ItemLoadedFuture loadThumbnailBitmap(com.android.mms.util.ItemLoadedCallback)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PhotoPage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void updateConfiguration()>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$4500(com.android.mms.ui.ComposeMessageActivity,boolean)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.downloads.DownloadThread: void notifyDownloadCompleted(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String)>
Permission:android.permission.READ_PHONE_STATE
<com.android.server.telecom.TelecomService$TelecomServiceImpl: void showInCallScreen(boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.MessageUtils: void handleReadReport(android.content.Context,long,int,java.lang.Runnable)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.ContactsUtils: android.net.Uri getCallUri(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ExpandableBinaryDictionary$AsyncReloadDictionaryTask: void run()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBAFilter: void open(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment: void onClose()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment: void selectDefaultContact()>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary$7: void onClick(android.view.View)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView,android.accounts.AccountManager,com.android.internal.policy.impl.LockPatternKeyguardView$1)>
Permission:android.permission.READ_CONTACTS,android.permission.READ_SMS,android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity: void addVideo(android.net.Uri,boolean)>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.media.IMediaScannerListener: void scanCompleted(java.lang.String,android.net.Uri)>
Permission:android.permission.READ_PHONE_STATE
<com.android.development.Connectivity: void access$2600(com.android.development.Connectivity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR
<com.android.calendar.GeneralPreferences: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.ui.EditContactActivity$AddContactTask: java.util.ArrayList doInBackground(com.android.contacts.ui.EditContactActivity,java.lang.Void[])>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.MonthView: void drawBox(int,int,int,int,android.graphics.Canvas,android.graphics.Paint,android.graphics.Rect,boolean)>
Permission:android.permission.READ_PHONE_STATE
<com.android.mms.ui.MessageUtils: boolean isLocalNumber(java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void loadMessageContent()>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener,java.lang.String)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity: boolean access$2600(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: java.lang.Void doInBackground(android.app.Activity,com.android.contacts.ui.ContactsPreferencesActivity$AccountSet[])>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.vcard.ImportProcessor: void doFinishNotification(android.net.Uri)>
Permission:android.permission.ACCESS_COARSE_LOCATION,android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ITelephonyRegistry$Stub: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CALL_LOG,android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter: boolean queryContactInfo(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>
Permission:android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BlendFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.USE_SIP
<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocationSettingsActivity: int insertAccountsHeaders(java.util.List,int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.server.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void checkPuk()>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.PostalAddressPickerFragment: void onAttach(android.app.Activity)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageListFragment$MessageOpenTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl: java.lang.Object next()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberPickerFragment: void onItemClick(int,long)>
Permission:android.permission.READ_SMS
<com.android.mms.data.Conversation: long getOrCreateThreadId(android.content.Context,com.android.mms.data.ContactList)>
Permission:android.permission.RECORD_AUDIO
<com.android.inputmethod.voice.LatinIMEWithVoice: void onKey(int,int[])>
Permission:android.permission.SEND_SMS,android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>
Permission:android.permission.USE_SIP
<android.net.sip.ISipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
Permission:android.permission.GET_ACCOUNTS
<com.android.development.AccountsTester$ButtonClickListener: void onClick(android.view.View)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactEntryListFragment: void onItemClick(int,long)>
Permission:android.permission.GET_ACCOUNTS,android.permission.READ_CALENDAR
<com.android.calendar.CalendarController: void refreshCalendars()>
Permission:android.permission.CAMERA,android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SaturateFilter: void performProcess(android.filterfw.core.FilterContext)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean onTouchEvent(android.view.MotionEvent)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.SimPukUnlockScreen: void onResume()>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void run()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleActionCommand()>
Permission:android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void onClick(android.view.View)>
Permission:android.permission.READ_PHONE_STATE
<com.android.contacts.SpecialCharSequenceMgr: boolean handleChars(android.content.Context,java.lang.String)>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.PhoneUi: void showNavScreen()>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivity$41: void onContentChanged(com.android.mms.ui.MessageListAdapter)>
Permission:android.permission.GET_ACCOUNTS
<android.view.IWindowManager$Stub: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.ContactsBinaryDictionary: boolean hasContentChanged()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.list.DirectoryListLoader: java.lang.Object loadInBackground()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.PanoramaActivity: void createCameraScreenNail(boolean)>
Permission:android.permission.READ_SMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$3700(com.android.mms.ui.ComposeMessageActivity,long)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.model.EntityModifier: void migrateStructuredName(android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.DataKind)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadPhotosFromDatabase(boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.exchange.EasSyncService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>
Permission:android.permission.READ_SMS
<com.android.mms.model.VideoModel: void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>
Permission:android.permission.READ_CONTACTS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.LocationSettings: void onResume()>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: boolean performAction(int,int,android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier: void onUnknownConnectionAppeared(android.os.AsyncResult)>
Permission:android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.DevicePickerFragment: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS,android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ContactSelectionActivity: boolean onQueryTextChange(java.lang.String)>
Permission:android.permission.READ_CONTACTS,android.permission.GET_ACCOUNTS,android.permission.WRITE_CONTACTS
<com.android.contacts.editor.StructuredNameEditorView: void notifyEditorListener()>
Permission:android.permission.SEND_SMS,android.permission.INTERACT_ACROSS_USERS_FULL,android.permission.UPDATE_APP_OPS_STATS,android.permission.READ_EXTERNAL_STORAGE,android.permission.SEND_SMS_NO_CONFIRMATION,android.permission.SEND_RESPOND_VIA_MESSAGE
<com.android.internal.telephony.UiccSmsController: void sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>
Permission:android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1600(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>
Permission:android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaByDayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
Permission:android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DataConnection$DcDisconnectingState: void enter()>
Permission:android.permission.GET_ACCOUNTS
<com.android.settings.Settings$ManageApplicationsActivity: void onCreate(android.os.Bundle)>
Permission:android.permission.READ_PHONE_STATE
<android.net.wifi.WifiStateMachine$DefaultState: void enter()>
Permission:android.permission.RECEIVE_SMS,android.permission.READ_SMS,android.permission.READ_PHONE_STATE
<com.android.mms.transaction.RetrieveTransaction: void run()>
Permission:android.permission.GET_ACCOUNTS
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.Camera: void restorePreferences()>
Permission:android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.PhotoPage$2: void onLoadingFinished()>
Permission:android.permission.EXTERNAL_PRIVATE_STORAGE
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>
<android.app.ContextImpl: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.app.ContextImpl: java.io.File getExternalCacheDir()>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
<android.app.ContextImpl: java.io.File[] getExternalCacheDirs()>
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageDirectory()>
<android.app.ContextImpl: java.io.File[] getExternalMediaDirs()>
<android.content.ContextWrapper: java.io.File[] getExternalMediaDirs()>
Permission:android.permission.EXTERNAL_PUBLIC_STORAGE
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.os.Environment$UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
Permission:android.permission.READ_CONTACTS
<android.provider.Contacts$People: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$RawContactsEntity: android.net.Uri PROFILE_CONTENT_URI>
<android.provider.Contacts$Groups: android.net.Uri DELETED_CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FREQUENT_URI>
<android.provider.ContactsContract$Groups: android.net.Uri CONTENT_SUMMARY_URI>
<android.provider.SocialContract: android.net.Uri AUTHORITY_URI>
<android.provider.ContactsContract$RawContactsEntity: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Phones: android.net.Uri CONTENT_FILTER_URL>
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryListQuery: android.net.Uri URI>
<android.provider.ContactsContract$StreamItems: android.net.Uri CONTENT_PHOTO_URI>
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_WITH_PHONES_URI>
<android.provider.ContactsContract$DisplayPhoto: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Outbox: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Directory: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$CommonDataKinds$Callable: android.net.Uri CONTENT_FILTER_URI>
<android.provider.ContactsContract$StreamItems: android.net.Uri CONTENT_URI>
<com.android.mms.data.Contact$ContactsCache: android.net.Uri PHONES_WITH_PRESENCE_URI>
<android.provider.Telephony$Sms: android.net.Uri CONTENT_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>
<com.android.calendar.event.AttendeesView: android.net.Uri CONTACT_DATA_WITH_PRESENCE_URI>
<com.android.contacts.model.AccountWithDataSet: android.net.Uri RAW_CONTACTS_URI_LIMIT_1>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_FILTER_URI>
<android.provider.ContactsContract$StreamItems: android.net.Uri CONTENT_LIMIT_URI>
<android.provider.ContactsContract$DisplayPhoto: android.net.Uri CONTENT_MAX_DIMENSIONS_URI>
<android.provider.Telephony$Sms$Sent: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$RawContacts: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Conversations: android.net.Uri CONTENT_URI>
<com.android.mms.transaction.MessageStatusReceiver: android.net.Uri STATUS_URI>
<com.android.contacts.GroupListLoader: android.net.Uri GROUP_LIST_URI>
<android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_FILTER_URI>
<com.android.contacts.model.AccountTypeWithDataSet: android.net.Uri RAW_CONTACTS_URI_LIMIT_1>
<android.provider.ContactsContract$StatusUpdates: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$StatusUpdates: android.net.Uri PROFILE_CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI>
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_FAVORITES_URI>
<android.provider.ContactsContract$Profile: android.net.Uri CONTENT_VCARD_URI>
<com.android.internal.telephony.SMSDispatcher: android.net.Uri mRawUri>
<android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_EMAIL_URI>
<android.provider.Contacts: android.net.Uri CONTENT_URI>
<com.android.common.contacts.DataUsageStatUpdater$DataUsageFeedback: android.net.Uri FEEDBACK_URI>
<android.provider.Contacts$People: android.net.Uri DELETED_CONTENT_URI>
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_URI>
<android.provider.SocialContract$Activities: android.net.Uri CONTENT_CONTACT_STATUS_URI>
<android.provider.ContactsContract$Profile: android.net.Uri CONTENT_RAW_CONTACTS_URI>
<android.provider.ContactsContract$Groups: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_FILTER_URI>
<com.android.mms.transaction.MessageStatusService: android.net.Uri STATUS_URI>
<android.provider.Contacts$Phones: android.net.Uri CONTENT_URI>
<android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Inbox: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Settings: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri NOTIFICATION_URI>
<com.android.calendar.EventInfoActivity: android.net.Uri CONTACT_DATA_WITH_PRESENCE_URI>
<android.provider.Telephony$Sms$Draft: android.net.Uri CONTENT_URI>
<com.android.contacts.ContactsLiveFolders$PhoneContacts: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Groups: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$DataUsageFeedback: android.net.Uri DELETE_USAGE_URI>
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Profile: android.net.Uri CONTENT_URI>
<android.provider.Contacts$People: android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI>
<android.provider.Contacts$Presence: android.net.Uri CONTENT_URI>
<android.provider.Contacts$People: android.net.Uri CONTENT_FILTER_URI>
<com.android.ex.chips.BaseRecipientAdapter$DirectoryListQuery: android.net.Uri URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FILTER_URI>
<android.provider.ContactsContract$Settings: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_GROUP_URI>
<android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_FILTER_URI>
<android.provider.ContactsContract$AggregationExceptions: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI_WITH_VOICEMAIL>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>
<com.android.nfc.P2pLinkManager: android.net.Uri PROFILE_URI>
<android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Organizations: android.net.Uri CONTENT_URI>
<android.provider.Contacts$GroupMembership: android.net.Uri RAW_CONTENT_URI>
<com.android.mms.data.Contact$ContactsCache: android.net.Uri EMAIL_WITH_PRESENCE_URI>
<android.provider.ContactsContract$SyncState: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Extensions: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri ICC_URI>
<com.android.email.activity.setup.AccountSetupNames: android.net.Uri PROFILE_URI>
<android.provider.Contacts$Photos: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>
<android.provider.ContactsContract$CommonDataKinds$Callable: android.net.Uri CONTENT_URI>
<com.android.contacts.ContactsLiveFolders$StarredContacts: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_MULTI_VCARD_URI>
<android.provider.ContactsContract$DataUsageFeedback: android.net.Uri FEEDBACK_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI>
<android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI>
<com.android.mms.ui.ManageSimMessages: android.net.Uri ICC_URI>
<android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_URI>
<android.provider.CallLog: android.net.Uri CONTENT_URI>
<com.android.contacts.list.DirectoryListLoader$DirectoryQuery: android.net.Uri URI>
<android.provider.SocialContract$Activities: android.net.Uri CONTENT_URI>
<com.android.contacts.ContactsLiveFolders$AllContacts: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$ProviderStatus: android.net.Uri CONTENT_URI>
<android.provider.SocialContract$Activities: android.net.Uri CONTENT_AUTHORED_BY_URI>
<android.provider.ContactsContract$ProfileSyncState: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_VCARD_URI>
Permission:android.permission.READ_SMS
<android.provider.Telephony$Mms$ScrapSpace: android.net.Uri CONTENT_URI>
<android.provider.Telephony$MmsSms: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri ICC_URI>
<com.android.mms.data.RecipientIdCache: android.net.Uri sAllCanonical>
<android.provider.Telephony$MmsSms$PendingMessages: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Mms$Outbox: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Mms: android.net.Uri CONTENT_URI>
<com.android.mms.transaction.MessagingNotification: android.net.Uri UNDELIVERED_URI>
<android.provider.Telephony$Mms$Sent: android.net.Uri CONTENT_URI>
<com.android.internal.telephony.SMSDispatcher: android.net.Uri mRawUri>
<android.provider.Telephony$MmsSms: android.net.Uri SEARCH_URI>
<android.provider.Telephony$Mms: android.net.Uri REPORT_STATUS_URI>
<android.provider.Telephony$Sms$Outbox: android.net.Uri CONTENT_URI>
<com.android.mms.drm.DrmUtils: android.net.Uri DRM_TEMP_URI>
<android.provider.Telephony$MmsSms: android.net.Uri CONTENT_UNDELIVERED_URI>
<android.provider.Telephony$MmsSms: android.net.Uri CONTENT_DRAFT_URI>
<android.provider.Telephony$MmsSms: android.net.Uri CONTENT_LOCKED_URI>
<com.android.mms.ui.ManageSimMessages: android.net.Uri ICC_URI>
<android.provider.Telephony$MmsSms: android.net.Uri CONTENT_CONVERSATIONS_URI>
<com.android.mms.TempFileProvider: android.net.Uri SCRAP_CONTENT_URI>
<android.provider.Telephony$Sms: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Mms$Draft: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Mms: android.net.Uri REPORT_REQUEST_URI>
<android.provider.Telephony$Sms$Sent: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Threads: android.net.Uri THREAD_ID_CONTENT_URI>
<android.provider.Telephony$Mms$Rate: android.net.Uri CONTENT_URI>
<com.android.mms.transaction.MessageStatusService: android.net.Uri STATUS_URI>
<android.provider.Telephony$Sms$Inbox: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Conversations: android.net.Uri CONTENT_URI>
<com.android.mms.data.Conversation: android.net.Uri sAllThreadsUri>
<com.android.mms.transaction.MessageStatusReceiver: android.net.Uri STATUS_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri NOTIFICATION_URI>
<android.provider.Telephony$Sms$Draft: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Threads: android.net.Uri CONTENT_URI>
<com.android.mms.data.RecipientIdCache: android.net.Uri sSingleCanonicalAddressUri>
<android.provider.Telephony$Threads: android.net.Uri OBSOLETE_THREADS_URI>
<android.provider.Telephony$Mms$Inbox: android.net.Uri CONTENT_URI>
<android.provider.Telephony$MmsSms: android.net.Uri CONTENT_FILTER_BYPHONE_URI>
Permission:android.permission.GET_ACCOUNTS
<com.android.browser.provider.SnapshotProvider: android.net.Uri AUTHORITY_URI>
<android.provider.BrowserContract$Accounts: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$Settings: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$Bookmarks: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$Images: android.net.Uri CONTENT_URI>
<com.cooliris.picasa.PicasaContentProvider: android.net.Uri BASE_URI>
<android.provider.BrowserContract$Searches: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$Combined: android.net.Uri CONTENT_URI>
<com.android.browser.provider.SnapshotProvider$Snapshots: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$History: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$ImageMappings: android.net.Uri CONTENT_URI>
<android.provider.BrowserContract$SyncState: android.net.Uri CONTENT_URI>
<com.android.browser.provider.BrowserProvider2$OmniboxSuggestions: android.net.Uri CONTENT_URI>
<com.cooliris.picasa.PicasaContentProvider: android.net.Uri PHOTOS_URI>
<android.provider.BrowserContract$Bookmarks: android.net.Uri CONTENT_URI_DEFAULT_FOLDER>
<android.provider.Browser: android.net.Uri SEARCHES_URI>
<com.android.browser.provider.BrowserProvider2$Thumbnails: android.net.Uri CONTENT_URI>
<com.cooliris.picasa.PicasaContentProvider: android.net.Uri ALBUMS_URI>
<android.provider.BrowserContract: android.net.Uri AUTHORITY_URI>
<android.provider.Browser: android.net.Uri BOOKMARKS_URI>
Permission:android.permission.WRITE_CALENDAR
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_URI>
<android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>
<android.provider.Calendar$SyncState: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Events: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$CalendarCache: android.net.Uri URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_BY_DAY_URI>
<android.provider.Calendar$CalendarAlerts: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$SyncState: android.net.Uri CONTENT_URI>
<android.provider.Calendar$CalendarsEntity: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>
<com.android.providers.calendar.CalendarProvider2: android.net.Uri SCHEDULE_ALARM_URI>
<android.provider.Calendar$ExtendedProperties: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Reminders: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$EventsEntity: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$EventDays: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_SEARCH_URI>
<com.android.providers.calendar.CalendarAlarmManager: android.net.Uri SCHEDULE_ALARM_REMOVE_URI>
<android.provider.Calendar$Attendees: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>
<android.provider.Calendar: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_BY_DAY_URI>
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_BY_DAY_URI>
<com.android.providers.calendar.CalendarProvider2: android.net.Uri SCHEDULE_ALARM_REMOVE_URI>
<com.android.providers.calendar.CalendarAlarmManager: android.net.Uri SCHEDULE_ALARM_URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_SEARCH_BY_DAY_URI>
<android.provider.Calendar$EventDays: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Colors: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>
<android.provider.Calendar$CalendarCache: android.net.Uri URI>
<android.provider.CalendarContract$CalendarEntity: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Events: android.net.Uri DELETED_CONTENT_URI>
<android.provider.Calendar$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE>
<android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE>
<android.provider.Calendar$EventsEntity: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Events: android.net.Uri CONTENT_EXCEPTION_URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Calendars: android.net.Uri CONTENT_URI>
Permission:android.permission.READ_CALENDAR
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_URI>
<android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>
<android.provider.Calendar$SyncState: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Events: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$CalendarCache: android.net.Uri URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_BY_DAY_URI>
<android.provider.Calendar$CalendarAlerts: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$SyncState: android.net.Uri CONTENT_URI>
<android.provider.Calendar$CalendarsEntity: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>
<com.android.providers.calendar.CalendarProvider2: android.net.Uri SCHEDULE_ALARM_URI>
<android.provider.Calendar$ExtendedProperties: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Reminders: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$EventsEntity: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$EventDays: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_SEARCH_URI>
<com.android.providers.calendar.CalendarAlarmManager: android.net.Uri SCHEDULE_ALARM_REMOVE_URI>
<android.provider.Calendar$Attendees: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>
<android.provider.Calendar: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_BY_DAY_URI>
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_BY_DAY_URI>
<com.android.providers.calendar.CalendarProvider2: android.net.Uri SCHEDULE_ALARM_REMOVE_URI>
<com.android.providers.calendar.CalendarAlarmManager: android.net.Uri SCHEDULE_ALARM_URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_SEARCH_BY_DAY_URI>
<android.provider.Calendar$EventDays: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Colors: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Instances: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>
<android.provider.Calendar$CalendarCache: android.net.Uri URI>
<android.provider.CalendarContract$CalendarEntity: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Events: android.net.Uri DELETED_CONTENT_URI>
<android.provider.Calendar$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE>
<android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE>
<android.provider.Calendar$EventsEntity: android.net.Uri CONTENT_URI>
<android.provider.CalendarContract$Events: android.net.Uri CONTENT_EXCEPTION_URI>
<android.provider.Calendar$Instances: android.net.Uri CONTENT_URI>
<android.provider.Calendar$Calendars: android.net.Uri CONTENT_URI>
Permission:android.permission.WRITE_EXTERNAL_STORAGE
<android.provider.Downloads$Impl: android.net.Uri PUBLICLY_ACCESSIBLE_DOWNLOADS_URI>
<com.android.providers.media.MediaProvider: android.net.Uri ALBUMART_URI>
<android.provider.Downloads$Impl: android.net.Uri ALL_DOWNLOADS_CONTENT_URI>
<android.provider.Downloads: android.net.Uri CONTENT_URI>
<android.provider.Downloads$Impl: android.net.Uri CONTENT_URI>
<com.android.music.MusicUtils: android.net.Uri sArtworkUri>
Permission:android.permission.WRITE_CONTACTS
<android.provider.Contacts$People: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$RawContactsEntity: android.net.Uri PROFILE_CONTENT_URI>
<android.provider.Contacts$Groups: android.net.Uri DELETED_CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FREQUENT_URI>
<android.provider.ContactsContract$Groups: android.net.Uri CONTENT_SUMMARY_URI>
<android.provider.SocialContract: android.net.Uri AUTHORITY_URI>
<android.provider.ContactsContract$RawContactsEntity: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Phones: android.net.Uri CONTENT_FILTER_URL>
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryListQuery: android.net.Uri URI>
<android.provider.ContactsContract$StreamItems: android.net.Uri CONTENT_PHOTO_URI>
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_WITH_PHONES_URI>
<android.provider.ContactsContract$DisplayPhoto: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Outbox: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Directory: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$CommonDataKinds$Callable: android.net.Uri CONTENT_FILTER_URI>
<android.provider.ContactsContract$StreamItems: android.net.Uri CONTENT_URI>
<com.android.mms.data.Contact$ContactsCache: android.net.Uri PHONES_WITH_PRESENCE_URI>
<android.provider.Telephony$Sms: android.net.Uri CONTENT_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>
<com.android.calendar.event.AttendeesView: android.net.Uri CONTACT_DATA_WITH_PRESENCE_URI>
<com.android.contacts.model.AccountWithDataSet: android.net.Uri RAW_CONTACTS_URI_LIMIT_1>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_FILTER_URI>
<android.provider.ContactsContract$StreamItems: android.net.Uri CONTENT_LIMIT_URI>
<android.provider.ContactsContract$DisplayPhoto: android.net.Uri CONTENT_MAX_DIMENSIONS_URI>
<android.provider.Telephony$Sms$Sent: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$RawContacts: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Conversations: android.net.Uri CONTENT_URI>
<com.android.mms.transaction.MessageStatusReceiver: android.net.Uri STATUS_URI>
<com.android.contacts.GroupListLoader: android.net.Uri GROUP_LIST_URI>
<android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_FILTER_URI>
<com.android.contacts.model.AccountTypeWithDataSet: android.net.Uri RAW_CONTACTS_URI_LIMIT_1>
<android.provider.ContactsContract$StatusUpdates: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$StatusUpdates: android.net.Uri PROFILE_CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI>
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_FAVORITES_URI>
<android.provider.ContactsContract$Profile: android.net.Uri CONTENT_VCARD_URI>
<com.android.internal.telephony.SMSDispatcher: android.net.Uri mRawUri>
<android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_EMAIL_URI>
<android.provider.Contacts: android.net.Uri CONTENT_URI>
<com.android.common.contacts.DataUsageStatUpdater$DataUsageFeedback: android.net.Uri FEEDBACK_URI>
<android.provider.Contacts$People: android.net.Uri DELETED_CONTENT_URI>
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_URI>
<android.provider.SocialContract$Activities: android.net.Uri CONTENT_CONTACT_STATUS_URI>
<android.provider.ContactsContract$Profile: android.net.Uri CONTENT_RAW_CONTACTS_URI>
<android.provider.ContactsContract$Groups: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_FILTER_URI>
<com.android.mms.transaction.MessageStatusService: android.net.Uri STATUS_URI>
<android.provider.Contacts$Phones: android.net.Uri CONTENT_URI>
<android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Inbox: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Settings: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri NOTIFICATION_URI>
<com.android.calendar.EventInfoActivity: android.net.Uri CONTACT_DATA_WITH_PRESENCE_URI>
<android.provider.Telephony$Sms$Draft: android.net.Uri CONTENT_URI>
<com.android.contacts.ContactsLiveFolders$PhoneContacts: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Groups: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$DataUsageFeedback: android.net.Uri DELETE_USAGE_URI>
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Profile: android.net.Uri CONTENT_URI>
<android.provider.Contacts$People: android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI>
<android.provider.Contacts$Presence: android.net.Uri CONTENT_URI>
<android.provider.Contacts$People: android.net.Uri CONTENT_FILTER_URI>
<com.android.ex.chips.BaseRecipientAdapter$DirectoryListQuery: android.net.Uri URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FILTER_URI>
<android.provider.ContactsContract$Settings: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_GROUP_URI>
<android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_FILTER_URI>
<android.provider.ContactsContract$AggregationExceptions: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI_WITH_VOICEMAIL>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>
<com.android.nfc.P2pLinkManager: android.net.Uri PROFILE_URI>
<android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Organizations: android.net.Uri CONTENT_URI>
<android.provider.Contacts$GroupMembership: android.net.Uri RAW_CONTENT_URI>
<com.android.mms.data.Contact$ContactsCache: android.net.Uri EMAIL_WITH_PRESENCE_URI>
<android.provider.ContactsContract$SyncState: android.net.Uri CONTENT_URI>
<android.provider.Contacts$Extensions: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri ICC_URI>
<com.android.email.activity.setup.AccountSetupNames: android.net.Uri PROFILE_URI>
<android.provider.Contacts$Photos: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>
<android.provider.ContactsContract$CommonDataKinds$Callable: android.net.Uri CONTENT_URI>
<com.android.contacts.ContactsLiveFolders$StarredContacts: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_MULTI_VCARD_URI>
<android.provider.ContactsContract$DataUsageFeedback: android.net.Uri FEEDBACK_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI>
<android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI>
<com.android.mms.ui.ManageSimMessages: android.net.Uri ICC_URI>
<android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_URI>
<android.provider.CallLog: android.net.Uri CONTENT_URI>
<com.android.contacts.list.DirectoryListLoader$DirectoryQuery: android.net.Uri URI>
<android.provider.SocialContract$Activities: android.net.Uri CONTENT_URI>
<com.android.contacts.ContactsLiveFolders$AllContacts: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$ProviderStatus: android.net.Uri CONTENT_URI>
<android.provider.SocialContract$Activities: android.net.Uri CONTENT_AUTHORED_BY_URI>
<android.provider.ContactsContract$ProfileSyncState: android.net.Uri CONTENT_URI>
<android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_VCARD_URI>
Permission:android.permission.RECEIVE_SMS
<com.android.mms.transaction.MessageStatusService: android.net.Uri STATUS_URI>
<android.provider.Telephony$Sms$Inbox: android.net.Uri CONTENT_URI>
<com.android.mms.ui.ManageSimMessages: android.net.Uri ICC_URI>
<android.provider.Telephony$Sms$Conversations: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri ICC_URI>
<com.android.mms.transaction.MessageStatusReceiver: android.net.Uri STATUS_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri NOTIFICATION_URI>
<android.provider.Telephony$Sms: android.net.Uri CONTENT_URI>
<com.android.internal.telephony.SMSDispatcher: android.net.Uri mRawUri>
<android.provider.Telephony$Sms$Draft: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Sent: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Outbox: android.net.Uri CONTENT_URI>
Permission:android.permission.SEND_SMS
<com.android.mms.transaction.MessageStatusService: android.net.Uri STATUS_URI>
<android.provider.Telephony$Sms$Inbox: android.net.Uri CONTENT_URI>
<com.android.mms.ui.ManageSimMessages: android.net.Uri ICC_URI>
<android.provider.Telephony$Sms$Conversations: android.net.Uri CONTENT_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri ICC_URI>
<com.android.mms.transaction.MessageStatusReceiver: android.net.Uri STATUS_URI>
<com.android.providers.telephony.SmsProvider: android.net.Uri NOTIFICATION_URI>
<android.provider.Telephony$Sms: android.net.Uri CONTENT_URI>
<com.android.internal.telephony.SMSDispatcher: android.net.Uri mRawUri>
<android.provider.Telephony$Sms$Draft: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Sent: android.net.Uri CONTENT_URI>
<android.provider.Telephony$Sms$Outbox: android.net.Uri CONTENT_URI>
Permission:android.permission.WRITE_CALL_LOG
<android.provider.CallLog$Calls: android.net.Uri CONTENT_FILTER_URI>
<android.provider.CallLog: android.net.Uri CONTENT_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI_WITH_VOICEMAIL>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>
Permission:android.permission.READ_CALL_LOG
<android.provider.CallLog$Calls: android.net.Uri CONTENT_FILTER_URI>
<android.provider.CallLog: android.net.Uri CONTENT_URI>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI_WITH_VOICEMAIL>
<android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>
Permission:android.permission.READ_EXTERNAL_STORAGE
<com.android.providers.media.MediaProvider: android.net.Uri ALBUMART_URI>
<com.android.music.MusicUtils: android.net.Uri sArtworkUri>
Permission:android.permission.READ_PHONE_STATE
<com.android.exchange.provider.ExchangeProvider: android.net.Uri GAL_URI>
Permission:android.permission.READ_CONTACTS
content://icc
content://com.android.social
content://contacts
content://com.android.contacts
content://call_log
content://com.android.exchange.directory.provider
Permission:android.permission.READ_SMS
content://sms
content://mms-sms
content://mms
content://com.android.mms.SuggestionsProvider
Permission:android.permission.WRITE_CALENDAR
content://com.android.calendar
Permission:android.permission.READ_CALENDAR
content://com.android.calendar
Permission:android.permission.WRITE_EXTERNAL_STORAGE
content://media/external/
Permission:android.permission.WRITE_CONTACTS
content://icc
content://com.android.social
content://contacts
content://com.android.contacts
content://call_log
Permission:android.permission.WRITE_CALL_LOG
content://call_log
Permission:android.permission.READ_CALL_LOG
content://call_log
Permission:android.permission.READ_EXTERNAL_STORAGE
content://media/external/
